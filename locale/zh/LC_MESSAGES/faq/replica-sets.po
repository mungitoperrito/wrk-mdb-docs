#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# bb3fd02e093544a2be704e1020e89f91
#: ../source/faq/replica-sets.txt:3
msgid "FAQ: Replication and Replica Sets"
msgstr ""

# 3b68a43ac7f440e9906cbd1805fdcb96
#: ../source/faq/replica-sets.txt
msgid "On this page"
msgstr ""

# 8f4bbffc00914d69a0a8bb36e057d028
#: ../source/faq/replica-sets.txt:13
msgid ""
"This document answers common questions about replication in MongoDB. See "
"also the :doc:`/replication` section in the manual, which provides an "
":doc:`overview of replication </replication>`, including details on:"
msgstr ""

# 89adfb32a955409ea3e62c9c5f2c7743
#: ../source/faq/replica-sets.txt:17
msgid ":doc:`/core/replica-set-members`"
msgstr ""

# 713dbed3e50748e7adc4f4ff87d08e79
#: ../source/faq/replica-sets.txt:19
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

# a84173ab79f34569a08e43963d1b55e7
# 9f939934e4644ab8a1bf5f8b7635bbef
#: ../source/faq/replica-sets.txt:21 ../source/faq/replica-sets.txt:55
msgid ":doc:`/core/replica-set-elections`"
msgstr ""

# 1f188726edd9443786c0f8fd2eb7b4e8
#: ../source/faq/replica-sets.txt:24
msgid "What kinds of replication does MongoDB support?"
msgstr ""

# 138864c429db468e8304ba5eafd6c6a9
#: ../source/faq/replica-sets.txt:26
msgid ""
"MongoDB supports :doc:`replica sets </replication>`, which can have up to"
" :ref:`50 nodes <3.0-replica-sets-max-members>`."
msgstr ""

# 1c9451b92ffa4ba3af4fd672c5284670
#: ../source/faq/replica-sets.txt:29
msgid ""
"MongoDB also supports master-slave replication; however, replica sets are"
" the recommended replication topology. However, if your deployment "
"requires more than 50 nodes, you must use master/slave replication."
msgstr ""

# ce4cb9a4d5be4f4bb3881b9a5749c2e0
#: ../source/faq/replica-sets.txt:34
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

# a456689a16a6491ea649a3d1ac97dbd2
# 387e2647734e4ee6891367a1a7482b7e
#: ../source/faq/replica-sets.txt:36 ../source/faq/replica-sets.txt:105
msgid "Yes."
msgstr ""

# 1aa69bda10f54a0da7f612c575d89c96
#: ../source/faq/replica-sets.txt:38
msgid ""
"For example, a deployment may maintain a :term:`primary` and "
":term:`secondary` in an East-coast data center along with a "
":term:`secondary` member for disaster recovery in a West-coast data "
"center."
msgstr ""

# 9d0f7ec9bf7d4c75a1a2a127292b17b4
#: ../source/faq/replica-sets.txt:42
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

# 9f13373636ae4221bc2073afad1b363a
#: ../source/faq/replica-sets.txt:45
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

# 2d261632ebec447188b0f8b3e3d36bdf
#: ../source/faq/replica-sets.txt:47
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

# 91c3325a5bd94c2198e450d52b7c50cc
#: ../source/faq/replica-sets.txt:49
msgid ""
"Members of the set will attempt to reconnect to the other members of the "
"set in response to networking flaps. This does not require administrator "
"intervention. However, if the network connections among the nodes in the "
"replica set are very slow, it might not be possible for the members of "
"the node to keep up with the replication."
msgstr ""

# 1a710779f2514c1ca45f00618714d4d4
#: ../source/faq/replica-sets.txt:58
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

# 8f7e52551b8b4825a5f6d426dc369937
#: ../source/faq/replica-sets.txt:60
msgid ""
":term:`Journaling <journal>` facilitates faster crash recovery. Prior to "
"journaling, crashes often required :dbcommand:`database repairs "
"<repairDatabase>` or full data resync. Both were slow, and the first was "
"unreliable."
msgstr ""

# d436037ff2254125ae133a62afbf053e
#: ../source/faq/replica-sets.txt:64
msgid ""
"Journaling is particularly useful for protection against power failures, "
"especially if your replica set resides in a single data center or power "
"circuit."
msgstr ""

# 1aa783d970c440039ff030de50500aae
#: ../source/faq/replica-sets.txt:68
msgid ""
"When a :term:`replica set` runs with journaling, you can safely restart "
":program:`mongod` instances without additional intervention."
msgstr ""

# 3b1519b13b6b48d2874020e45b86317d
#: ../source/faq/replica-sets.txt:73
msgid ""
"Journaling requires some resource overhead for write operations. "
"Journaling has no effect on read performance, however."
msgstr ""

# 909ef62e461144f09bfece4677bdd722
#: ../source/faq/replica-sets.txt:76
msgid ""
"Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and"
" greater."
msgstr ""

# 3b2690458a514e91978196402bb64371
#: ../source/faq/replica-sets.txt:80
msgid "What information do arbiters exchange with the rest of the replica set?"
msgstr ""

# 91e0cbe82903429eb1605c265a5b66ac
#: ../source/faq/replica-sets.txt:82
msgid ""
"Arbiters never receive the contents of a collection but do exchange the "
"following data with the rest of the replica set:"
msgstr ""

# db7d019fada746e2941fb85ddd63a2fc
#: ../source/faq/replica-sets.txt:85
msgid ""
"Credentials used to authenticate the arbiter with the replica set. These "
"exchanges are encrypted."
msgstr ""

# c987bf508b464653bca7ae0a2d5a1431
#: ../source/faq/replica-sets.txt:88
msgid ""
"Replica set configuration data and voting data. This information is not "
"encrypted. Only credential exchanges are encrypted."
msgstr ""

# caa361a398104ceab221a479d0b497be
#: ../source/faq/replica-sets.txt:91
msgid ""
"If your MongoDB deployment uses TLS/SSL, then all communications between "
"arbiters and the other members of the replica set are secure."
msgstr ""

# 9a3aa21ff8eb433eb240176ba09076a7
#: ../source/faq/replica-sets.txt:94
msgid ""
"See the documentation for :doc:`/tutorial/configure-ssl` for more "
"information. As with all MongoDB components, run arbiters on secure "
"networks."
msgstr ""

# 11dae01efcf749bdb013dca1d561a1b1
#: ../source/faq/replica-sets.txt
msgid "See"
msgstr ""

# 9d6c28fb1f644fbdb61e3cd73b8e15ed
#: ../source/faq/replica-sets.txt:103
msgid ""
"Is it normal for replica set members to use different amounts of disk "
"space?"
msgstr ""

# 367dfbb086944f138325ba8acd190fd6
#: ../source/faq/replica-sets.txt:107
msgid ""
"Factors including: different oplog sizes, different levels of storage "
"fragmentation, and MongoDB's data file pre-allocation can lead to some "
"variation in storage utilization between nodes. Storage use disparities "
"will be most pronounced when you add members at different times."
msgstr ""

# 45cc23e0cf074ba9bb5fca1538c8f4db
#: ../source/faq/replica-sets.txt:114
msgid "Can I rename a replica set?"
msgstr ""

# 2ed51b1e89f2466abe0e3451a2cddcc8
#: ../source/faq/replica-sets.txt:116
msgid "No."
msgstr ""

# 512b5ff1b73f4c0d938026ca51d6d311
#: ../source/faq/replica-sets.txt:118
msgid ""
"You can use the backup and restore procedure described in the "
":doc:`/tutorial/restore-replica-set-from-backup` tutorial to create a new"
" replica set with the desired name. Downtime may be necessary in order to"
" ensure parity between the original replica set and the new one."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "What do the terms \"primary\" and \"master\" mean?"
#~ msgstr ""

#~ msgid "What do the terms \"secondary\" and \"slave\" mean?"
#~ msgstr ""

#~ msgid ""
#~ "This document answers common questions "
#~ "about database replication in MongoDB."
#~ msgstr ""

#~ msgid ""
#~ "If you don't find the answer "
#~ "you're looking for, check the "
#~ ":doc:`complete list of FAQs </faq>` or"
#~ " post your question to the `MongoDB"
#~ " User Mailing List "
#~ "<https://groups.google.com/forum/?fromgroups#!forum/mongodb-"
#~ "user>`_."
#~ msgstr ""

#~ msgid "How long does replica set failover take?"
#~ msgstr ""

#~ msgid "The election itself may take another 10-30 seconds."
#~ msgstr ""

#~ msgid ""
#~ "If the TCP connection between the "
#~ "secondaries and the :term:`primary` instance"
#~ " breaks, a :term:`replica set` will "
#~ "automatically elect one of the "
#~ ":term:`secondary` members of the set as"
#~ " primary."
#~ msgstr ""

#~ msgid ""
#~ "In MongoDB 3.0.0, replica sets can "
#~ "have up to :ref:`50 nodes <3.0"
#~ "-replica-sets-max-members>`. Previous "
#~ "versions limited the maximum number of"
#~ " replica set members to 12."
#~ msgstr ""

#~ msgid ""
#~ "When a :term:`replica set` runs with "
#~ "journaling, :program:`mongod` instances can "
#~ "safely restart without any administrator "
#~ "intervention."
#~ msgstr ""

#~ msgid "How many arbiters do replica sets need?"
#~ msgstr ""

#~ msgid ""
#~ "Some configurations do not require any"
#~ " :term:`arbiter` instances. Arbiters vote "
#~ "in :term:`elections <election>` for "
#~ ":term:`primary` but do not replicate the"
#~ " data like :term:`secondary` members."
#~ msgstr ""

#~ msgid ""
#~ ":term:`Replica sets <replica set>` require "
#~ "a majority of the remaining nodes "
#~ "present to elect a primary. Arbiters "
#~ "allow you to construct this majority "
#~ "without the overhead of adding "
#~ "replicating nodes to the system."
#~ msgstr ""

#~ msgid ""
#~ "There are many possible replica set "
#~ ":doc:`architectures </core/replica-set-"
#~ "architectures>`."
#~ msgstr ""

#~ msgid ""
#~ "A replica set with an odd number"
#~ " of voting nodes does not need "
#~ "an arbiter."
#~ msgstr ""

#~ msgid ""
#~ "A common configuration consists of two"
#~ " replicating nodes that include a "
#~ ":term:`primary` and a :term:`secondary`, as"
#~ " well as an :term:`arbiter` for the"
#~ " third node. This configuration makes "
#~ "it possible for the set to elect"
#~ " a primary in the event of "
#~ "failure, without requiring three replicating"
#~ " nodes."
#~ msgstr ""

#~ msgid ""
#~ "You may also consider adding an "
#~ "arbiter to a set if it has "
#~ "an equal number of nodes in two"
#~ " facilities and network partitions between"
#~ " the facilities are possible. In "
#~ "these cases, the arbiter will break "
#~ "the tie between the two facilities "
#~ "and allow the set to elect a "
#~ "new primary."
#~ msgstr ""

#~ msgid ""
#~ "Credentials used to authenticate the "
#~ "arbiter with the replica set. All "
#~ "MongoDB processes within a replica set"
#~ " use keyfiles. These exchanges are "
#~ "encrypted."
#~ msgstr ""

#~ msgid ""
#~ "If your MongoDB deployment uses TLS/SSL,"
#~ " then all communications between arbiters"
#~ " and the other members of the "
#~ "replica set are secure. See the "
#~ "documentation for :doc:`/tutorial/configure-ssl` "
#~ "for more information. Run all arbiters"
#~ " on secure networks, as with all "
#~ "MongoDB components."
#~ msgstr ""

#~ msgid "Which members of a replica set vote in elections?"
#~ msgstr ""

#~ msgid ""
#~ "Additionally, the :data:`~replSetGetStatus.members.state`"
#~ " of the voting members also determine"
#~ " whether the member can vote. Only"
#~ " voting members in the following "
#~ "states are eligible to vote:"
#~ msgstr ""

#~ msgid "``PRIMARY``"
#~ msgstr ""

#~ msgid "``SECONDARY``"
#~ msgstr ""

#~ msgid "``RECOVERING``"
#~ msgstr ""

#~ msgid "``ARBITER``"
#~ msgstr ""

#~ msgid "``ROLLBACK``"
#~ msgstr ""

#~ msgid ":ref:`replica-set-elections`"
#~ msgstr ""

#~ msgid "Do hidden members vote in replica set elections?"
#~ msgstr ""

#~ msgid "MongoDB supports :doc:`replica sets </core/replication-introduction>`."
#~ msgstr ""

#~ msgid "What does the term \"primary\" mean?"
#~ msgstr ""

#~ msgid ""
#~ ":term:`Primary` is a :doc:`replica set "
#~ "</core/replication-introduction>` member that "
#~ "can accept writes. Only the primary "
#~ "can accept write operations. [#edge-"
#~ "cases-2-primaries]_"
#~ msgstr ""

#~ msgid ""
#~ "In :ref:`some circumstances <edge-cases>`, "
#~ "two nodes in a replica set may "
#~ "*transiently* believe that they are the"
#~ " primary, but at most, one of "
#~ "them will be able to complete "
#~ "writes with :writeconcern:`{ w: \"majority\""
#~ " } <\"majority\">` write concern. The "
#~ "node that can complete :writeconcern:`{ "
#~ "w: \"majority\" } <\"majority\">` writes "
#~ "is the current primary, and the "
#~ "other node is a former primary "
#~ "that has not yet recognized its "
#~ "demotion, typically due to a "
#~ ":term:`network partition`. When this occurs,"
#~ " clients that connect to the former"
#~ " primary may observe stale data "
#~ "despite having requested read preference "
#~ ":readmode:`primary`, and new writes to "
#~ "the former primary will eventually roll"
#~ " back."
#~ msgstr ""

#~ msgid "What does the term \"secondary\" mean?"
#~ msgstr ""

#~ msgid ""
#~ ":term:`Secondary` nodes are the read-"
#~ "only nodes in :doc:`replica sets </core"
#~ "/replication-introduction>`."
#~ msgstr ""

#~ msgid ""
#~ "It varies, but a replica set will"
#~ " generally select a new primary "
#~ "within a minute."
#~ msgstr ""

#~ msgid ""
#~ "For instance, it may take 10-30 "
#~ "seconds for the members of a "
#~ ":term:`replica set` to declare a "
#~ ":term:`primary` inaccessible (see "
#~ ":rsconf:`~settings.electionTimeoutMillis`). One of "
#~ "the remaining secondaries holds an "
#~ ":term:`election` to elect itself as a"
#~ " new primary. During the election, "
#~ "the cluster is unavailable for writes."
#~ msgstr ""

#~ msgid ""
#~ "Starting in MongoDB 3.2, with the "
#~ ":ref:`replication election enhancements <3.2-rel-"
#~ "notes-rs-enhancements>`, MongoDB reduces "
#~ "replica set failover time. See "
#~ ":ref:`replication election enhancements <3.2-rel-"
#~ "notes-rs-enhancements>` for details."
#~ msgstr ""

#~ msgid ""
#~ "All members of a replica set, "
#~ "unless the value of :rsconf:`votes "
#~ "<members[n].votes>` is equal to ``0``, "
#~ "vote in elections. This includes all "
#~ ":ref:`delayed <replica-set-delayed-members>`,"
#~ " :ref:`hidden <replica-set-hidden-members>`"
#~ " and :ref:`secondary-only <replica-set-"
#~ "secondary-only-members>` members. "
#~ ":ref:`Arbiters <replica-set-arbiters>` always"
#~ " vote in elections and always have"
#~ " ``1`` vote."
#~ msgstr ""

#~ msgid ""
#~ ":ref:`Hidden members <replica-set-hidden-"
#~ "members>` of :term:`replica sets <replica "
#~ "set>` *do* vote in elections. To "
#~ "exclude a member from voting in an"
#~ " :term:`election`, change the value of "
#~ "the member's :rsconf:`members[n].votes` "
#~ "configuration to ``0``."
#~ msgstr ""

#~ msgid ""
#~ "As of MongoDB 2.6 there are no "
#~ "tools or functions designed specifically "
#~ "to rename a replica set."
#~ msgstr ""

