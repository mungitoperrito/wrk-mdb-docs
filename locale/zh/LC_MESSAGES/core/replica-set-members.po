#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# 41f2987abbe9491f964c6a95c337ea39
#: ../source/core/replica-set-members.txt:3
msgid "Replica Set Members"
msgstr ""

# 4146adfdca9d4f59b8cb43046b3dfa62
#: ../source/core/replica-set-members.txt:13
msgid ""
"A *replica set* in MongoDB is a group of :program:`mongod` processes that"
" provide redundancy and high availability. The members of a replica set "
"are:"
msgstr ""

# be43d9565e2843a6b9a2006527089ea0
#: ../source/core/replica-set-members.txt:18
msgid ":ref:`replica-set-primary-member`."
msgstr ""

# 244bfa76063c4e2c8083a56559d76822
#: ../source/core/replica-set-members.txt:18
msgid "The primary receives all write operations."
msgstr ""

# cc69dba1d0e04ae382ec3686dbab7f7f
#: ../source/core/replica-set-members.txt:25
msgid ":ref:`replica-set-secondary-members`."
msgstr ""

# da4b6780739746b4ac4d2c96602c0ee8
#: ../source/core/replica-set-members.txt:21
msgid ""
"Secondaries replicate operations from the primary to maintain an "
"identical data set. Secondaries may have additional configurations for "
"special usage profiles. For example, secondaries may be :ref:`non-voting "
"<replica-set-non-voting-members>` or :ref:`priority 0 <replica-set-"
"secondary-only-members>`."
msgstr ""

# 3e4520bbe8524d42b16a6d4a4a9b044c
#: ../source/core/replica-set-members.txt:27
msgid ""
"You can also maintain an :ref:`arbiter <replica-set-arbiters>` as part of"
" a replica set. Arbiters do not keep a copy of the data. However, "
"arbiters play a role in the elections that select a primary if the "
"current primary is unavailable."
msgstr ""

# 5cb493b69ba3467f93836b832ae6efc2
#: ../source/core/replica-set-members.txt:32
msgid ""
"The minimum recommended configuration for a replica set is a three member"
" replica set with three data-bearing members: one :ref:`primary <replica-"
"set-primary-member>` and two :ref:`secondary <replica-set-secondary-"
"members>` members. You may alternatively deploy a three member replica "
"set with *two* data-bearing members: a :ref:`primary <replica-set-"
"primary-member>`, a :ref:`secondary <replica-set-secondary-members>`, and"
" an :ref:`arbiter <replica-set-arbiters>`, but replica sets with at least"
" three data-bearing members offer better redundancy."
msgstr ""

# c335fabf7bb140ae995aa079ab551d4d
#: ../source/core/replica-set-members.txt:44
msgid ""
"A replica set can have up to :ref:`50 members <3.0-replica-sets-max-"
"members>` but only 7 voting members. [#master-slave]_ In previous "
"versions, replica sets can have up to 12 members."
msgstr ""

# c8513afdc3a141ee9ad6ed7aa2e82832
#: ../source/includes/fact-master-slave-workaround.rst:1
msgid ""
"While replica sets are the recommended solution for production, a replica"
" set can support up to :limit:`50 members <Number of Members of a Replica"
" Set>` in total. If your deployment requires more than 50 members, youâ€™ll"
" need to use :doc:`master-slave </core/master-slave>` replication. "
"However, master-slave replication lacks the automatic failover "
"capabilities."
msgstr ""

# ad37114e3f064175bed5767cad796de1
#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
msgid ""
"In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may"
" *transiently* believe that they are the primary, but at most, one of "
"them will be able to complete writes with :writeconcern:`{ w: "
"\"majority\" } <\"majority\">` write concern. The node that can complete "
":writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current "
"primary, and the other node is a former primary that has not yet "
"recognized its demotion, typically due to a :term:`network partition`. "
"When this occurs, clients that connect to the former primary may observe "
"stale data despite having requested read preference :readmode:`primary`, "
"and new writes to the former primary will eventually roll back."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "The minimum requirements for a replica"
#~ " set are: A :ref:`primary <replica-"
#~ "set-primary-member>`, a :ref:`secondary "
#~ "<replica-set-secondary-members>`, and an"
#~ " :ref:`arbiter <replica-set-arbiters>`. "
#~ "Most deployments, however, will keep "
#~ "three members that store data: A "
#~ ":ref:`primary <replica-set-primary-member>`"
#~ " and two :ref:`secondary members "
#~ "<replica-set-secondary-members>`."
#~ msgstr ""

