# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/indexes.txt:5
# 3d793a3b9f6d49b6ad04ec369b44bcf6
msgid "Indexes"
msgstr ""

#: ../source/indexes.txt:0
# 3da327c399ae409f8f6cfec4aab5a4cc
msgid "On this page"
msgstr ""

#: ../source/indexes.txt:15
# ec53dfac939e4076a064f8048050e967
msgid "Indexes support the efficient execution of queries in MongoDB. Without indexes, MongoDB must perform a *collection scan*, i.e. scan every document in a collection, to select those documents that match the query statement. If an appropriate index exists for a query, MongoDB can use the index to limit the number of documents it must inspect."
msgstr ""

#: ../source/indexes.txt:22
# d8ca8563e48547778e55aa03347cc968
msgid "Indexes are special data structures [#b-tree]_ that store a small portion of the collection's data set in an easy to traverse form. The index stores the value of a specific field or set of fields, ordered by the value of the field. The ordering of the index entries supports efficient equality matches and range-based query operations. In addition, MongoDB can return sorted results by using the ordering in the index."
msgstr ""

#: ../source/indexes.txt:30
# 69902d01a31b40259257ace55a6e1002
msgid "The following diagram illustrates a query that selects and orders the matching documents using an index:"
msgstr ""

#: ../source/indexes.txt:35
# e683e15b76744c56a99f84b56f7413d2
msgid "Fundamentally, indexes in MongoDB are similar to indexes in other database systems. MongoDB defines indexes at the :term:`collection` level and supports indexes on any field or sub-field of the documents in a MongoDB collection."
msgstr ""

#: ../source/indexes.txt:47
# b0cc6491c5334734a985b6a0d208166a
msgid "Default ``_id`` Index"
msgstr ""

#: ../source/indexes.txt:49
# 4dc969b1d4264bdebaeb7188b22d7d0b
msgid "MongoDB creates a :ref:`unique index <index-type-unique>` on the :ref:`_id <document-id-field>` field during the creation of a collection. The ``_id`` index prevents clients from inserting two documents with the same value for the ``_id`` field. You cannot drop this index on the ``_id`` field."
msgstr ""

#: ../source/indexes.txt:57
# 338691ab3e0a44f493c21a9aeef95eb1
msgid "In :term:`sharded clusters <sharded cluster>`, if you do *not* use the ``_id`` field as the :term:`shard key`, then your application **must** ensure the uniqueness of the values in the ``_id`` field to prevent errors.  This is most-often done by using a standard auto-generated :term:`ObjectId`."
msgstr ""

#: ../source/indexes.txt:64
# 4afe143251994f6a85e6300e54d32952
msgid "Create an Index"
msgstr ""

#: ../source/indexes.txt:66
# 37b1f4124697426e80fe6a537eebd8c7
msgid "To create an index, use :method:`db.collection.createIndex()` or a similar :api:`method from your driver <>`."
msgstr ""

#: ../source/indexes.txt:73
# 22fe82b0c3314c3089ae520b8e4f1234
msgid "The :method:`db.collection.createIndex()` method only creates an index if an index of the same specification does not already exist."
msgstr ""

#: ../source/indexes.txt:76
# a4262046f05a40c485aeed8b61cdad44
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

#: ../source/indexes.txt:81
# c02e2a29a81d45c3b791d05b21b34506
msgid "Index Types"
msgstr ""

#: ../source/indexes.txt:83
# 98d0f8060079410a839ff6caeca2099f
msgid "MongoDB provides a number of different index types to support specific types of data and queries."
msgstr ""

#: ../source/indexes.txt:89
# 381da19d231c414fa1ba2062a13d2c7d
msgid "Single Field"
msgstr ""

#: ../source/indexes.txt:91
# d7b0dbd353234fed9503edae02f79b64
msgid "In addition to the MongoDB-defined ``_id`` index, MongoDB supports the creation of user-defined ascending/descending indexes on a :doc:`single field of a document </core/index-single>`."
msgstr ""

#: ../source/indexes.txt:97
# eaba9fc476b4487f820f3de83f0c35d0
msgid "For a single-field index and sort operations, the sort order (i.e. ascending or descending) of the index key does not matter because MongoDB can traverse the index in either direction."
msgstr ""

#: ../source/indexes.txt:101
# 2100424aef6f4f88b02b990d30066ef0
msgid "See :doc:`/core/index-single` and :ref:`sort-results-single-field` for more information on single-field indexes."
msgstr ""

#: ../source/indexes.txt:105
# c906836b0632404f986eca215888f743
msgid "Compound Index"
msgstr ""

#: ../source/indexes.txt:107
# 5bac19e2cf5b402884fa702167706e86
msgid "MongoDB also supports user-defined indexes on multiple fields, i.e. :doc:`compound indexes </core/index-compound>`."
msgstr ""

#: ../source/indexes.txt:110
# 98838055df1a4e7aa7efbdb08e688d85
msgid "The order of fields listed in a compound index has significance. For instance, if a compound index consists of ``{ userid: 1, score: -1 }``, the index sorts first by ``userid`` and then, within each ``userid`` value, sorts by ``score``."
msgstr ""

#: ../source/indexes.txt:117
# f4d19f00e7214d71b9c61faffe7f93e5
msgid "For compound indexes and sort operations, the sort order (i.e. ascending or descending) of the index keys can determine whether the index can support a sort operation. See :ref:`index-ascending-and-descending` for more information on the impact of index order on results in compound indexes."
msgstr ""

#: ../source/indexes.txt:123
# 574d221efe49463181e00216de89fd48
msgid "See :doc:`/core/index-compound` and :ref:`sort-on-multiple-fields` for more information on compound indexes."
msgstr ""

#: ../source/indexes.txt:127
# 0652ae57634b418b86aea4a51b25e706
msgid "Multikey Index"
msgstr ""

#: ../source/indexes.txt:129
# 6bfca09770194a5fba032bcda44ea129
msgid "MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the content stored in arrays. If you index a field that holds an array value, MongoDB creates separate index entries for *every* element of the array. These :doc:`multikey indexes </core/index-multikey>` allow queries to select documents that contain arrays by matching on element or elements of the arrays. MongoDB automatically determines whether to create a multikey index if the indexed field contains an array value; you do not need to explicitly specify the multikey type."
msgstr ""

#: ../source/indexes.txt:140
# c06235abdcc44bcb9875db8842cd1e57
msgid "See :doc:`/core/index-multikey` and :doc:`/core/multikey-index-bounds` for more information on multikey indexes."
msgstr ""

#: ../source/indexes.txt:144
# 1bc4f214f94c40f4a0a0996eae02340d
msgid "Geospatial Index"
msgstr ""

#: ../source/indexes.txt:146
# 0c7c64de4b2c46e2b3ed54fce8a458b0
msgid "To support efficient queries of geospatial coordinate data, MongoDB provides two special indexes: :doc:`2d indexes </core/2d>` that uses planar geometry when returning results and :doc:`2dsphere indexes </core/2dsphere>` that use spherical geometry to return results."
msgstr ""

#: ../source/indexes.txt:151
# f01e31135135425dbab6d3c9d625aa0c
msgid "See :doc:`/core/geospatial-indexes` for a high level introduction to geospatial indexes."
msgstr ""

#: ../source/indexes.txt:155
# c13bf1e1d7744662b8ad61ebe904b042
msgid "Text Indexes"
msgstr ""

#: ../source/indexes.txt:157
# 50bc023d6a514cd99360830994c79531
msgid "MongoDB provides a ``text`` index type that supports searching for string content in a collection. These text indexes do not store language-specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in a collection to only store root words."
msgstr ""

#: ../source/indexes.txt:162
# 6426c35e82fd4c0781884142ed803ead
msgid "See :doc:`/core/index-text` for more information on text indexes and search."
msgstr ""

#: ../source/indexes.txt:166
# 1e4801b2b4ba430d88bbf9b9a3c778af
msgid "Hashed Indexes"
msgstr ""

#: ../source/indexes.txt:168
# 873509102a624209b097d6b2be613277
msgid "To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB provides a :doc:`hashed index </core/index-hashed>` type, which indexes the hash of the value of a field. These indexes have a more random distribution of values along their range, but *only* support equality matches and cannot support range-based queries."
msgstr ""

#: ../source/indexes.txt:175
# e3b7d7c793af44c0a4c71596691268d7
msgid "Index Properties"
msgstr ""

#: ../source/indexes.txt:178
# 9f1ff8291ae64bc78aeaa9e168232ec7
msgid "Unique Indexes"
msgstr ""

#: ../source/indexes.txt:180
# dc75b9aefa294247a593dea7dd369544
msgid "The :doc:`unique </core/index-unique>` property for an index causes MongoDB to reject duplicate values for the indexed field. Other than the unique constraint, unique indexes are functionally interchangeable with other MongoDB indexes."
msgstr ""

#: ../source/indexes.txt:186
# dcae40f88f034e79911d2ee7758d9362
msgid "Partial Indexes"
msgstr ""

#: ../source/indexes.txt:190
# d2c397e55ff4449ea1e7891d703b2fbd
msgid ":doc:`Partial indexes </core/index-partial>` only index the documents in a collection that meet a specified filter expression. By indexing a subset of the documents in a collection, partial indexes have lower storage requirements and reduced performance costs for index creation and maintenance."
msgstr ""

#: ../source/indexes.txt:196
# 3c1bc568cf0944908aeb3c9dd6cc6b0d
msgid "Partial indexes offer a superset of the functionality of sparse indexes and should be preferred over sparse indexes."
msgstr ""

#: ../source/indexes.txt:200
# 0d2e262151194dec8177aed6ca69e6b6
msgid "Sparse Indexes"
msgstr ""

#: ../source/indexes.txt:202
# 79074e531b9c4f6d95acc741b8274da7
msgid "The :doc:`sparse </core/index-sparse>` property of an index ensures that the index only contain entries for documents that have the indexed field. The index skips documents that *do not* have the indexed field."
msgstr ""

#: ../source/indexes.txt:206
# f7cd5a5bdb3d4a70824df57da4388743
msgid "You can combine the sparse index option with the unique index option to reject documents that have duplicate values for a field but ignore documents that do not have the indexed key."
msgstr ""

#: ../source/indexes.txt:211
# 25b307b3dd2346a182fbf4d788eb5251
msgid "TTL Indexes"
msgstr ""

#: ../source/indexes.txt:213
# e3cf4293f19245d7acb4423cd19f5f15
msgid ":doc:`TTL indexes </core/index-ttl>` are special indexes that MongoDB can use to automatically remove documents from a collection after a certain amount of time. This is ideal for certain types of information like machine generated event data, logs, and session information that only need to persist in a database for a finite amount of time."
msgstr ""

#: ../source/indexes.txt:219
# c8474334b20a4d318eb67ca93f3a2c43
msgid "See: :doc:`/tutorial/expire-data` for implementation instructions."
msgstr ""

#: ../source/indexes.txt:222
# 5afc380cfc514e9fb2f49c6fd793c1ab
msgid "Index Use"
msgstr ""

#: ../source/indexes.txt:224
# 9231e481431c4953bb73225118857e9a
msgid "Indexes can improve the efficiency of read operations. The :doc:`/tutorial/analyze-query-plan` tutorial provides an example of the execution statistics of a query with and without an index."
msgstr ""

#: ../source/indexes.txt:228
# 9ea187cc482a4be1abdfaef8291583fe
msgid "For information on how MongoDB chooses an index to use, see :ref:`query optimizer <read-operations-query-optimization>`."
msgstr ""

#: ../source/indexes.txt:232
# 7923f47f5ed84a7897feefe7f1aa5814
msgid "Covered Queries"
msgstr ""

#: ../source/indexes.txt:234
# 2e8c8e6abaa64b93b01ddc19fd2fac88
msgid "When the query criteria and the :term:`projection` of a query include *only* the indexed fields, MongoDB will return results directly from the index *without* scanning any documents or bringing documents into memory. These covered queries can be *very* efficient."
msgstr ""

#: ../source/indexes.txt:241
# d28e08356cba4067ba2eb81088d8fff5
msgid "For more information on covered queries, see :ref:`read-operations-covered-query`."
msgstr ""

#: ../source/indexes.txt:245
# 23b2f0fa7bc7474aa337f4265be8e60d
msgid "Index Intersection"
msgstr ""

#: ../source/indexes.txt:249
# d0c8a7b1d259446e921fdb0283a6a32d
msgid "MongoDB can use the :doc:`intersection of indexes </core/index-intersection>` to fulfill queries. For queries that specify compound query conditions, if one index can fulfill a part of a query condition, and another index can fulfill another part of the query condition, then MongoDB can use the intersection of the two indexes to fulfill the query. Whether the use of a compound index or the use of an index intersection is more efficient depends on the particular query and the system."
msgstr ""

#: ../source/indexes.txt:258
# ddb61b0c6b6c477ab4444da2c574807e
msgid "For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

#: ../source/indexes.txt:261
# 005278aaa20c47fc99ccabaf3f3d430f
msgid "Restrictions"
msgstr ""

#: ../source/indexes.txt:263
# 25d1d174c6714fd1bd3e42c7cf8b8374
msgid "Certain restrictions apply to indexes, such as the length of the index keys or the number of indexes per collection. See :ref:`Index Limitations <index-limitations>` for details."
msgstr ""

#: ../source/indexes.txt:268
# 77e1f69b650248d09bd103f28f289e32
msgid "Additional Considerations"
msgstr ""

#: ../source/indexes.txt:270
# 571ef1fda3e948fabc5112329a69bfa2
msgid "Although indexes can improve query performances, indexes also present some operational considerations. See :ref:`Operational Considerations for Indexes <data-model-indexes>` for more information."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:1
# 7c8076e6ebb74ef0be468091b667887a
msgid "If your collection holds a large amount of data, and your application needs to be able to access the data while building the index, consider building the index in the background, as described in :ref:`index-creation-background`."
msgstr ""

#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
# 6faaa1bb28d54451b895479f3f8e0823
msgid "To build or rebuild indexes for a :term:`replica set`, see :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:8
# 6df3f001d8e444edaa9348e0322ec5f0
msgid "Some drivers may specify indexes, using ``NumberLong(1)`` rather than ``1`` as the specification. This does not have any affect on the resulting index."
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
# c5912bb283cd4441b9ea6ed1243b8c30
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
# 7ff947fa13cb453d89cb4b3fd83f766d
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

#: ../source/indexes.txt:40
# dd5c42e952ff4840976c8814009d768e
msgid "_id index"
msgstr ""

#: ../source/indexes.txt:41
#: ../source/indexes.txt:42
# c0a2a2901dfb431f8953bfa55691ce67
# 0b412da03c894d9ba2cd5a85af9e312a
msgid "_id"
msgstr ""

#: ../source/indexes.txt:42
# 0b412da03c894d9ba2cd5a85af9e312a
msgid "index"
msgstr ""

#: ../source/indexes.txt:43
# 0223582727b747e59e372d0e59fa08be
msgid "index types"
msgstr ""

#: ../source/indexes.txt:43
# 0223582727b747e59e372d0e59fa08be
msgid "primary key"
msgstr ""

