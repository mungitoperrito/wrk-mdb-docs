# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/fundamentals.txt:3
# 2b44a977f1964647b2a21c18e3232583
msgid "FAQ: MongoDB Fundamentals"
msgstr ""

#: ../source/faq/fundamentals.txt:0
# 199a2b9dfab744ff91f2d040e4629609
msgid "On this page"
msgstr ""

#: ../source/faq/fundamentals.txt:13
# 55cad076a6ce4042b01564d4b8e1c232
msgid "This document answers some common questions about MongoDB."
msgstr ""

#: ../source/faq/fundamentals.txt:16
# e18b5fee330e4512b08eeef443b1c703
msgid "What platforms does MongoDB support?"
msgstr ""

#: ../source/faq/fundamentals.txt:18
# 0461e20fbfc645f18f207de493cfb5da
msgid "For the list of supported platforms, see :ref:`prod-notes-supported-platforms`."
msgstr ""

#: ../source/faq/fundamentals.txt:22
# 0fc4b9fcf90045fc80ce6693c9ee3014
msgid "How does a collection differ from a table?"
msgstr ""

#: ../source/faq/fundamentals.txt:24
# bbbb1d2112f54023b2823fa3acee0ec2
msgid "Instead of tables, a MongoDB database stores its data in :term:`collections <collection>`. A collection holds one or more :ref:`BSON documents <bson-document-format>`. Documents are analogous to records or rows in a relational database table. Each document has :ref:`one or more fields <document-structure>`; fields are similar to the columns in a relational database table."
msgstr ""

#: ../source/faq/fundamentals.txt:31
# d276f39bad114c59bfa8e1c2cb0afcd3
msgid ":doc:`/reference/sql-comparison`, :doc:`/introduction`"
msgstr ""

#: ../source/faq/fundamentals.txt:34
# 3fc817fa0b8d4c0499a9d68d725a46cb
msgid "How do I create a database and a collection?"
msgstr ""

#: ../source/faq/fundamentals.txt:36
# 41493713f423471397d41b27f4201012
msgid "If a database does not exist, MongoDB creates the database when you first store data for that database."
msgstr ""

#: ../source/faq/fundamentals.txt:39
# 89ce3d9c3a1c42d49d6c36d247c6aef3
msgid "If a collection does not exist, MongoDB creates the collection when you first store data for that collection. [#explicit-creation]_"
msgstr ""

#: ../source/faq/fundamentals.txt:42
# 3a57a2f8547347158daa5c7b33f51d63
msgid "As such, you can switch to a non-existent database (``use <dbname>``) and perform the following operation:"
msgstr ""

#: ../source/faq/fundamentals.txt:52
# 53eb323bc41c4f92ad6fb6e2fc8ee814
msgid "The ``insert`` operation creates both the database ``myNewDB`` and the collection ``myNewCollection1`` if they do not already exist."
msgstr ""

#: ../source/faq/fundamentals.txt:55
# 869502cac3d04ebcb279e480ab0fd542
msgid "The ``createIndex`` operation, which occurs after the ``myNewDB`` has been created, creates the index and the collection ``myNewCollection2`` if the collection does not exist. If ``myNewDb`` did not exist, the ``createIndex`` operation would have also created the ``myNewDB``."
msgstr ""

#: ../source/faq/fundamentals.txt:62
# ab946b56bbbd46e8b91b1ceaf4a0ebab
msgid "You can also create a collection explicitly using :method:`db.createCollection` if you want to specify specific options, such as maximum size or document validation rules."
msgstr ""

#: ../source/faq/fundamentals.txt:69
# 212b311c64564107b449f8c719fa6345
msgid "How do I define or alter the collection schema?"
msgstr ""

#: ../source/faq/fundamentals.txt:71
# d17de30c46494bb7a26a94c94638b528
msgid "You do not need to specify a schema for a collection in MongoDB. Although it is common for the documents in a collection to have a largely homogeneous structure, it is not a requirement; i.e. documents in a single collection do not need to have the same set of fields. The data type for a field can differ across documents in a collection as well."
msgstr ""

#: ../source/faq/fundamentals.txt:78
# f985a1db790b484f80e249176b37b71b
msgid "To change the structure of the documents in a collection, update the documents to the new structure. For instance, add new fields, remove existing ones, or update the value of a field to a new type."
msgstr ""

#: ../source/faq/fundamentals.txt:84
# 4814f15ff72447f58d91d76115325e43
msgid "Starting in MongoDB 3.2, however, you can enforce :doc:`document validation rules </core/document-validation>` for a collection during update and insert operations."
msgstr ""

#: ../source/faq/fundamentals.txt:88
# 3c399f2595704646a116f523381a93a4
msgid "Some collection properties, such as specifying a maximum size, can be specified during the explicit creation of a collection and be modified. See :method:`db.createCollection` and :dbcommand:`collMod`. If you are not specifying these properties, you do not need to explicitly create the collection since MongoDB creates new collections when you first store data for the collections."
msgstr ""

#: ../source/faq/fundamentals.txt:96
# 2c9dae4381eb49ceb1300cc3920787c4
msgid "Does MongoDB support SQL?"
msgstr ""

#: ../source/faq/fundamentals.txt:98
# 0cd0fc983e794aa783897017dfa6b89c
msgid "No. However, MongoDB does support a rich query language of its own. For examples on using MongoDB's query language, see :doc:`/crud`"
msgstr ""

#: ../source/faq/fundamentals.txt:102
# 4ca61c9ed2354a4a8430b2715c88c15a
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/faq/fundamentals.txt:105
# ca17579553ad453b9b5cb3a2ccb110ed
msgid "Does MongoDB support transactions?"
msgstr ""

#: ../source/faq/fundamentals.txt:107
# 3cae79d3f82445d1afd4c4990cda9774
msgid "MongoDB does not support multi-document transactions. However, MongoDB does provide atomic operations on a single document."
msgstr ""

#: ../source/faq/fundamentals.txt:110
# c6c166bf73a243d2ab9f4a19e7c8b76a
msgid "For more details on MongoDB's isolation guarantees and behavior under concurrency, see :doc:`/faq/concurrency`."
msgstr ""

#: ../source/faq/fundamentals.txt:116
# d2a1f9771f1240cd92f1f75b58a1fc46
msgid "Does MongoDB handle caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:118
# e3214821e27d4da68575e9b4d451031c
msgid "Yes. MongoDB keeps most recently used data in RAM. If you have created indexes for your queries and your working data set fits in RAM, MongoDB serves all queries from memory."
msgstr ""

#: ../source/faq/fundamentals.txt:122
# e94280fe1f8d4693a52bb1c7c686dd26
msgid "MongoDB does not cache the query results in order to return the cached results for identical queries."
msgstr ""

#: ../source/faq/fundamentals.txt:125
# 429e195e8cbb40c0813c64cc9e15c9c4
msgid "For more information on MongoDB and memory use, see :ref:`WiredTiger and Memory Use <wiredtiger-RAM>` and :ref:`MMAPv1 and Memory Use <mmapv1-RAM>`."
msgstr ""

#: ../source/faq/fundamentals.txt:132
# af12c9e063d24cdda925980f8a8acc74
msgid "How does MongoDB address SQL or Query injection?"
msgstr ""

#: ../source/faq/fundamentals.txt:135
# 70e908a495fb45a59bd7db9976d9851f
msgid "BSON"
msgstr ""

#: ../source/faq/fundamentals.txt:137
# cbe06244c79347dcb21796e5677411a8
msgid "As a client program assembles a query in MongoDB, it builds a BSON object, not a string. Thus traditional SQL injection attacks are not a problem. More details and some nuances are covered below."
msgstr ""

#: ../source/faq/fundamentals.txt:141
# 1136669f9d1d497daef02fc3e5a3c3d8
msgid "MongoDB represents queries as :term:`BSON` objects. Typically :doc:`client libraries </applications/drivers>` provide a convenient, injection free, process to build these objects. Consider the following C++ example:"
msgstr ""

#: ../source/faq/fundamentals.txt:151
# 38cd7f5f8eb14f4982ef66b8efe19bee
msgid "Here, ``my_query`` then will have a value such as ``{ name : \"Joe\" }``. If ``my_query`` contained special characters, for example ``,``, ``:``, and ``{``, the query simply wouldn't match any documents. For example, users cannot hijack a query and convert it to a delete."
msgstr ""

#: ../source/faq/fundamentals.txt:158
# 069d8fc694f94825b3d8806d6d6ecb95
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-disable-javascript-with-noscript.rst:1
# 392af4e364df40e2bfacbaa357de54e2
msgid "You can disable all server-side execution of JavaScript, by passing the :option:`--noscripting <mongod --noscripting>` option on the command line or setting :setting:`security.javascriptEnabled` in a configuration file."
msgstr ""

#: ../source/faq/fundamentals.txt:164
# 6bafcbd169754f32b05b55d8dd3b3d7d
msgid "All of the following MongoDB operations permit you to run arbitrary JavaScript expressions directly on the server:"
msgstr ""

#: ../source/faq/fundamentals.txt:167
# f957eec589ee4408b65d7ad303c8806a
msgid ":query:`$where`"
msgstr ""

#: ../source/faq/fundamentals.txt:168
# 84fc7888903643b19f0f503f98ebf5e9
msgid ":dbcommand:`mapReduce`"
msgstr ""

#: ../source/faq/fundamentals.txt:169
# eb786afd24494a9dae11d0a1fe61d51f
msgid ":dbcommand:`group`"
msgstr ""

#: ../source/faq/fundamentals.txt:171
# 33d809e4c1564cfcb904ef6c0f633f56
msgid "You must exercise care in these cases to prevent users from submitting malicious JavaScript."
msgstr ""

#: ../source/faq/fundamentals.txt:174
# 666ba55abac74971ab84875a28ae43b6
msgid "Fortunately, you can express most queries in MongoDB without JavaScript and for queries that require JavaScript, you can mix JavaScript and non-JavaScript in a single query. Place all the user-supplied fields directly in a :term:`BSON` field and pass JavaScript code to the :query:`$where` field."
msgstr ""

#: ../source/faq/fundamentals.txt:180
# 9b4d33786a794a10930f6fc0296d675c
msgid "If you need to pass user-supplied values in a :query:`$where` clause, you may escape these values with the ``CodeWScope`` mechanism. When you set user-submitted values as variables in the scope document, you can avoid evaluating them on the database server."
msgstr ""

