# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/storage.txt:3
# 0345cdfc9fdb4d89878b14aede9adfb7
msgid "FAQ: MongoDB Storage"
msgstr ""

#: ../source/faq/storage.txt:0
# a8eff05f86434dd3977e1037ec968f09
msgid "On this page"
msgstr ""

#: ../source/faq/storage.txt:13
# 3fa2715496174117a847aff7f2ab13a8
msgid "This document addresses common questions regarding MongoDB's storage system."
msgstr ""

#: ../source/faq/storage.txt:17
# fdedd05a9e944b8cbc1fe0c27a7edede
msgid "Storage Engine Fundamentals"
msgstr ""

#: ../source/faq/storage.txt:20
# 2a964b683ba24dc8ab0228d3eecbdd21
msgid "What is a storage engine?"
msgstr ""

#: ../source/faq/storage.txt:22
# 5c3b63eb82e84e538f91770ef1dae08f
msgid "A storage engine is the part of a database that is responsible for managing how data is stored, both in memory and on disk. Many databases support multiple storage engines, where different engines perform better for specific workloads. For example, one storage engine might offer better performance for read-heavy workloads, and another might support a higher-throughput for write operations."
msgstr ""

#: ../source/faq/storage.txt:29
# 9c09a6599d154dc18af88d3b05b41705
msgid ":doc:`/core/storage-engines`"
msgstr ""

#: ../source/faq/storage.txt:32
# 61f11b05220945528eede1558f9db5b9
msgid "Can you mix storage engines in a replica set?"
msgstr ""

#: ../source/faq/storage.txt:34
# 1b4efde37df848349dc448fe231da2db
msgid "Yes. You can have a replica set members that use different storage engines."
msgstr ""

#: ../source/faq/storage.txt:37
# 5483c275cc23467c900b106a14a0e2b0
msgid "When designing these multi-storage engine deployments consider the following:"
msgstr ""

#: ../source/faq/storage.txt:40
# 438c75795a444cbe9930045cc6929450
msgid "the oplog on each member may need to be sized differently to account for differences in throughput between different storage engines."
msgstr ""

#: ../source/faq/storage.txt:43
# 82764577187b48babdd5fc542b98d1c0
msgid "recovery from backups may become more complex if your backup captures data files from MongoDB: you may need to maintain backups for each storage engine."
msgstr ""

#: ../source/faq/storage.txt:48
# 735f02d40b2c4bfd8fe72133b6f5f035
msgid "WiredTiger Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:51
# 456c05a19592403a8af7ef5b2e0d4545
msgid "Can I upgrade an existing deployment to a WiredTiger?"
msgstr ""

#: ../source/faq/storage.txt:53
# e4dfd2c47d7347bda59395886183c984
msgid "Yes. See:"
msgstr ""

#: ../source/faq/storage.txt:55
# 05323810b54d4a889e2094f98b18e45b
msgid ":doc:`/tutorial/change-standalone-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:57
# fc827120b36c4560aecb2cc9adcbee29
msgid ":doc:`/tutorial/change-replica-set-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:59
# d3a716e98e8342b8a983c827cf5962a8
msgid ":doc:`/tutorial/change-sharded-cluster-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:62
# bfd9cc25b54b425a8d955fbce9dcb3ad
msgid "How much compression does WiredTiger provide?"
msgstr ""

#: ../source/faq/storage.txt:64
# d21f7ff704044e63bd35e5997009a1cc
msgid "The ratio of compressed data to uncompressed data depends on your data and the compression library used. By default, collection data in WiredTiger use :term:`Snappy block compression <snappy>`; :term:`zlib` compression is also available. Index data use :term:`prefix compression` by default."
msgstr ""

#: ../source/faq/storage.txt:73
# 7fc640432c264f8bad0011dcb5727094
msgid "To what size should I set the WiredTiger internal cache?"
msgstr ""

#: ../source/includes/extracts/wt-cache-utilization.rst:1
# 8934b6ec1b7041ac81c4769c5f51ce12
msgid "With WiredTiger, MongoDB utilizes both the WiredTiger internal cache and the filesystem cache."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:2
# 0bf8a940ac384810b9729bd03318bb61
msgid "Starting in 3.4, the WiredTiger internal cache, by default, will use the larger of either:"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:5
# 80d5eb598e4c4ce6b68efa70fabaff76
msgid "50% of RAM minus 1 GB, or"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:7
# 9f7bd28df4584f188ab0345fc7dd198b
msgid "256 MB."
msgstr ""

#: ../source/includes/extracts/wt-filesystem-cache.rst:1
# 181e8f90feab438c8dd482de3afc7f69
msgid "Via the filesystem cache, MongoDB automatically uses all free memory that is not used by the WiredTiger cache or by other processes. Data in the filesystem cache is compressed."
msgstr ""

#: ../source/includes/extracts/wt-cache-setting.rst:1
# a6b373343d6b4560ab99a2d9e3effc09
msgid "To adjust the size of the WiredTiger internal cache, see :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and :option:`--wiredTigerCacheSizeGB`. Avoid increasing the WiredTiger internal cache size above its default value."
msgstr ""

#: ../source/includes/extracts/wt-cache-additional-constraints-mongod-config.rst:3
# aac205ededeb480285935b594ec20c92
msgid "The :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` limits the size of the WiredTiger internal cache. The operating system will use the available free memory for filesystem cache, which allows the compressed MongoDB data files to stay in memory. In addition, the operating system will use any free RAM to buffer file system blocks and file system cache."
msgstr ""

#: ../source/includes/extracts/wt-cache-additional-constraints-mongod-config.rst:10
# 2eaf1af78ce549dd8466aad6ffeff9dc
msgid "To accommodate the additional consumers of RAM, you may have to decrease WiredTiger internal cache size."
msgstr ""

#: ../source/includes/extracts/wt-cache-additional-constraints-mongod-config.rst:13
# 43de861871364d1d81c886862ba53a23
msgid "The default WiredTiger internal cache size value assumes that there is a single :program:`mongod` instance per machine. If a single machine contains multiple MongoDB instances, then you should decrease the setting to accommodate the other :program:`mongod` instances."
msgstr ""

#: ../source/includes/extracts/wt-cache-additional-constraints-mongod-config.rst:19
# 5887111c0b1540dfb8e37e4507b28344
msgid "If you run :program:`mongod` in a container (e.g. ``lxc``, ``cgroups``, Docker, etc.) that does *not* have access to all of the RAM available in a system, you must set :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` to a value less than the amount of RAM available in the container. The exact amount depends on the other processes running in the container."
msgstr ""

#: ../source/includes/extracts/wt-configure-cache.rst:7
# 523db9c366c44a228bcce2d1cfaec794
msgid "To view statistics on the cache and eviction rate, see the :serverstatus:`wiredTiger.cache` field returned from the :dbcommand:`serverStatus` command."
msgstr ""

#: ../source/faq/storage.txt:78
# 6acc0a79b1164d36ab9e69f9e6e1e225
msgid "How frequently does WiredTiger write to disk?"
msgstr ""

#: ../source/includes/extracts/wt-snapshot-frequency.rst:1
# e73100e596b24082a375f02fc5b09eab
msgid "MongoDB configures WiredTiger to create checkpoints (i.e. write the snapshot data to disk) at intervals of 60 seconds or 2 gigabytes of journal data."
msgstr ""

#: ../source/faq/storage.txt:82
# 3d721898a4e74614aada12a913b88f0e
msgid "For journal data, MongoDB writes to disk according to the following intervals or condition:"
msgstr ""

#: ../source/includes/extracts/wt-journal-frequency.rst:1
# c2929a76a8934d7e9028272e2e5a33fe
msgid "Every 50 milliseconds."
msgstr ""

#: ../source/includes/extracts/wt-journal-frequency.rst:4
# c4098b1a70cd4bbbbe9fdbe20f5c0462
msgid "MongoDB sets checkpoints to occur in WiredTiger on user data at an interval of 60 seconds or when 2 GB of journal data has been written, whichever occurs first."
msgstr ""

#: ../source/includes/extracts/wt-journal-frequency.rst:8
# 88e3e33073bd451e8842338c59c4ae8e
msgid "If the write operation includes a write concern of :writeconcern:`j: true <j>`, WiredTiger forces a sync of the WiredTiger journal files."
msgstr ""

#: ../source/includes/extracts/wt-journal-frequency.rst:11
# 87de74b1cef2433d9d8eac50afe0b7b1
msgid "Because MongoDB uses a journal file size limit of 100 MB, WiredTiger creates a new journal file approximately every 100 MB of data. When WiredTiger creates a new journal file, WiredTiger syncs the previous journal file."
msgstr ""

#: ../source/faq/storage.txt:88
# 02e95ba3f0b647609fc9bda071b44035
msgid "MMAPv1 Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:93
# 83329676a52045c3b5e738afa347700f
msgid "What are memory mapped files?"
msgstr ""

#: ../source/faq/storage.txt:95
# 3537a3c61c5e435ca8c6093a6680432b
msgid "A memory-mapped file is a file with data that the operating system places in memory by way of the ``mmap()`` system call. ``mmap()`` thus *maps* the file to a region of virtual memory. Memory-mapped files are the critical piece of the MMAPv1 storage engine in MongoDB. By using memory mapped files, MongoDB can treat the contents of its data files as if they were in memory. This provides MongoDB with an extremely fast and simple method for accessing and manipulating data."
msgstr ""

#: ../source/faq/storage.txt:104
# 468b623d41bc43ab8a6a3f4e0b44d101
msgid "How do memory mapped files work?"
msgstr ""

#: ../source/faq/storage.txt:106
# 9e30036cb15f4403a2428e237f2bb59a
msgid "MongoDB uses memory mapped files for managing and interacting with all data."
msgstr ""

#: ../source/faq/storage.txt:109
# f29e30a680f047dd91acb04af09e8ac2
msgid "Memory mapping assigns files to a block of virtual memory with a direct byte-for-byte correlation. MongoDB memory maps data files to memory as it accesses documents. Unaccessed data is *not* mapped to memory."
msgstr ""

#: ../source/faq/storage.txt:113
# 0bfc72dcb2d9462abfa5261e27cb93f4
msgid "Once mapped, the relationship between file and memory allows MongoDB to interact with the data in the file as if it were memory."
msgstr ""

#: ../source/faq/storage.txt:117
# 464222ae15854620bc16d7ef8e264994
msgid "How frequently does MMAPv1 write to disk?"
msgstr ""

#: ../source/includes/fact-mmapv1-write-to-disk.rst:1
# 2e8e453764ed429383809ff3d5b672d9
msgid "In the default configuration for the :doc:`MMAPv1 storage engine </core/mmapv1>`, MongoDB writes to the data files on disk every 60 seconds and writes to the :term:`journal` files roughly every 100 milliseconds."
msgstr ""

#: ../source/includes/fact-mmapv1-write-to-disk.rst:6
# 419a12cd1ba34c9297a42c3d9a746033
msgid "To change the interval for writing to the data files, use the :setting:`storage.syncPeriodSecs` setting. For the journal files, see :setting:`storage.journal.commitIntervalMs` setting."
msgstr ""

#: ../source/includes/fact-mmapv1-write-to-disk.rst:10
# 53da67d416d34d92a79e099c092660d6
msgid "These values represent the *maximum* amount of time between the completion of a write operation and when MongoDB writes to the data files or to the journal files. In many cases MongoDB and the operating system flush data to disk more frequently, so that the above values represents a theoretical maximum."
msgstr ""

#: ../source/faq/storage.txt:124
# 97cf8079a7404bb38c7091ac914f54c4
msgid "Why are the files in my data directory larger than the data in my database?"
msgstr ""

#: ../source/faq/storage.txt:126
# dc1faf5046fb4736b995159e188cf51f
msgid "The data files in your data directory, which is the :file:`/data/db` directory in default configurations, might be larger than the data set inserted into the database. Consider the following possible causes:"
msgstr ""

#: ../source/faq/storage.txt:131
# 0126bc1911904e878829fb43f33d3c5e
msgid "Preallocated data files"
msgstr ""

#: ../source/faq/storage.txt:133
# 584efc3e0e5e4cbbae6d08aba2687740
msgid "MongoDB preallocates its data files to avoid filesystem fragmentation, and because of this, the size of these files do not necessarily reflect the size of your data."
msgstr ""

#: ../source/faq/storage.txt:137
# 704ce0c6a689457f9636b4eb7a2f6598
msgid "The :setting:`storage.mmapv1.smallFiles` option will reduce the size of these files, which may be useful if you have many small databases on disk."
msgstr ""

#: ../source/faq/storage.txt:142
# 29d363fa80e04d9dafcb815d6c829f88
msgid "The ``oplog``"
msgstr ""

#: ../source/faq/storage.txt:144
# 966b1a8f06ee409493499649dd6a6a3c
msgid "If this :program:`mongod` is a member of a replica set, the data directory includes the :term:`oplog.rs <oplog>` file, which is a preallocated :term:`capped collection` in the ``local`` database."
msgstr ""

#: ../source/faq/storage.txt:149
# b456499346174d66a6dbd56f45b95870
msgid "The default allocation is approximately 5% of disk space on 64-bit installations. In most cases, you should not need to resize the oplog. See :ref:`Oplog Sizing <replica-set-oplog-sizing>` for more information."
msgstr ""

#: ../source/faq/storage.txt:154
# 8f8ae6eefa9b467ba86115dcf3ad218c
msgid "The ``journal``"
msgstr ""

#: ../source/faq/storage.txt:156
# 582baabe582a448ca55a1214e12aee90
msgid "The data directory contains the journal files, which store write operations on disk before MongoDB applies them to databases. See :doc:`/core/journaling`."
msgstr ""

#: ../source/faq/storage.txt:163
# 48de9f5d0157430faa0c505f6e337c7c
msgid "Empty records"
msgstr ""

#: ../source/faq/storage.txt:165
# 150e3cae26df45eb9871d0054027fba0
msgid "MongoDB maintains lists of empty records in data files as it deletes documents and collections. MongoDB can reuse this space, but will not, by default, return this space to the operating system."
msgstr ""

#: ../source/faq/storage.txt:169
# 9cfad37f38954690a9df3926f6129904
msgid "To allow MongoDB to more effectively reuse the space, you can de-fragment your data. To de-fragment, use the :dbcommand:`compact` command. The :dbcommand:`compact` requires up to 2 gigabytes of extra disk space to run. Do not use :dbcommand:`compact` if you are critically low on disk space. For more information on its behavior and other considerations, see :dbcommand:`compact`."
msgstr ""

#: ../source/faq/storage.txt:176
# 8dcce6af50c347e2bba1521dca885f55
msgid ":dbcommand:`compact` only removes fragmentation from MongoDB data files within a collection and does not return any disk space to the operating system. To return disk space to the operating system, see :ref:`faq-reclaim-disk-space`."
msgstr ""

#: ../source/faq/storage.txt:184
# b924123fdecf427c9e78d037b2b52a53
msgid "How do I reclaim disk space?"
msgstr ""

#: ../source/faq/storage.txt:186
# aa10cbb0b4dd4760b3b2ff5e33049884
msgid "The following provides some options to consider when reclaiming disk space."
msgstr ""

#: ../source/faq/storage.txt:191
# 6c696197a8594f8e9c5be33bdc7568b6
msgid "You do not need to reclaim disk space for MongoDB to reuse freed space. See :ref:`faq-empty-records` for information on reuse of freed space."
msgstr ""

#: ../source/faq/storage.txt:196
# 159c6b45eaa64d81ab8b95a2ad91839d
msgid "``repairDatabase``"
msgstr ""

#: ../source/faq/storage.txt:198
# 47ab77df7bea4f58992c418afcedfa72
msgid "You can use :dbcommand:`repairDatabase` on a database to rebuilds the database, de-fragmenting the associated storage in the process."
msgstr ""

#: ../source/faq/storage.txt:201
# 1ca13e5bd930420293b0c0b55794fe34
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. For additional information and considerations, see :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/faq/storage.txt:209
# 795b7b15c0d0406aa08dd092185a38a8
msgid "Do not use :dbcommand:`repairDatabase` if you are critically low on disk space."
msgstr ""

#: ../source/faq/storage.txt:212
# ed8144037c8f49fab1fcfaadac804cf9
msgid ":dbcommand:`repairDatabase` will block all other operations and may take a long time to complete."
msgstr ""

#: ../source/faq/storage.txt:215
# b4472d81a3a44ec2802a2a7071ee4739
msgid "You can only run :dbcommand:`repairDatabase` on a standalone :program:`mongod` instance."
msgstr ""

#: ../source/faq/storage.txt:218
# 1d51a8b259a1421ab74bb65e7279e9db
msgid "You can also run the :dbcommand:`repairDatabase` operation for all databases on the server by restarting your :program:`mongod` standalone instance with the :option:`--repair` and :option:`--repairpath` options. All databases on the server will be unavailable during this operation."
msgstr ""

#: ../source/faq/storage.txt:224
# 40e0e34c700a43e8bcff3a722075d0d1
msgid "Resync the Member of the Replica Set"
msgstr ""

#: ../source/faq/storage.txt:226
# 6a00e00985c44409acff6c93b4960805
msgid "For a secondary member of a replica set, you can perform a :doc:`resync of the member </tutorial/resync-replica-set-member>` by: stopping the secondary member to resync, deleting all data and subdirectories from the member's data directory, and restarting."
msgstr ""

#: ../source/faq/storage.txt:231
# a2ee6b6601cf4c79a02a1cfc3c865378
msgid "For details, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/faq/storage.txt:236
# a309d57d71da44c8a0ccc2726b080fba
msgid "What is the working set?"
msgstr ""

#: ../source/faq/storage.txt:238
# 3effa8a65b57478d94d67ca0bc619273
msgid "Working set represents the total body of data that the application uses in the course of normal operation. Often this is a subset of the total data size, but the specific size of the working set depends on actual moment-to-moment use of the database."
msgstr ""

#: ../source/faq/storage.txt:243
# f7dd5ca8f22f4b43beb6c43efc775070
msgid "If you run a query that requires MongoDB to scan every document in a collection, the working set will expand to include every document. Depending on physical memory size, this may cause documents in the working set to \"page out,\" or to be removed from physical memory by the operating system. The next time MongoDB needs to access these documents, MongoDB may incur a hard page fault."
msgstr ""

#: ../source/faq/storage.txt:250
# 3f81b5e6865642aea950a66382aac975
msgid "For best performance, the majority of your *active* set should fit in RAM."
msgstr ""

#: ../source/faq/storage.txt:256
# 78741f6a8956419fb123274525af8d2b
msgid "What are page faults?"
msgstr ""

#: ../source/includes/fact-page-fault.rst:1
# 88a7e662fd41489b9e7ed752c4a880a9
msgid "With the MMAPv1 storage engine, page faults can occur as MongoDB reads from or writes data to parts of its data files that are not currently located in physical memory. In contrast, operating system page faults happen when physical memory is exhausted and pages of physical memory are swapped to disk."
msgstr ""

#: ../source/faq/storage.txt:260
# eb98786514744229ae7bae4ca34a4ff3
msgid "If there is free memory, then the operating system can find the page on disk and load it to memory directly. However, if there is no free memory, the operating system must:"
msgstr ""

#: ../source/faq/storage.txt:264
# 40fb90919598441dbbd1ec59b1d7a6ee
msgid "find a page in memory that is stale or no longer needed, and write the page to disk."
msgstr ""

#: ../source/faq/storage.txt:267
# d9c96b84531d43689acd0159b886ddc7
msgid "read the requested page from disk and load it into memory."
msgstr ""

#: ../source/faq/storage.txt:269
# b72c3b396dcb41c4b0adbe9cfaf2a2f3
msgid "This process, on an active system, can take a long time, particularly in comparison to reading a page that is already in memory."
msgstr ""

#: ../source/faq/storage.txt:273
#: ../source/faq/storage.txt:285
# d906bbc96d4d4caf9f15f20438c4548d
# 595ffdd15e7848cb8b8fd166e9a782bc
msgid "See :ref:`administration-monitoring-page-faults` for more information."
msgstr ""

#: ../source/faq/storage.txt:276
# 02c1ac4c3cac4ff388dcdb890dc0fcb9
msgid "What is the difference between soft and hard page faults?"
msgstr ""

#: ../source/faq/storage.txt:278
# 1310ce33cae44cd1988bf96339149386
msgid ":term:`Page faults <page fault>` occur when MongoDB, with the MMAP storage engine, needs access to data that isn't currently in active memory. A \"hard\" page fault refers to situations when MongoDB must access a disk to access the data. A \"soft\" page fault, by contrast, merely moves memory pages from one list to another, such as from an operating system file cache."
msgstr ""

#: ../source/faq/storage.txt:292
# 115e0f6aab2e404fa00fe6d574c1c29d
msgid "Can I manually pad documents to prevent moves during updates?"
msgstr ""

#: ../source/faq/storage.txt:296
# 29c38b08cd3742a6ba646229c549b6f9
msgid "With the :doc:`MMAPv1 storage engine </core/mmapv1>`, an update can cause a document to move on disk if the document grows in size. To *minimize* document movements, MongoDB uses :term:`padding`."
msgstr ""

#: ../source/faq/storage.txt:300
# e8ce97b9f83344888b939fd75469fc87
msgid "You should not have to pad manually because by default, MongoDB uses :ref:`power-of-2-allocation` to add :ref:`padding automatically <record-allocation-strategies>`. The :ref:`power-of-2-allocation` ensures that MongoDB allocates document space in sizes that are powers of 2, which helps ensure that MongoDB can efficiently reuse free space created by document deletion or relocation as well as reduce the occurrences of reallocations in many cases."
msgstr ""

#: ../source/faq/storage.txt:308
# f48dc9d350ea4597b5360dcfe80dd5aa
msgid "However, *if you must* pad a document manually, you can add a temporary field to the document and then :update:`$unset` the field, as in the following example."
msgstr ""

#: ../source/faq/storage.txt:312
# e89f7c895f3f4467ae2ac1daf2123608
msgid "Do not manually pad documents in a capped collection. Applying manual padding to a document in a capped collection can break replication. Also, the padding is not preserved if you re-sync the MongoDB instance."
msgstr ""

#: ../source/faq/storage.txt:336
# cf98991533e04b5c9fee39331bf6205f
msgid ":ref:`record-allocation-strategies`"
msgstr ""

#: ../source/faq/storage.txt:339
# 05402937607945b1bb69562ef16bc725
msgid "Data Storage Diagnostics"
msgstr ""

#: ../source/faq/storage.txt:342
# 83cb2f63a96e41eaa8c27c28ca370960
msgid "How can I check the size of a collection?"
msgstr ""

#: ../source/faq/storage.txt:344
# 50b2fe266d874e4cb8e0fe58ad7a400c
msgid "To view the statistics for a collection, including the data size, use the :method:`db.collection.stats()` method from the :program:`mongo` shell. The following example issues :method:`db.collection.stats()` for the ``orders`` collection:"
msgstr ""

#: ../source/faq/storage.txt:353
# 9f6d182a17464118b81c0ade08f13271
msgid "MongoDB also provides the following methods to return specific sizes for the collection:"
msgstr ""

#: ../source/faq/storage.txt:356
# 223e32b328594093892c7867c1dc239d
msgid ":method:`db.collection.dataSize()` to return data size in bytes for the collection."
msgstr ""

#: ../source/faq/storage.txt:359
# 44e80e3b10914ee7a73b1cdaca4a4bbe
msgid ":method:`db.collection.storageSize()` to return allocation size in bytes, including unused space."
msgstr ""

#: ../source/faq/storage.txt:362
# 0b226a16e7fb4a95b1478fc0af3740ca
msgid ":method:`db.collection.totalSize()` to return the data size plus the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:365
# a8c7cd3afe304e4dac68f5e636cd4be6
msgid ":method:`db.collection.totalIndexSize()` to return the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:368
# 4951221da9684b59a3f1f300b68e70b4
msgid "The following script prints the statistics for each database:"
msgstr ""

#: ../source/faq/storage.txt:377
# aa496ff457224298aade629d7d6758aa
msgid "The following script prints the statistics for each collection in each database:"
msgstr ""

#: ../source/faq/storage.txt:391
# 0809fa28f5404aa289a55be50f16a30b
msgid "How can I check the size of indexes for a collection?"
msgstr ""

#: ../source/faq/storage.txt:393
# 69efb2f55f4845c193bcb0a83e31e5ba
msgid "To view the size of the data allocated for an index, use the :method:`db.collection.stats()` method and check the :data:`~collStats.indexSizes` field in the returned document."
msgstr ""

#: ../source/faq/storage.txt:400
# a30a3822f09149959d9879827e2fe075
msgid "How can I get information on the storage use of a database?"
msgstr ""

#: ../source/faq/storage.txt:402
# 3a7fbe592d734bf487d1318271ea9ebb
msgid "The :method:`db.stats()` method in the :program:`mongo` shell returns the current state of the \"active\" database. For the description of the returned fields, see :ref:`dbStats Output <dbstats-output>`."
msgstr ""

