# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
# 456ad8c3b4eb484cbf8d75023be18f2e
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:15
# ead072ad668043bb931fa9311625200e
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:17
# cfa873405c4f442c8553756f073307d5
msgid ":query:`$not` performs a logical ``NOT`` operation on the specified ``<operator-expression>`` and selects the documents that do *not* match the ``<operator-expression>``. This includes documents that do not contain the ``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:22
# 660abba888304fc88b6ec099333052d5
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:28
# 07a6e5fa67024f39873b8b07ab5e0441
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:30
# 50de4427325f43d3b6b4da3023dc146a
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:31
# 2ef63221a1bd4523934565bc0e63418d
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:33
# 19ea0e449cf94d32b6add616bb1e6cd2
msgid "``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. ``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:38
# 12bd7006fc7d49588b32e213495d0dcd
msgid "Remember that the :query:`$not` operator only affects *other operators* and cannot check fields and documents independently. So, use the :query:`$not` operator for logical disjunctions and the :query:`$ne` operator to test the contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:43
# 0f09cfd3b5964c6e98349293dac5ff27
msgid "Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:46
# 26cefd3c172d4d8b97920cd3cadc7c54
msgid "The operation of the :query:`$not` operator is consistent with the behavior of other operators but may yield unexpected results with some data types like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:50
# 37ce56cc00f947a3a2eccb93cf646bcd
msgid "The :query:`$not` operator does **not** support operations with the :query:`$regex` operator. Instead use ``//`` or in your driver interfaces, use your language's regular expression capability to create regular expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:55
# 81b4896be87940ca9e950f6282305b61
msgid "Consider the following example which uses the pattern match expression ``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:61
# 10ac6b9544434f4e855474498bd4f357
msgid "The query will select all documents in the ``inventory`` collection where the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:65
# db19e60f51164115810b24706131173b
msgid "If you are using Python, you can write the above query with the PyMongo driver and Python's :py:meth:`python:re.compile()` method to compile a regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:77
# ac25f827c6cf439a9bf37714fa4777a4
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo <python/current>`, :term:`driver`."
msgstr ""

