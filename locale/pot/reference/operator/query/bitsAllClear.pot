# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/bitsAllClear.txt:3
# 9019048751994810ad092ec6282e6d93
msgid "$bitsAllClear"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:0
# 91708aae687346e79891ed58512a789e
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:17
# c3f16d1aab2c4b72b965b3141e1ac660
msgid ":query:`$bitsAllClear` matches documents where *all* of the bit positions given by the query are clear (i.e. ``0``) in ``field``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:3
# dd370390a2504a3d833b9674ad13c2b5
msgid "``{ <field>: { $bitsAllClear: <numeric bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:5
# d1152b9f6bc3449582f754faf867535b
msgid "``{ <field>: { $bitsAllClear: <`` :bsontype:`BinData <data_binary>` ``bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:7
# 186c9847f2f4487abcec062e43913cb5
msgid "``{ <field>: { $bitsAllClear: [ <position1>, <position2>, ... ] } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:9
# d3ccca8c0956455ab8ef47ee41be66d2
msgid "The ``field`` value must be either numerical or a :bsontype:`BinData <data_binary>` instance. Otherwise, :query:`$bitsAllClear` will not match the current document."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:16
# e1e94c45f28d441e8a7178572ff03da6
msgid "Numeric Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:14
# b756d9bf8ece43809548a31a23931590
msgid "You can provide a numeric bitmask to be matched against the operand field. It must be representable as a non-negative 32-bit signed integer. Otherwise, :query:`$bitsAllClear` will return an error."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:20
#: ../source/reference/operator/query/bitsAllClear.txt:78
# e2301035d1fa4c41aac274667dff6e76
# 149a615340984858a8cb013778b6de06
msgid "BinData Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:19
# 1107557ebafa47cc9ac2e2aea5cc2e77
msgid "You can also use an arbitrarily large :bsontype:`BinData <data_binary>` instance as a bitmask."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:25
# b9a4537173db41d584a405ce6de6bf65
msgid "Position List"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:23
# a0ce2b8c814744a2bd6544e4afe391ca
msgid "If querying a list of bit positions, each ``<position>`` must be a non-negative integer. Bit positions start at ``0`` from the least significant bit. For example, the decimal number ``254`` would have the following bit positions:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:29
# 2a058f0749894ceca147b3cf3971ca6e
msgid "**Bit Value**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:31
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:33
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:35
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:37
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:39
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:41
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:43
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:61
# f8d64057ab2648eb89cc64aa60c4951c
# 4a32945e73fd4118afd1c3d0222da6ea
# cbbea4a9eb434474b9ca05c7aa3142f7
# 9186629e68124283aa8e88e3ac85c100
# ff7ca38b32d9461c81582501fda37982
# e0a93dc444f74c8789354b36a5c541ca
# 6df61c78508849bca90fccf8abefb6cd
# 5c12b9a9751a48c0b42662d80f6eb284
msgid "1"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:45
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:63
# ca79226b6325462aaacd78b8f8a077ff
# 1ae68acee4ed49b491543e4062974563
msgid "0"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:47
# f87267332a6949dfbc5fe14f37cdd6bb
msgid "**Position**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:49
# fc7c8e3ff8a74099acf1b70f511b350e
msgid "7"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:51
# 9a84b69859394b43896ad9cb4a4fc4ac
msgid "6"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:53
# 13af7686b6fb405fbdef1704682ea546
msgid "5"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:55
# b12788ae0a4b44e683d29130a67d4756
msgid "4"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:57
# 7ce260ae269f4aec9ed276f059e91c74
msgid "3"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:59
# c4744a6cab5d44daac7f47e76bfd2986
msgid "2"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:23
# e4593963ba0040f790f99ba4a8544ef4
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:26
# 934b99840b5a494eb03f2a04ed858685
msgid "Floating Point Values"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-floating-point.rst:1
# 926088abe5864276a6093d3a8749e4eb
msgid ":query:`$bitsAllClear` will not match numerical values that cannot be represented as a signed 64-bit integer. This can be the case if a value is either too large or small to fit in a signed 64-bit integer, or if it has a fractional component."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:31
# 433325ec1c5442cb9fda86bebf75b6cd
msgid "Sign Extension"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
# 74f42b52b45f4746b74c7b5afd19a3a0
msgid "Numbers are sign extended. For example, $bitsAllSet considers bit position ``200`` to be set for the negative number ``-5``, but bit position ``200`` to be clear for the positive number ``+5``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
# 69f2587980d041bdbb0e8f8ebaa31b39
msgid "In contrast, :bsontype:`BinData <data_binary>` instances are zero-extended. For example, given the following document:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
# f866bef784984992bfb2d4e5a033691b
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:36
# c08da422e1f543968ac1ac74706fce32
msgid "Examples"
msgstr ""

#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
# fcaf5beda228461fbe87219de9258951
msgid "The following examples will use a collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:41
# bd435c3cacbb4ae09616e50a50ddb7d0
msgid "Bit Position Array"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:43
# 1fb9fc3a06fa42ff837287de46fd887c
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at position ``1`` and position ``5``, where the least significant bit is position ``0``."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:51
#: ../source/reference/operator/query/bitsAllClear.txt:70
#: ../source/reference/operator/query/bitsAllClear.txt:88
# 89257b74eae34a94b8c7cce7e31760a7
# 3945fee1dd404d309378821f4cf52baa
# 65e7a2c88a234e109793d54b07725a5a
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:60
# 53860d7165e249d7a4487e2a02ce163a
msgid "Integer Bitmask"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:62
# 8d92daf4f12d4805ab0ac4a054554ce8
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at positions ``0``, ``1``, and ``5`` (the binary representation of the bitmask ``35`` is ``00100011``)."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:80
# ba5c4030fc16401d897ec9c05e374f09
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at positions `2` and `4` (the binary representation of ``BinData(0, \"ID==\")`` is ``00010100``."
msgstr ""

