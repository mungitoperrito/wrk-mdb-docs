# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# a28719d28f484213b296f6775b6c8b9d
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:0
# 7e9204e91e20479392be9352e044f68e
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/or.txt:15
# c73cc1488f8446e0ae99255b0c3d3c55
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# 910438854e9d4ba4808576823270579d
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:30
# f01ddf39d16b4baaafac2f88d4982947
msgid "This query will select all documents in the ``inventory`` collection where either the ``quantity`` field value is less than ``20`` **or** the ``price`` field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:35
# 4efbd1d4cc3d48b38541ff6717902d15
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:40
# 09cd5e876994490cb798f89863fa1649
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:42
# 0ac3db96c260411da3df429aa19f18dc
msgid "When evaluating the clauses in the :query:`$or` expression, MongoDB either performs a collection scan or, if all the clauses are supported by indexes, MongoDB performs index scans. That is, for MongoDB to use indexes to evaluate an :query:`$or` expression, all the clauses in the :query:`$or` expression must be supported by indexes. Otherwise, MongoDB will perform a collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:49
# 4b7e54f1adf64fe9913a282fdbcd0d99
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:56
# d730f7b869354be08fa0a99a366c71ba
msgid "To support this query, rather than a compound index, you would create one index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:64
# a4c42c37e6f44606a8602374634c8a32
msgid "MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:70
# f860417a66ec45eb942ed25e9a577d1e
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:74
# a584c3ee9cbd4dd980b45e9a43e3ae52
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be supported by an index. This is because a :query:`$text` query *must* use an index, and :query:`$or` can only use indexes if all its clauses are supported by indexes. If the :query:`$text` query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:82
# 888d1e053d204f35aeee83a9d286de79
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:86
# 6f3b8ed34cb74cc4b7444a132e254fea
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:93
# e4631d1519964006901455b2c482f2b1
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:97
# 58d41890f02e4ab6a4f576bc2fa06db7
msgid "When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB can now use indexes that support the :query:`$or` clauses. Previous versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
# 4ec21237c0b84824861d68f6c24f1c42
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:104
# e40f6cae52a54b4981393176769e49df
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:108
# 697acb6d64e44d1d959282c5e2319e21
msgid "For example, to select all documents in the ``inventory`` collection where the ``quantity`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:117
# a12c14ffd1fe4ef8888b111e4202428c
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:119
# 8e256f8751da4dd19380e19e97d2eaa0
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:121
# a5350dea64764b3ca887ba62d07933a1
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

