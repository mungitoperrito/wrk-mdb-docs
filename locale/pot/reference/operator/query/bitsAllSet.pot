# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/bitsAllSet.txt:3
# af6625e3853047c299c6d805d50f0922
msgid "$bitsAllSet"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:0
# 5929e877fe6346c391cc1de4847102e7
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:17
# 3a085b98453c4b119bf735e1b472f119
msgid ":query:`$bitsAllSet` matches documents where *all* of the bit positions given by the query are set (i.e. ``1``) in ``field``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:3
# 33b6899a1e9a4165bdfe66cdfb51bc85
msgid "``{ <field>: { $bitsAllSet: <numeric bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:5
# b314a0cf2b0649aabafae042d443d8de
msgid "``{ <field>: { $bitsAllSet: <`` :bsontype:`BinData <data_binary>` ``bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:7
# 2e56ac1e74944caaa607b62fbd056d5d
msgid "``{ <field>: { $bitsAllSet: [ <position1>, <position2>, ... ] } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:9
# bdfad5395d1d44cf98c61055e5ddd6f6
msgid "The ``field`` value must be either numerical or a :bsontype:`BinData <data_binary>` instance. Otherwise, :query:`$bitsAllSet` will not match the current document."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:16
# bf19a10685ba4e08aeb729dd1a3905b0
msgid "Numeric Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:14
# 8bba20e644674c3b93b18ccb181918dd
msgid "You can provide a numeric bitmask to be matched against the operand field. It must be representable as a non-negative 32-bit signed integer. Otherwise, :query:`$bitsAllSet` will return an error."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:20
#: ../source/reference/operator/query/bitsAllSet.txt:77
# 12fcedb10ce141bb8c4eb684b6c10813
# ffa10365c45e41048d74de774de60127
msgid "BinData Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:19
# ae713832d24341689239d460b3331e3f
msgid "You can also use an arbitrarily large :bsontype:`BinData <data_binary>` instance as a bitmask."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:25
# abad0c58d8014e58a2456fee8a9abb66
msgid "Position List"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:23
# bd775f68c5264dad9a2c027c69abd7c5
msgid "If querying a list of bit positions, each ``<position>`` must be a non-negative integer. Bit positions start at ``0`` from the least significant bit. For example, the decimal number ``254`` would have the following bit positions:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:29
# 85b2cfeeee8d4d738eee3f4b3efb0e9b
msgid "**Bit Value**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:31
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:33
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:35
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:37
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:39
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:41
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:43
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:61
# abd793159dd545e6911875d30ab89f5b
# db9a3d08891c4f118dd7098bf8027cfa
# 2af87ddc73b24191b7cfa3424d719cd9
# 0fd9e4e72a28428fab24886e0c4a582f
# fe298fcc906f48f98717b743d46bd78d
# 1a6753a7d2d44fcc92e253377672a9d9
# 577feb29ca6648a0b236bfcf0d8936cb
# 291589d3d69c43a5bebca3aa6d3d4e49
msgid "1"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:45
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:63
# 272d0d9334634990ac7b9ad5c951fd85
# 7e0bdf31d10943689f0d0a4e51701fae
msgid "0"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:47
# 0137053e3f6740bd8e932ce82331092c
msgid "**Position**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:49
# 59f0a8f3ca404063aa517c532712216e
msgid "7"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:51
# 4629b6c4f4fb42d9838935e31a0b09db
msgid "6"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:53
# eefdee0d0f344455befa1a1e64e1dd38
msgid "5"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:55
# c2c13b37d3b54352bc6305223e5ed1b7
msgid "4"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:57
# 6af367c755d14c91be85303ae23ae218
msgid "3"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:59
# 78b302d57fc04f66be91b6dcf92b6b76
msgid "2"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:23
# 30c2cd397ad3499f8053cfa8f06cd3b1
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:26
# 8fef837e7d954671b3b82f7cb8394e53
msgid "Floating Point Values"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-floating-point.rst:1
# 5ad139a95661475c95fba7f5063f9781
msgid ":query:`$bitsAllSet` will not match numerical values that cannot be represented as a signed 64-bit integer. This can be the case if a value is either too large or small to fit in a signed 64-bit integer, or if it has a fractional component."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:31
# f45ee66ff7ec4841a0dcb0486c125e84
msgid "Sign Extension"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
# 1c2fe039a9d641399963a72acdcdf230
msgid "Numbers are sign extended. For example, $bitsAllSet considers bit position ``200`` to be set for the negative number ``-5``, but bit position ``200`` to be clear for the positive number ``+5``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
# 7e36119cf84f42e8a2b389eb1ff49c3d
msgid "In contrast, :bsontype:`BinData <data_binary>` instances are zero-extended. For example, given the following document:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
# 6d2d6aa9190c4ac0a3a5513bae4cbe17
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:36
# d40c02d0f3ac442eb0fe789230be7959
msgid "Examples"
msgstr ""

#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
# e5fcbc5db1ea4fddb196a2fb9edf7189
msgid "The following examples will use a collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:41
# e8ab4fdca1f64161b704594370737e6e
msgid "Bit Position Array"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:43
# d0d88747d3b14cf2b312f624fc98d686
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at position ``1`` and position ``5``, where the least significant bit is position ``0``."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:51
# c22733ba6410425bb5f5c699d1a50260
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:60
# 07cb917c3f354ca889623868b8aba4f2
msgid "Integer Bitmask"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:62
# 6aca5b4ecbab4c6f94bd169757995f5f
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at positions ``1``, ``4``, and ``5`` (the binary representation of the bitmask ``50`` is ``00110010``)."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:70
#: ../source/reference/operator/query/bitsAllSet.txt:87
# a121cd7f2d06477280fee5676923bd3b
# 5b2fa98dfcb249f7ad0e8707993c48a5
msgid "The query matches the following document:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:79
# 1e836d7622844b28acf7d0adafc36e2e
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at positions `4` and `5` (the binary representation of ``BinData(0, \"MC==\")`` is ``00110000``)."
msgstr ""

