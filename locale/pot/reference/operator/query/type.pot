# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
# c8b945b7666c40ed8aa7bff9f7c00327
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:0
# 4b70835541874f669ebef5eb1d94405f
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
# 2e28fc49ba1145fa8438a1a1a1181ada
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:18
# b0ce761bfe6c48f3a99204528f8d11e4
msgid ":query:`$type` selects the documents where the *value* of the ``field`` is an instance of the specified :term:`BSON` type. Querying by data type is useful when dealing with highly unstructured data where data types are not predictable."
msgstr ""

#: ../source/reference/operator/query/type.txt:23
# dc59cba7bb94412b8dc4ff619631d6d6
msgid "A :query:`$type` expression has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/type.txt:31
# 34785fdcb2fb4a548d0deba685c5bee4
msgid ":ref:`document-type-available-types` describes the BSON types and their corresponding numeric and string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:35
# e7d88dc496614b12b7fa6c5c681bb876
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:37
# a7ca057b432848f38eae686ba272b1f9
msgid ":query:`$type` returns documents where the BSON type of the ``field`` matches the BSON type passed to :query:`$type`."
msgstr ""

#: ../source/reference/operator/query/type.txt:43
# 3d9a9831ee194395ad049fc586e300ec
msgid "Available Types"
msgstr ""

#: ../source/reference/operator/query/type.txt:45
# 2854c6a7096d4950b5054e75817a5bdd
msgid ":query:`$type` operator accepts string aliases for the BSON types in addition to the numbers corresponding to the BSON types. Previous versions only accepted the numbers corresponding to the BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
# b7101fb1cbf84c12aede0838dfb38999
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
# 0b68a9b9e06e47d3988a6a89a63d539d
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
# 3293412493624923988f827dfcfed12f
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
# a0cdff67111e41b68afc945b02b7508e
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# c9e4b24dfee646b7bbb3eebc34c7fb94
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
# ffb9e5a8acf5410c962028ec14e6fd3b
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
# 077d2599ed7143089a99075580b5da9e
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
# dd630e6231ef4fe2a1922c1ad59f2758
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
# 38844473d72b417e80b5eeb1e64f027d
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
# deef23ef28df473b99e4a0e4f1eb8fd7
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
# 0444dbcb3bf346d3b7faddcd617e9ed7
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
# 991a6b503aa346b3b121ee23a1d9bed6
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# b8d2bb1007e74ebea045cd0b79ad9191
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
# d647bebdfa9b43188ac1f73f49318dc1
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
# f279fc4e9fb84079be16100bb1419a0d
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
# a838fbd48b164942bfe4d0b2947baf2a
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
# 07884ec295e446878f0eb7f859bc18f2
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
# d75a15f130584ff5abe6d607f8d9a7c4
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
# b099f9e1135f4ac49acd8369eb86377c
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
# a8cbba546d024ee28342b98d6ce62747
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
# 54be8cfdd9fb4999b5678bf6682916f5
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
# 3a9c5fe191cc464088d2b73eb022c466
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
#: ../source/includes/fact-bson-types.rst:67
#: ../source/includes/fact-bson-types.rst:77
# 144c0493d1e8486585ab851a0fd5a711
# c92e5e4d76e4446484df4d4c2169646a
# 793ce43ef28f41aab4df5a850d341ca9
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
# 371c0aa503044d50acef9e66373e7eb3
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
# a4ae71bedae84c49a02952f8dea3552c
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
# f2ae3f7f293f4bf5a09b4507222ac9b1
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
# 6260c6b1637044a2a49a4ac67c460160
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
# 9e09c3e0991f48e6a98fefa126bd6bbe
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
# 6bf525e2dc864f8aa65f26573f83137e
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
# 4d7e790a78454f879ace3f621c14e396
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
# cd23530deae4427c8e4f724dc25fba9d
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
# 062f94de6cae4617b5cfc2c3cf8354f0
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
# 5e19b5919d3343b8aa693313c3e5862a
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
# e457af3375984f8c82fdcc86ba4d21f7
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
# 8f766adc50424124b346d91a3c5b579e
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
# 3f677ca245c24522bf527fb0397c1f40
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
# dbdddb3b60c84ffb8b5b3da4f9c505db
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
# 5505f52593ff454d940f0ac470255b75
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
# 617fe8e251944dd5b19a3b28434af75b
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
# a9d8c7426aee4e8a816aff1e5231bec0
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
# ba3081ae32c44c9cb3ec80f45d9ca9ce
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
# deca396ba9b44fc8a1321f92702e9aca
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
# e0be93de09bc4318b65c52d0d60e0332
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
# 1042085daa8048b4a845ab5bf3b2d1d9
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
# 095fe4ced2cc460db09781c21e4600d8
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
# 7a0dda40b0d043709c2d21a17f531c41
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
# c1a8cb0533b24112953cfbff2de3440d
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
# ce6069cca47c43729aa15f9e8767155a
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
# 7440898986674e89b62f912037d77953
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
# 66b45fccabde4235860bdd098c6d5196
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
#: ../source/reference/operator/query/type.txt:58
# a5d2cd0665a44f3e947fb1c2dad072cb
# 1ac8d92b1bc24d50aa1b20e5e0a21ca5
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
# aca2420ff67d41fbbc48b89e23932393
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
# 115ce6dddb234134a87ae43912d3a663
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
# de452e54d913465bbfd582daa3f6316b
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
# e20bb40a416741d3af91996a59125ed2
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
# 3752dd939eae4a5eafa7f1f6292baa66
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
#: ../source/reference/operator/query/type.txt:60
# f7b35e50ae5f4baeb0450574554e3198
# ccf79d04955f4480b7355e78af145af5
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
# 15d81a7e0d6343aa87aa413a1a8a2245
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
# 9bbefc28c25049d4ae1c736673b69bf5
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
# 1a9b0c8699ed4b7e937fcfad1f4ae48c
msgid "Decimal128"
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
# fff50937dae445ed82db442f228807f0
msgid "19"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
# 6ea7de51d649452190c8925ba074e18f
msgid "\"decimal\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:102
# c9ee96541c2c4721996f4ee66ff0ef25
msgid "New in version 3.4."
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
# ea49f6ef962d48928ab97d33e48f5222
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
# 5bd9e02f9657486d841d0e201cf3ec37
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
# f21c003077ae48a0a56444dd09d35a10
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:109
# 28a9f4cc543b4e4aaa9258403077cf1c
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:110
# 60893d29f25e43888ab68e7d8ec5141a
msgid "127"
msgstr ""

#: ../source/includes/fact-bson-types.rst:111
# 9bcce439291e48798e17400bb89720a0
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/operator/query/type.txt:53
# be3382f8b6fc43d8bab57e0033a051ee
msgid ":query:`$type` supports the ``number`` alias, which will match against the following :term:`BSON` types:"
msgstr ""

#: ../source/reference/operator/query/type.txt:56
# 52fafa05bbe14c5488f908444256270f
msgid "double"
msgstr ""

#: ../source/reference/operator/query/type.txt:62
# 8b551a40e3d14405a01294db4757ee9f
msgid "decimal"
msgstr ""

#: ../source/reference/operator/query/type.txt:64
# 52f74e60167e47a2bffe0bc059188aa2
msgid "See :ref:`document-querying-by-data-type`"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
# 4bee0e0ca6644ab3866cdc274771eee1
msgid "Arrays"
msgstr ""

#: ../source/reference/operator/query/type.txt:69
# 2b575601d5ad445091090a9edac2ca2a
msgid "When applied to arrays, :query:`$type` matches any **inner** element that is of the specified :term:`BSON` type. For example, when matching for ``$type : 'array'``, the document will match if the field has a nested array. It will not return results where the field itself is an ``array``."
msgstr ""

#: ../source/reference/operator/query/type.txt:74
# 4880d4f628344c5a969f532cf8c97d94
msgid "See :ref:`document-querying-by-array-type` for an example."
msgstr ""

#: ../source/reference/operator/query/type.txt:78
# ad12b7578e3841c8bf938e5848702536
msgid "MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:80
# 11565003086f49f79ddc56b064f037db
msgid ":bsontype:`MinKey <data_minkey>` and :bsontype:`MaxKey <data_maxkey>` are used in comparison operations and exist primarily for internal use. For all possible :term:`BSON` element values, ``MinKey`` will always be the smallest value while ``MaxKey`` will always be the greatest value."
msgstr ""

#: ../source/reference/operator/query/type.txt:85
# 52332efacc3848349e23af5acdf1ad2b
msgid "Querying for  ``minKey`` or ``maxKey`` with :query:`$type` will only return fields that match the special ``MinKey`` or ``MaxKey`` values."
msgstr ""

#: ../source/reference/operator/query/type.txt:89
# 5562cd49d5f24edf863d5341db52789c
msgid "Suppose that the ``data`` collection has two documents with ``MinKey`` and ``MaxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:97
# 6e2a86e3e5f74b52b7598acea618abaf
msgid "The following query will return the document with ``_id: 1``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:103
# 42bc89a68ec84f2aa48f0909b9a63d08
msgid "The following query will return the document with ``_id: 2``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:110
# 6cadd0808c6d44449c587fb264964f35
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:115
# 39ef4b9bef284426ad26d1e87c8a8d52
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:117
# 291bf0aff56741469eedfaac37cf45de
msgid "The ``addressBook`` contains addresses and zipcodes, where ``zipCode`` has ``string``, ``int``, ``double``, and ``long`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:132
# a2f8cdb5e61e43a59388da9b033f8553
msgid "The following queries return all documents where ``zipCode`` is the :term:`BSON` type ``string``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:141
#: ../source/reference/operator/query/type.txt:155
#: ../source/reference/operator/query/type.txt:168
# c16ee3d3ad8d4c77917bee234cc9124b
# 1401d108db5c45958c8c60cc02efe82c
# 6686f8f6bc724693abf20d62e04d5394
msgid "These queries return:"
msgstr ""

#: ../source/reference/operator/query/type.txt:147
# 2084cf2a76654164b96bd826343c5143
msgid "The following queries return all documents where ``zipCode`` is the :term:`BSON` type ``double``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:161
# 4c5110f9501e4e6496894ac2ff044a52
msgid "The following query uses the ``number`` alias to return documents where ``zipCode`` is the :term:`BSON` type ``double``, ``int``, or ``long``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:179
# 4f89bfa22bc743289848f48692436522
msgid "Querying by MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:181
# 9a59bbad28864fd0b4f78cfd45a73e7b
msgid "The ``restaurants`` collection uses ``minKey`` for any grade that is a failing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:206
# 862366993fa642089e787ce335cff4ac
msgid "And ``maxKey`` for any grade that is the highest passing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:230
# b74ac72620d043c6a1fb3d94b67c6c1c
msgid "The following query returns any restaurant whose ``grades.grade`` field contains  ``minKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:239
#: ../source/reference/operator/query/type.txt:273
# f83a15d9300e4efc98836997ad4efd25
# f742af45ad8a43c5a12ecaf514c0ca1d
msgid "This returns"
msgstr ""

#: ../source/reference/operator/query/type.txt:263
# 0b6a7c2140c141d1b6f37773c4d27a2c
msgid "The following query returns any restaurant whose ``grades.grade`` field contains ``maxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:300
# 5d07b894f58b4ea79d4faba3cbc09caf
msgid "Querying by Array Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:302
# 9960d14c6b794f44adffb9bd74f37f7e
msgid "The ``SensorReading`` collection contains the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:325
# 348c14c39bb04cc09fb5285946773608
msgid "The following query returns any document where ``readings`` has an element of :term:`BSON` type ``array``; i.e. the :query:`$type` does not check if ``readings`` itself is an array:"
msgstr ""

#: ../source/reference/operator/query/type.txt:333
# 5d957a40b54844ecbc128fc4ec935466
msgid "This returns the following doucment:"
msgstr ""

#: ../source/reference/operator/query/type.txt:347
# c0ad1611e62047b79449539d3651d8db
msgid "The document with ``_id : 1`` has at least one element in ``readings`` that is an ``array``, whereas the document with ``_id : 2`` does *not*."
msgstr ""

#: ../source/reference/operator/query/type.txt:351
# e8dc1f99478d476b814f9981303f77eb
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:353
# ddb33a3905c542f0898bde51aee83965
msgid ":method:`~db.collection.find()`, :doc:`BSON Types </reference/bson-types>`."
msgstr ""

