# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
# ac9e450962b44af79d14eb28d619dc00
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d0c6cd5754344537885d07fe46241cc8
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/where.txt:15
# 41d31f5ac9414931a6cc326ab3623653
msgid "Use the :query:`$where` operator to pass either a string containing a JavaScript expression or a full JavaScript function to the query system. The :query:`$where` provides greater flexibility, but requires that the database processes the JavaScript expression or function for *each* document in the collection. Reference the document in the JavaScript expression or function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:24
# 95d3b352929646edbc0e05ae1939e156
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:27
# 35861c12198f457a8ecac63e26cd48b8
msgid "Restrictions"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# 9862270bb0834753ad705f0dca0e2088
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# 192543d553f84d4cbcb3fc8f3c8f3da4
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# f912db2c764a4b39bb8ad1c7304d5d96
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# 0524a7d2d3bd428c8edbcbc0da33511b
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# a360e1b6991c4859b0de46b9aacfe06b
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3835453604464cb8936b18c9fce6fa09
msgid "``args``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9226bb54c8e84840ad1c08d62b98c53b
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# fedcbbb20369409d9420ccbffd5b64fe
msgid "``MinKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 252b88f7e048431ca395a1bc64e8c66a
msgid "``assert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 8075b8a1c54e4086bdce84ca37d2202d
msgid "``BinData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 207afafbd8074c35abf11b596cfcaa80
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 103981e17ffd4dd2b8e83292a882e3e4
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a0765de659bc49b7851b9bef4075b21a
msgid "``doassert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9ecf5d2f23c9451cbea73a17b1673a80
msgid "``emit()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3f20663ca78f46fa9d010ba803201488
msgid "``gc()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 88973c66e05b481e82c82d75bf6336d9
msgid "``HexData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 53ce52bde1184d5199ab69f64ddfefdc
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f2fd3fbceac4467285ac4870d47662bd
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a40623f0959544f78eb0107123686153
msgid "``isObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a274b968b3564f1a82a133eb047b2303
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 47ed69224ebc4871aaa5373432aeaebc
msgid "``isString()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# ad68b07ce70d487c8e35017954323494
msgid "``Map()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# bf802b672a3c4ed894617535095c66dd
msgid "``MD5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# fc3e9831c49044caa9d2d54a2a9e47b1
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# ed686c859bd3496598e5da7cd8b30d26
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f4fc72c749d245148ac9433ef3f594ab
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 662eee3f015c4a579e653c5b3e6bf362
msgid "``print()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a3418f0c82a7431597663253a338f6a7
msgid "``printjson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 24523e4fd1bb4970a6e9f3bf5331898f
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a33cf109c51a42a9b92f19fe8ceb0c27
msgid "``sleep()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a84b7c450038482b8295b539e4e7c2d4
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 8a58601050754726a28cb228d132dbd0
msgid "``tojson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 0e0388122bd54c5299f34ce9878b768a
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 43fe0069e76a4f8493593a8371506606
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f199e813e5c743099c4990ae0f20504c
msgid "``UUID()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# c05de58f012e4ae2a78e70b910cbc15e
msgid "``version()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:34
# d1b7794a4f85456bb7e477497a076b2f
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:38
# fe42450385384f0aa9f409da018fa3f3
msgid "Only apply the :query:`$where` query operator to top-level documents. The :query:`$where` query operator will not work inside a nested document, for instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:43
# 8b566aaed5f040088db9325417228719
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:45
# ceb63a454c8747ef8fe0f20d6ba1402d
msgid "Do not use global variables."
msgstr ""

#: ../source/reference/operator/query/where.txt:47
# fe7691ff27954388b3ff59cce8aaa765
msgid ":query:`$where` evaluates JavaScript and cannot take advantage of indexes. Therefore, query performance improves when you express your query using the standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:52
# b36ab7490a244d0b838c3a26c08d2352
msgid "In general, you should use :query:`$where` only when you can't express your query using another operator. If you must use :query:`$where`, try to include at least one other standard query operator to filter the result set. Using :query:`$where` alone requires a collection scan."
msgstr ""

#: ../source/reference/operator/query/where.txt:58
# 76b613eaea674d41a59d821271aa4391
msgid "Using normal non\\-:query:`$where` query statements provides the following performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:61
# 29204d7bcc3b40bf938480b32432db6b
msgid "MongoDB will evaluate non\\-:query:`$where` components of query before :query:`$where` statements. If the non\\-:query:`$where` statements match no documents, MongoDB will not perform any query evaluation using :query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:66
# cd3781136f3345de9b70211171b136c2
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:70
# 35c23064924646309b2615a38f5cc386
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/where.txt:72
# 48aa5f3f9491451e914b90ad83d7b10a
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:82
# 93603bca003e40bb929e2ab4b6a50046
msgid "Additionally, if the query consists only of the :query:`$where` operator, you can pass in just the JavaScript expression or JavaScript functions, as in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:92
# 9c5f0e8901474385ada1702d198cbc11
msgid "You can include both the standard MongoDB operators and the :query:`$where` operator in your query, as in the following examples:"
msgstr ""

