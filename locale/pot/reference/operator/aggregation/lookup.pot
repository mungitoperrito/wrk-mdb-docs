# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/lookup.txt:3
# 2f9db216b63c4ee8a48522fcea23cc79
msgid "$lookup (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:0
# 020f14c5d6b74c188ef1fb43b51e0948
msgid "On this page"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:14
# e79a6775db374b298afa02dcf3756ba5
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:20
# 1a4bd64ef7104cfdb0683532b7711ddf
msgid "Performs a left outer join to an unsharded collection in the *same* database to filter in documents from the \"joined\" collection for processing. The :pipeline:`$lookup` stage does an equality match between a field from the input documents with a field from the documents of the \"joined\" collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:26
# d7ed658124db43ce87aa6334cce057de
msgid "To each input document, the :pipeline:`$lookup` stage adds a new array field whose elements are the matching documents from the \"joined\" collection. The :pipeline:`$lookup` stage passes these reshaped documents to the next stage."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:31
# 95248742bb2f45f6b7e78cb376f3932c
msgid "The :pipeline:`$lookup` stage has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:45
# 6c6597ab2b3f42f2894ab9ca49c25aeb
msgid "The :pipeline:`$lookup` takes a document with the following fields:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:51
# 0af88db45663421fa9f38c90710d7427
msgid "Field"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:52
# 6d67f97f4cd1475d806a8389cb2afd7c
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:54
# 35e49a9ec0734568b54e6e45d79c12e4
msgid "``from``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:56
# cfe98ef19cbf4ea6842591fa295a6119
msgid "Specifies the collection in the *same* database to perform the join with. The ``from`` collection cannot be sharded."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:59
# 2f14e170772246318e1cca894979a485
msgid "``localField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:61
# addc53f99b6c4c6ba94d5d562ada0508
msgid "Specifies the field from the documents input to the :pipeline:`$lookup` stage. :pipeline:`$lookup` performs an equality match on the ``localField`` to the ``foreignField`` from the documents of the ``from`` collection. If an input document does not contain the ``localField``, the :pipeline:`$lookup` treats the field as having a value of ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:69
# 412a2f76be374f399a7ea749865e0c20
msgid "``foreignField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:71
# 02c4871e80a641658cc7fe4e43dd6148
msgid "Specifies the field from the documents in the ``from`` collection. :pipeline:`$lookup` performs an equality match on the ``foreignField`` to the ``localField`` from the input documents. If a document in the ``from`` collection does not contain the ``foreignField``, the :pipeline:`$lookup` treats the value as ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:78
# 22b98008550c4095a3ae000248f45504
msgid "``as``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:80
# f42cd2e56be84a5a8a861f9c79b02c57
msgid "Specifies the name of the new array field to add to the input documents. The new array field contains the matching documents from the ``from`` collection. If the specified name already exists in the input document, the existing field is *overwritten*."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:88
# b2896d66df0e4caebde9d89e6b026d7a
msgid "If your ``localField`` is an array, you'll need to add an :pipeline:`$unwind` stage to your pipeline. See the :ref:`example <unwind-example>` on this page."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:93
# 3c71dd9ac9444c598fc364b2e81097d5
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:96
# f7b9f83415be48d59c94a2750ee6acd8
msgid "Perform a Join with ``$lookup``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:98
# 62c4c85f2fb64803a8c3f83567aba2a6
msgid "A collection ``orders`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:106
#: ../source/reference/operator/aggregation/lookup.txt:184
# c86a9e94393a4573901850175bbf5a79
# 1c91a8f2fe104158bf7e729521e2eb99
msgid "Another collection ``inventory`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:117
# 7fc44f6532324841a25dd416b48e1e9a
msgid "The following aggregation operation on the ``orders`` collection joins the documents from ``orders`` with the documents from the ``inventory`` collection using the fields ``item`` from the ``orders`` collection and the ``sku`` field from the ``inventory`` collection:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:137
# 1593f6e8647f4f5e8098927e7399851a
msgid "The operation returns the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:170
# e30cca3599c04bdaa39bd9dccaf2ba2f
msgid "Use ``$lookup`` with an Array"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:172
# be873845b0934e838a271d5c8e2706d6
msgid "If your ``localField`` is an array and you'd like to match the elements inside it against a ``foreignField`` which is a single element, you'll need to :pipeline:`$unwind` the array as one stage of the aggregation pipline."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:177
# e73d515af3204f1b9cf8439418e237d3
msgid "Consider a collection ``orders`` with the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:195
# 0c576b893c60456d99c017f84d8b3e4a
msgid "The following aggregation operation performs a join on documents in the ``orders`` collection which match a particular element of the ``specs`` array to the ``size`` field in the ``inventory`` collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:219
# 2c70046c47574504b01916dd98fda837
msgid "The operation returns the following document:"
msgstr ""

