# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/match.txt:3
# 1747da077e534a299459e25002474e59
msgid "$match (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:0
# ba5088ff7a124d1b8c1834f74edb7a56
msgid "On this page"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:14
# fbce1593d6ab4294bd05023e2cbc575e
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:18
# c9b1991aa7e7472fa7b1411a25cc35ed
msgid "Filters the documents to pass only the documents that match the specified condition(s) to the next pipeline stage."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:21
# 9e08e0b04dae48bd858529c614c9ae41
msgid "The :pipeline:`$match` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:27
# cea1ebbfdd364f3489ca5a207487a710
msgid ":pipeline:`$match` takes a document that specifies the query conditions. The query syntax is identical to the :ref:`read operation query <read-operations-query-argument>` syntax."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:32
# 75fec7362ae04d7484b3e7ad3197ad54
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:35
# faf419e1334c4893b1d0ff51986b8bc2
msgid "Pipeline Optimization"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:37
# 8408f0b532374f8297ba8c3b57e7b92a
msgid "Place the :pipeline:`$match` as early in the aggregation :term:`pipeline` as possible. Because :pipeline:`$match` limits the total number of documents in the aggregation pipeline, earlier :pipeline:`$match` operations minimize the amount of processing down the pipe."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:43
# 40b4aaa7a67043068f76334f783cc5e3
msgid "If you place a :pipeline:`$match` at the very beginning of a pipeline, the query can take advantage of :term:`indexes <index>` like any other :method:`db.collection.find()` or :method:`db.collection.findOne()`."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:49
# 0e4a7124d97f4df299c9063a348d7ed7
msgid "Restrictions"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:51
# 003ce832b24c4efda5c448c1109b436f
msgid "You cannot use :query:`$where` in :pipeline:`$match` queries as part of the aggregation pipeline."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:54
# 74a289d0c18f47b89f5dcfb3c3f30397
msgid "To use :query:`$text` in the :pipeline:`$match` stage, the :pipeline:`$match` stage has to be the first stage of the pipeline."
msgstr ""

#: ../source/includes/extracts/views-unsupported-text-search.rst:1
# 6fa4d3f8a669489597657a9c3c83d26e
msgid ":doc:`Views </core/views>` do not support text search."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:60
# 2f7675062c4a4183854265d551b9b2f5
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:62
# d34130432a524736998818bb5b366d80
msgid "The examples use a collection named ``articles`` with the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:76
# 4c559c2d5efe42c0b45b9209cd04359f
msgid "Equality Match"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:78
# 53b75fde55b447c996f699aa94b5ee76
msgid "The following operation uses :pipeline:`$match` to perform a simple equality match:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:87
# cd4c360638d041c1a71d4d69a322662a
msgid "The :pipeline:`$match` selects the documents where the ``author`` field equals ``dave``, and the aggregation returns the following:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:98
# 4c0ae312be2b4944843b2fba47118160
msgid "Perform a Count"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:100
# 3bb08da7a46d46fda5a37db3877be6a4
msgid "The following example selects documents to process using the :pipeline:`$match` pipeline operator and then pipes the results to the :pipeline:`$group` pipeline operator to compute a count of the documents:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:112
# 9741316fef15494bb97b6e6d64f700f2
msgid "In the aggregation pipeline, :pipeline:`$match` selects the documents where either the ``score`` is greater than ``70`` and less than ``90`` or the ``views`` is greater than or equal to ``1000``. These documents are then piped to the :pipeline:`$group` to perform a count. The aggregation returns the following:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:123
# a0e05262448741f99cc4cb4ec0957005
msgid ":doc:`/tutorial/aggregation-zip-code-data-set`, :doc:`/tutorial/aggregation-with-user-preference-data`"
msgstr ""

