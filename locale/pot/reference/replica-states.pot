# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/replica-states.txt:3
# ba98d9fa2bb146c8a23d229868ccb683
msgid "Replica Set Member States"
msgstr ""

#: ../source/reference/replica-states.txt:0
# 73cdb389aa544983b39f02ced215675a
msgid "On this page"
msgstr ""

#: ../source/reference/replica-states.txt:13
# 81befd454fb748db965b0aa9c6d789a6
msgid "Each member of a replica set has a state that reflects its disposition within the set."
msgstr ""

#: ../source/includes/replica-states.rst:5
# b86afd8beecc4f38af71b81c917931ca
msgid "Number"
msgstr ""

#: ../source/includes/replica-states.rst:6
# 15b0ffecbbf841bb81ad80abcf659333
msgid "Name"
msgstr ""

#: ../source/includes/replica-states.rst:7
# 4681fb881071467e95b5a7147d5dce7d
msgid "State Description"
msgstr ""

#: ../source/includes/replica-states.rst:9
# 0f506b8590a6478a8feef98431469b2a
msgid "0"
msgstr ""

#: ../source/includes/replica-states.rst:10
# 1726f64c22d84f2384480710b45f8ea7
msgid ":replstate:`STARTUP`"
msgstr ""

#: ../source/includes/replica-states.rst:12
# 2a171c47832143499635ade274c1d128
msgid "Not yet an active member of any set. All members start up in this state. The :program:`mongod` parses the :doc:`replica set configuration document </administration/replica-set-member-configuration>` while in :replstate:`STARTUP`."
msgstr ""

#: ../source/includes/replica-states.rst:18
# e5f5bbc290ca4ba992778598084133c2
msgid "1"
msgstr ""

#: ../source/includes/replica-states.rst:19
# 6f9e9a981d7f4f6585ffde54012e9066
msgid ":replstate:`PRIMARY`"
msgstr ""

#: ../source/includes/replica-states.rst:21
# 2597b4c668a649f7877b645d3c8911c6
msgid "The member in state :doc:`primary </core/replica-set-primary>` is the only member that can accept write operations. Eligible to vote."
msgstr ""

#: ../source/includes/replica-states.rst:25
# 969e2795871f42139a26d1a5b55ccae9
msgid "2"
msgstr ""

#: ../source/includes/replica-states.rst:26
# 853309a1b88e4d08a45366045ad82153
msgid ":replstate:`SECONDARY`"
msgstr ""

#: ../source/includes/replica-states.rst:28
# e7495622dd1647b2a796d14134b35ce1
msgid "A member in state :doc:`secondary </core/replica-set-secondary>` is replicating the data store. Eligible to vote."
msgstr ""

#: ../source/includes/replica-states.rst:31
# 368d596ce5824f4f8b14941c6d1098a5
msgid "3"
msgstr ""

#: ../source/includes/replica-states.rst:32
# d83b6313b6464ec8947f2cfc787e9e1a
msgid ":replstate:`RECOVERING`"
msgstr ""

#: ../source/includes/replica-states.rst:34
# 4a4fdefd1f0c4a4ca8a450a5a5b84e2d
msgid "Members either perform startup self-checks, or transition from completing a :doc:`rollback </core/replica-set-rollbacks>` or :doc:`resync </tutorial/resync-replica-set-member>`. Eligible to vote."
msgstr ""

#: ../source/includes/replica-states.rst:39
# 7cd15f3ce0164758bc87f743b07512a7
msgid "5"
msgstr ""

#: ../source/includes/replica-states.rst:40
# dd997ae763484c138bb833c87cd54688
msgid ":replstate:`STARTUP2`"
msgstr ""

#: ../source/includes/replica-states.rst:41
# 65fb89efdffc4d72b2380c5834191c5d
msgid "The member has joined the set and is running an initial sync."
msgstr ""

#: ../source/includes/replica-states.rst:43
# 6a4bea398fb242c3b1934cbdbab17d68
msgid "6"
msgstr ""

#: ../source/includes/replica-states.rst:44
# 4b0ce42d425340b38de71ccd97ecfc72
msgid ":replstate:`UNKNOWN`"
msgstr ""

#: ../source/includes/replica-states.rst:45
# 0a874bbbbdec4a00968fb452f4b1b8e5
msgid "The member's state, as seen from another member of the set, is not yet known."
msgstr ""

#: ../source/includes/replica-states.rst:47
# 465125e563554c2fa77b5468b697da21
msgid "7"
msgstr ""

#: ../source/includes/replica-states.rst:48
# 77c63a1553d2451a9428614bb15d407a
msgid ":replstate:`ARBITER`"
msgstr ""

#: ../source/includes/replica-states.rst:49
# 8fa31804becf48f7af3efaf852d2b488
msgid ":ref:`Arbiters <replica-set-arbiters>` do not replicate data and exist solely to participate in elections."
msgstr ""

#: ../source/includes/replica-states.rst:51
# 363f2c59c4614d1da339ebcf3c9fd8c0
msgid "8"
msgstr ""

#: ../source/includes/replica-states.rst:52
# b25be508ad3240199fa040018d82fbc3
msgid ":replstate:`DOWN`"
msgstr ""

#: ../source/includes/replica-states.rst:53
# 7e9519fe8a8b49298ca69063a17d0768
msgid "The member, as seen from another member of the set, is unreachable."
msgstr ""

#: ../source/includes/replica-states.rst:55
# ec4e817ad9c345ebbfe8c91a9e38b904
msgid "9"
msgstr ""

#: ../source/includes/replica-states.rst:56
# 1b15e1af7b6648b1a4a1eb79f3529814
msgid ":replstate:`ROLLBACK`"
msgstr ""

#: ../source/includes/replica-states.rst:57
# a96a941ebd3844259d53c5445ea2bd17
msgid "This member is actively performing a :doc:`rollback </core/replica-set-rollbacks>`.  Data is not available for reads."
msgstr ""

#: ../source/includes/replica-states.rst:59
# 8d84cc50bc2f4026bb4253803d3ce214
msgid "10"
msgstr ""

#: ../source/includes/replica-states.rst:60
# e2dadf931738423fa54bde6090d9d6f4
msgid ":replstate:`REMOVED`"
msgstr ""

#: ../source/includes/replica-states.rst:61
# 2249d31343174f1294d98a66dbeb1079
msgid "This member was once in a replica set but was subsequently removed."
msgstr ""

#: ../source/reference/replica-states.txt:18
# 00628b99ccfa468cbd948eade00a2c45
msgid "States"
msgstr ""

#: ../source/reference/replica-states.txt:21
# 1aea95e7da664423aa17260747780ea1
msgid "Core States"
msgstr ""

#: ../source/reference/replica-states.txt:25
# 063bb40c6fe4409f910a591255d25006
msgid "Members in :replstate:`PRIMARY` state accept write operations. A replica set has at most one primary at a time. [#edge-cases-2-primaries]_ A :replstate:`SECONDARY` member becomes primary after an :ref:`election <replica-set-elections>`. Members in the :replstate:`PRIMARY` state are eligible to vote."
msgstr ""

#: ../source/reference/replica-states.txt:32
# 2ee9b37c0c634c558bae9dd9b8161264
msgid "Members in :replstate:`SECONDARY` state replicate the primary's data set and can be configured to accept read operations. Secondaries are eligible to vote in elections, and may be elected to the :replstate:`PRIMARY` state if the primary becomes unavailable."
msgstr ""

#: ../source/reference/replica-states.txt:39
# d8fa985c08074294a482360ee34fc23d
msgid "Members in :replstate:`ARBITER` state do not replicate data or accept write operations. They are eligible to vote, and exist solely to break a tie during elections. Replica sets should only have a member in the :replstate:`ARBITER` state if the set would otherwise have an even number of members, and could suffer from tied elections. There should only be at most one arbiter configured in any replica set."
msgstr ""

#: ../source/reference/replica-states.txt:46
# 7884cff83e8245c4a77d579537c6e2c5
msgid "See :doc:`/core/replica-set-members` for more information on core states."
msgstr ""

#: ../source/reference/replica-states.txt:49
# f087cdc6d8424e5294b327e5d2a5ed5b
msgid "Other States"
msgstr ""

#: ../source/reference/replica-states.txt:53
# 987a21ef83bf42d0834aa35b89c37867
msgid "Each member of a replica set starts up in :replstate:`STARTUP` state. :program:`mongod` then loads that member's replica set configuration, and transitions the member's state to :replstate:`STARTUP2`. Members in :replstate:`STARTUP` are not eligible to vote, as they are not yet a recognized member of any replica set."
msgstr ""

#: ../source/reference/replica-states.txt:60
# b5bd1609394f47c0b9adcd4c311009db
msgid "Each member of a replica set enters the :replstate:`STARTUP2` state as soon as :program:`mongod` finishes loading that member's configuration, at which time it becomes an active member of the replica set. The member then decides whether or not to undertake an initial sync. If a member begins an initial sync, the member remains in :replstate:`STARTUP2` until all data is copied and all indexes are built.  Afterwards, the member transitions to :replstate:`RECOVERING`."
msgstr ""

#: ../source/reference/replica-states.txt:70
# 74a79e1861404667b5e8d9cbf952767d
msgid "A member of a replica set enters :replstate:`RECOVERING` state when it is not ready to accept reads. The :replstate:`RECOVERING` state can occur during normal operation, and doesn't necessarily reflect an error condition.  Members in the :replstate:`RECOVERING` state are eligible to vote in elections, but are not eligible to enter the :replstate:`PRIMARY` state."
msgstr ""

#: ../source/reference/replica-states.txt:77
# dac61b82b58f47ba854c997a47ad5ffc
msgid "A member transitions from :replstate:`RECOVERING` to :replstate:`SECONDARY` after replicating enough data to guarantee a consistent view of the data for client reads.  The only difference between :replstate:`RECOVERING` and :replstate:`SECONDARY` states is that :replstate:`RECOVERING` prohibits client reads and :replstate:`SECONDARY` permits them. :replstate:`SECONDARY` state does not guarantee anything about the staleness of the data with respect to the primary."
msgstr ""

#: ../source/reference/replica-states.txt:85
# d80b410195d948bfbeae259d5498c047
msgid "Due to overload, a :term:`secondary` may fall far enough behind the other members of the replica set such that it may need to :doc:`resync </tutorial/resync-replica-set-member>` with the rest of the set. When this happens, the member enters the :replstate:`RECOVERING` state and requires manual intervention."
msgstr ""

#: ../source/reference/replica-states.txt:92
# d60b8b738afc48c89becd1799dc839d0
msgid "Error States"
msgstr ""

#: ../source/reference/replica-states.txt:94
# 9bfbe7bf4478489dac7beb4520cd5723
msgid "Members in any error state can't vote."
msgstr ""

#: ../source/reference/replica-states.txt:98
# 158517d66940444c887c450a376c8d41
msgid "Members that have never communicated status information to the replica set are in the :replstate:`UNKNOWN` state."
msgstr ""

#: ../source/reference/replica-states.txt:103
# c22c21053eda4e83873f592f3642518c
msgid "Members that lose their connection to the replica set are seen as :replstate:`DOWN` by the remaining members of the set."
msgstr ""

#: ../source/reference/replica-states.txt:107
# dbe0a41355dd461894144b9af0c95cb0
msgid "Members that are removed from the replica set enter the :replstate:`REMOVED` state. When members enter the :replstate:`REMOVED` state, the logs will mark this event with a ``replSet REMOVED`` message entry."
msgstr ""

#: ../source/reference/replica-states.txt:114
# 9e557ea939fe4ce7a3f462f2e48a1caa
msgid "Whenever the replica set replaces a :term:`primary` in an election, the old primary may contain documents that did not replicate to the :term:`secondary` members. In this case, the old primary member reverts those writes. During :doc:`rollback </core/replica-set-rollbacks>`, the member will have :replstate:`ROLLBACK` state."
msgstr ""

#: ../source/reference/replica-states.txt:123
# 5c57cddfe34c4b7191c96d95a9a45d78
msgid "*Removed in version 3.0:* A member in :replstate:`FATAL` encountered an unrecoverable error.  The member must be shut down and restarted; a resync may be required as well."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
# eedca7e72833446195cb6b5c9203fe2f
msgid "In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may *transiently* believe that they are the primary, but at most, one of them will be able to complete writes with :writeconcern:`{ w: \"majority\" } <\"majority\">` write concern. The node that can complete :writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current primary, and the other node is a former primary that has not yet recognized its demotion, typically due to a :term:`network partition`. When this occurs, clients that connect to the former primary may observe stale data despite having requested read preference :readmode:`primary`, and new writes to the former primary will eventually roll back."
msgstr ""

