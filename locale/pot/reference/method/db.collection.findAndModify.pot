# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# bd02cc2a2c344a47b60278d97ce20326
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:0
# 2b28688fdd414a33a5e0696bea693cb5
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:18
# 443cb6b03a744b25a2e95c9405102d7b
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:22
# 4c173c6873614266bf8628234239f3a7
msgid "Modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:29
# 31b87c812664431ebc15d847fdf9db0d
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:47
# 5f7dbd7a814a4e59a38489ae7c2cd4cd
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following embedded document fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:55
# ca657bc8387044aaa969a0d79ced2dd7
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:57
# 7f782339677d4703ba09bcf6c7ae0feb
msgid "For remove operations, if the query matches a document, :method:`~db.collection.findAndModify()` returns the removed document. If the query does not match a document to remove, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:62
# a52acf2e5ffc4baba80c47900e84c309
msgid "For update operations, :method:`~db.collection.findAndModify()` returns one of the following:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:1
# fd2dea8e3a754fc4b8e4b20a2ed63f1a
msgid "If the ``new`` parameter is not set or is ``false``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:3
# 33374ee6062d4aa1955b049c357f83df
msgid "the pre-modification document if the query matches a document;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:5
#: ../source/includes/extracts/fact-findandmodify-method-return.rst:13
# e72e7e0ba6774cbaa00efb6e772dcf69
# 61d0e114a3b44d068ca03e2669b91121
msgid "otherwise, ``null``."
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:7
# d813fa293dcb41afbfe42a6cc86f0464
msgid "If ``new`` is ``true``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:9
# 129c8b0bd9174f27a32dc87560c83799
msgid "the modified document if the query returns a match;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:11
# 8f4fac64c1f545468ddcacdd22fbe2db
msgid "the inserted document if ``upsert: true`` and no document matches the query;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:17
# 98248ed9f66c47959a8ef351f3ca93a7
msgid "In previous versions, if for the update, ``sort`` is specified, and ``upsert: true``, and the ``new`` option is not set or ``new: false``, :method:`db.collection.findAndModify()` returns an empty document ``{}`` instead of ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:68
# 6a0d2addb3c741c1b502de9a1aa48d5a
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:73
# db996edd9f8f4bbca259513cc747fda2
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:75
# 35dd9b8c938a43eba95718d03a491b4a
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:79
# 3e3d357479a2458998d8497509145534
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:91
# 1bacbe71c6964b20bc31f122c7f30699
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert, creating multiple duplicate documents."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:97
# 18ad2603635a4e658ec390f9578e6e03
msgid "To prevent the creation of multiple duplicate documents with the same name, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With this unique index in place, the multiple methods will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:102
# 55f73fe9340b4750bf1c3f2f993d463d
msgid "Exactly one :method:`~db.collection.findAndModify()` successfully inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:105
# 5b23db84817a4be69ede241f9f9a99e2
msgid "Zero or more :method:`~db.collection.findAndModify()` methods update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:108
# 3aa9ae6d054746d8a4464a108a7d5e5b
msgid "Zero or more :method:`~db.collection.findAndModify()` methods fail when they attempt to insert documents with the same name. If the method fails due to the unique index constraint violation on the ``name`` field, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:115
# 28d98c113ad94040bbd8ceefddd729c5
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:117
# a2692c70b5ce4946a92f96ed3dd01af8
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:121
# f51e3483689b49d5b85550ca5fd6f10b
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:125
# a348b7d3930643e7a34567504da7019e
msgid "Document Validation"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-db.collection.findAndModify.rst:1
# a1d01ea0e9064d2b80c8dbadab4a661c
msgid "The :method:`db.collection.findAndModify()` method adds support for the ``bypassDocumentValidation`` option, which lets you bypass :ref:`document validation <3.2-rel-notes-document-validation>` when inserting or updating documents in a collection with validation rules."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:132
# e658969aade74a428928fcc566235568
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# 254410c880f642d5a1536cb8b814c2ea
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 2c995e29d5cd406782e7e702099ca428
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# f4728bf0fc9442378745b065eecb4aed
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 6bca62a6547344fb8cc53d06ac3b16ab
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# 9e4b956f4851456a861da49ad12a1561
msgid "By default, |operation| returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# e1d351f04cb64504aad311d2017e4b9c
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# 57d2c08181984a3abfbec9060afeedee
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/core/write-operations-atomicity` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:140
# 8d9027cee8b7434588620811a9e6d949
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:143
# ed957a4e429d4c79bafd7168b7f48dd5
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:145
# a34c846a381e413882a0d4095da2f9e2
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:156
# f37aa8b81f6449958eca128b8e32415a
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:158
# 9024f1cb585c4886acf76bca8698688a
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:163
# 4e74f55fe7624562b987bc0db7b4ec3e
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:168
# 5242e8bffc5b45558e7898eec38d48cc
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:171
# 542ea28479c34f038c43f31a1160f0e0
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:184
# eeaf8cf9d9f04b5b8759d9535ef0a09e
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:187
# 7ed370357bab49b393c8bc3ff4cc8441
msgid "If no document matched the ``query`` condition, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:191
# b8423e06840a48f697c66cad08b4d008
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:193
# c236943482d944f1bf2d8a2856799a2f
msgid "The following method includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:207
# 82d4395537ec4597afb35a65ed03b352
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:209
# 00ca34978cd34389987be3b123d4da72
msgid "If the method does **not** find a matching document, the method creates a new document. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:218
# 0e9845f5590448659247a823ae5768ae
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:226
# f2141927eeb848f18e98f259dd55c5dc
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:228
# 606bffa0ae5a4036ba46a7b2f88a0fb2
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option. The method either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:234
# 8c970b27e7e3416d9f092a79fcf62b97
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:247
# e5a64c707a1341b5b2b9c8f873f89d7b
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:262
# 4fc66fdfd93340888e093697cce1cec1
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:264
# ea4708d306a544c79bf0e9c4e74a3ae1
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:279
# 802896db800a46e79a29a162e71b70f9
msgid "The method returns the deleted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:292
# aa051e7f299a45479eaab084113b5453
msgid "Specify Collation"
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
# 6579b8ebaba9478c82ddd5a660db52da
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:296
# 72ec2b2e1d1040d4bf26829a8bf46ee9
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:304
# 2a7fb04b17524dfeacbd1a7ee5347988
msgid "The following operation includes the :ref:`collation <collation>` option:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:316
# 12f85f645aad4225b04f47f32eb67597
msgid "The operation returns the following document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:322
# 32eeb6499d02467facd3a954ca17a37a
msgid ":ref:`perform-findAndModify-linearizable-reads`"
msgstr ""

