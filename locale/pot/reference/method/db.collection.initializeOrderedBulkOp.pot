# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:3
# c92ab5cd951a4431864396ba310ef2e0
msgid "db.collection.initializeOrderedBulkOp()"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:0
# 1df711d508754f3e9b80de53c862e917
msgid "On this page"
msgstr ""

#: ../source/includes/fact-bulkwrite.rst:0
# 4d87ac15a6914b36b3f77505784f35ff
msgid "Tip"
msgstr ""

#: ../source/includes/fact-bulkwrite.rst:3
# 8f2665362da24357bb5ecaf4f717a0ab
msgid "Starting in version 3.2, MongoDB also provides the :method:`db.collection.bulkWrite()` method for performing bulk write operations."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:16
# 99c0551f079c405daa6dc39d09820c50
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:20
# 5c47e0ac065d49b093051abdffc12855
msgid "Initializes and returns a new :method:`Bulk()` operations builder for a collection. The builder constructs an ordered list of write operations that MongoDB executes in bulk."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:24
# 6fd39abe9e14474494a72fd990ccf2f9
msgid "new :method:`Bulk()` operations builder object."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:27
# d08328ebc5ed46fb9f6edc812e20aace
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:30
# 6ea2da68fef3496ea4996b2d2a6e440f
msgid "Order of Operation"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:32
# 42532855d06e45338f1585050ecaa117
msgid "With an *ordered* operations list, MongoDB executes the write operations in the list serially."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:36
# aba7b73e096e47daab1c0a97c6080062
msgid "Execution of Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
# 84e5453ede06426f93db4827e784cbbe
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups the operations by the :data:`operation type <batchType>` and contiguity; i.e. *contiguous* operations of the same type are grouped together. For example, if an ordered list has two insert operations followed by an update operation followed by another insert operation, MongoDB groups the operations into three separate groups: first group contains the two insert operations, second group contains the update operation, and the third group contains the last insert operation. This behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
# 0b9842ba851e40c6adcb277e7d0fd1f9
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
# 331bcee552154106a4252d05d7798a7b
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
# 147447e268ee4c09ab084ddc08bcab0c
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
# 064da34267e448beadfa0ec91ab3b505
msgid "Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations on a sharded collection will generally be slower than executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:45
# 073a10053a5946ec92550d8db619ab4c
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:47
# 1a5b10357c0d4c9fad172f84622ba4ec
msgid "If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list."
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:52
# 5844eec42f77422da0571a8711401ab6
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:54
# 62f7779434cf46c9aa5e1db6af87caca
msgid "The following initializes a :method:`Bulk()` operations builder on the ``users`` collection, adds a series of write operations, and executes the operations:"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:70
# 9da8f96cbab14aa486bf66526e43aeaf
msgid ":method:`db.collection.initializeUnorderedBulkOp()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:72
# c838d22ca812464cbb8cb5fbc0933933
msgid ":method:`Bulk.find()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:74
# e50c547ed35841fa873274f8412dcd99
msgid ":method:`Bulk.find.removeOne()`"
msgstr ""

#: ../source/reference/method/db.collection.initializeOrderedBulkOp.txt:76
# cd6f91d860a04a28924a84b7e410ae55
msgid ":method:`Bulk.execute()`"
msgstr ""

