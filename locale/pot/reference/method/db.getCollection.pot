# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.getCollection.txt:3
# b8d90c1103c34cd598c096824a0b3a47
msgid "db.getCollection()"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:0
# ac9bf9e11fd743238d98890f7d351dab
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:14
# a386c03555cc493ab1a1f74c51f199d0
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:18
# e66d8d49aae64a4086fd4dfdd2e2aee2
msgid "Returns a :term:`collection` object that is functionally equivalent to using the ``db.<collectionName>`` syntax. The method is useful for a collection whose name might interact with the shell itself, such as names that begin with ``_`` or that match a :doc:`database shell method </reference/method/js-database>`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:24
# 9517ca8d3302438aba16c99f62c29e5a
msgid "The :method:`db.getCollection()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:29
# 266a2e6250c64c31b385b61f8c04908b
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:31
# b84399fb7dca430e8ac2279ae22c0137
msgid "The :method:`db.getCollection()` object can access any :doc:`collection methods</reference/method/js-collection>`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:34
# 252dc67ef8ef4118a8cbc81c8d1d31af
msgid "The collection specified may or may not exist on the server.  If the collection does not exist, MongoDB creates it implicitly as part of :doc:`write operations </crud>` like :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:40
# 587e019137fd4a21a49a7f6f63ea781b
msgid "Example"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:42
# 14c057cc3f4b45bc9b3c506c21145c02
msgid "The following example uses :method:`db.getCollection()` to access the ``auth`` collection and insert a document into it."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:59
# 174239137c5a44a4a8634ab0ee02fb0a
msgid "This returns:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:68
# 47a8c212f5ae485cb1d7ac740b9f5a1e
msgid "The previous example requires the use of :method:`db.getCollection(\"auth\")<db.getCollection()>` because of a name conflict with the database method :method:`db.auth()`.  Calling ``db.auth`` directly to perform an insert operation would reference the :method:`db.auth()` method and would error."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:74
# d36820180074416597d621a1326d1174
msgid "The following example attempts the same operation, but without using the :method:`db.getCollection()` method:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:89
# 11467aff0ecc478883610c780b7a193d
msgid "The operation errors as ``db.auth()`` method has no ``insertOne`` method."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:92
# de20f9e2ded04a34a3abc479cc57f373
msgid ":doc:`/reference/method/js-collection`"
msgstr ""

