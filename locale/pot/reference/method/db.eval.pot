# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.eval.txt:3
# bd55c6fbaba64ad886f27e496f7e9471
msgid "db.eval()"
msgstr ""

#: ../source/reference/method/db.eval.txt:0
# 41975d66bedf44cfb985fbd09dc538ed
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.eval.txt:17
# 6be8628bd69e427ebf1d366002685d6b
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.eval.txt:23
# 69d8262cbd6b4935bd5ec02126685878
msgid "Provides the ability to run JavaScript code on the MongoDB server."
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
# 5ea4f500a5c84b2eb383737f757ab113
msgid "The helper :method:`db.eval()` in the :program:`mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

#: ../source/reference/method/db.eval.txt:29
# 943a337bedb94b82b52bd64599c83a49
msgid "The method accepts the following parameters:"
msgstr ""

#: ../source/reference/method/db.eval.txt:33
# 248d438fbb5d4641bc1178b5f60d453a
msgid "The JavaScript function need not take any arguments, as in the first example, or may optionally take arguments as in the second:"
msgstr ""

#: ../source/reference/method/db.eval.txt:49
# 5e48e818445641fb823b137fc261cc82
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:5
# 1ca18cbc705b45c4ae27534e5c9d75aa
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
# 684670546262484a8dadb17907159f69
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
# cef9ff4ff97f44c6abf9b4c55be44d65
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
# b94c0fd98efb4784bf306292eb9c8117
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:14
# 99d29107b243449b99017cf05b8503e3
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:16
# b203e14973c849b28873195e768345ca
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:23
# e5e9f437e2974f63848e23b98a50f138
msgid "Access Control"
msgstr ""

#: ../source/includes/extracts/access-eval-eval.rst:1
# 211a3ce362b44bb7ac31481c6e93e491
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run :dbcommand:`eval`. Providing such access is not recommended, but if your organization requires a user to run :dbcommand:`eval`, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/reference/method/db.eval.txt:56
# dbd95b9cd24945afb5703d3ad4742112
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.eval.txt:58
# 40632be5786942d79fdaeac37599bea5
msgid "The following is an example of the :method:`db.eval()` method:"
msgstr ""

#: ../source/reference/method/db.eval.txt:63
# fccd5b5a7b2144e1977cf218b4b17924
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/method/db.eval.txt:65
# e0b3ff74a2ba4d88a3d30d2ef4591659
msgid "``\"eliot\"`` is the argument passed to the function, and corresponds to the ``name`` argument."
msgstr ""

#: ../source/reference/method/db.eval.txt:68
# c622cf5d4fd3479f94e5579a712a6a4a
msgid "``5`` is an argument to the function and corresponds to the ``incAmount`` field."
msgstr ""

#: ../source/reference/method/db.eval.txt:71
# e11ef2979ccc43518b81fc91df7fb487
msgid "If you want to use the server's interpreter, you must run :method:`db.eval()`. Otherwise, the :program:`mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/method/db.eval.txt:75
# dba92834efe84793bc0b3ba182c92b79
msgid "If an error occurs, :method:`db.eval()` throws an exception. The following is an example of an invalid function that uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/method/db.eval.txt:83
# 311f7ca8b3c249c1b82a9703b74f02dd
msgid "The statement results in the following exception:"
msgstr ""

#: ../source/reference/method/db.eval.txt:95
# d854af7b8b654aef9b90682db68c0f19
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

