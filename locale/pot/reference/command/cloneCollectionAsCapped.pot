# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/cloneCollectionAsCapped.txt:3
# a44912b75ea049ccb5ac82b45c8bd5af
msgid "cloneCollectionAsCapped"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:0
# 1a1241520a5e42ff8316ed5774c095da
msgid "On this page"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:14
# 0ab9af081ebc4c5da0216538d7c1b1d6
msgid "Definition"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:18
# fdc388ee1e4642eca43b497abb966474
msgid "The :dbcommand:`cloneCollectionAsCapped` command creates a new :term:`capped collection` from an existing, non-capped collection within the same database. The operation does not affect the original non-capped collection."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:23
# 1d2356980e2a444ba06058a5eed8481f
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:29
# 1b9d81306a9f4ec588806aa596009911
msgid "The command copies an ``existing collection`` and creates a new ``capped collection`` with a maximum size specified by the ``capped size`` in bytes."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:33
# 9893ecdb43294db2a33e8b67c70c744b
msgid "The name of the new capped collection must be distinct and cannot be the same as that of the original existing collection."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:37
# 67001da099524d029b0def8634f1d6ac
msgid "To replace the original non-capped collection with a capped collection, use the :dbcommand:`convertToCapped` command."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:41
# e9905f02307844b3ad4bcc54781fb191
msgid "Behavior"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:43
# 696ab451987549fb872a437cc7b0d375
msgid "If the ``capped size`` is less than the size of the source collection, then not all documents in the source collection will exist in the destination capped collection."
msgstr ""

