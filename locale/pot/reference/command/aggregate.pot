# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/aggregate.txt:3
# 2e5488b217c744a782ef80478529b610
msgid "aggregate"
msgstr ""

#: ../source/reference/command/aggregate.txt:0
# 64b2240f5ce14134a642875b6a33d47b
msgid "On this page"
msgstr ""

#: ../source/reference/command/aggregate.txt:15
# fca8d17d910049499c5d80406c919778
msgid "Performs aggregation operation using the :doc:`aggregation pipeline </reference/operator/aggregation-pipeline>`. The pipeline allows users to process data from a collection with a sequence of stage-based manipulations."
msgstr ""

#: ../source/reference/command/aggregate.txt:22
# 1c76823d114f4dea9e62980beaee8f9e
msgid "The command has following syntax:"
msgstr ""

#: ../source/reference/command/aggregate.txt:39
# ebac51aa28de40e7b0a1251713a10e97
msgid "The :dbcommand:`aggregate` command takes the following fields as arguments:"
msgstr ""

#: ../source/includes/deprecation-aggregate-wo-cursor.rst:1
#: ../source/includes/deprecation-aggregate-wo-cursor.rst:1
# f1340a302e6a4f88bb1103fa9c57f53c
# 47e3ec3e7d9d4c6f8fce63f1b670ab2e
msgid "MongoDB 3.4 deprecates the use of :dbcommand:`aggregate` command **without** the ``cursor`` option, unless the pipeline includes the ``explain`` option. When returning aggregation results inline using the :dbcommand:`aggregate` command, specify the cursor option using the default batch size ``cursor: {}`` or specify the batch size in the cursor option ``cursor: { batchSize: <num> }``."
msgstr ""

#: ../source/reference/command/aggregate.txt:50
# 44fa49f264814e049b85f28afe039b10
msgid ":doc:`aggregation pipeline </reference/operator/aggregation-pipeline>` introduces the :pipeline:`$out` operator to allow :dbcommand:`aggregate` command to store results to a collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:54
# b2c7e778240e4ab5aa5a8ea22243ac9a
msgid "For more information about the aggregation pipeline :doc:`/core/aggregation-pipeline`, :doc:`/reference/aggregation`, and :doc:`/core/aggregation-pipeline-limits`."
msgstr ""

#: ../source/reference/command/aggregate.txt:59
# 612dcf568f8d44d695d54610f7038bf6
msgid "Example"
msgstr ""

#: ../source/reference/command/aggregate.txt:65
# 98f9547516244c0492d4247f79a706c1
msgid "Rather than run the :dbcommand:`aggregate` command directly, most users should use the :method:`db.collection.aggregate()` helper provided in the :program:`mongo` shell or the equivalent helper in their driver. In 2.6 and later, the :method:`db.collection.aggregate()` helper always returns a cursor."
msgstr ""

#: ../source/reference/command/aggregate.txt:71
# 7c98b5dcf3aa43798eb30e671cabce44
msgid "Except for the first example which demonstrates the command syntax, the examples in this page use the :method:`db.collection.aggregate()` helper."
msgstr ""

#: ../source/reference/command/aggregate.txt:76
# a8a8bc8f7cd44d0588e873a30939f28c
msgid "Aggregate Data with Multi-Stage Pipeline"
msgstr ""

#: ../source/reference/command/aggregate.txt:78
# cf5a8ef618c740bab8100921c478824f
msgid "A collection ``articles`` contains documents such as the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:89
# 9393caf063ac4874b359da3dcd055ed2
msgid "The following example performs an :dbcommand:`aggregate` operation on the ``articles`` collection to calculate the count of each distinct element in the ``tags`` array that appears in the collection."
msgstr ""

#: ../source/reference/command/aggregate.txt:105
# 6288df6bfad448a7ae6bc35f345984b3
msgid "In the :program:`mongo` shell, this operation can use the :method:`db.collection.aggregate()` helper as in the following:"
msgstr ""

#: ../source/reference/command/aggregate.txt:117
# 83217a733cf84b0193cc7fde71524d1b
msgid "Return Information on the Aggregation Operation"
msgstr ""

#: ../source/reference/command/aggregate.txt:119
# 000bb0f508fe4a12951b001edb2ab4ad
msgid "The following aggregation operation sets the optional field ``explain`` to ``true`` to return information about the aggregation operation."
msgstr ""

#: ../source/reference/command/aggregate.txt:132
# 24cabb567b59467b9d82a78eec1bf3dd
msgid "The ``explain`` output is subject to change between releases."
msgstr ""

#: ../source/reference/command/aggregate.txt:134
# 002dcc3b8e87402bbdebbf61a165e4a4
msgid ":method:`db.collection.aggregate()` method"
msgstr ""

#: ../source/reference/command/aggregate.txt:137
# a7f17d5330be4aa6a3e49161e4cf3f58
msgid "Aggregate Data using External Sort"
msgstr ""

#: ../source/reference/command/aggregate.txt:139
# b03c2120b0d749ec8c507563249db193
msgid "Aggregation pipeline stages have :ref:`maximum memory use limit <agg-memory-restrictions>`. To handle large datasets, set ``allowDiskUse`` option to ``true`` to enable writing data to temporary files, as in the following example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:153
#: ../source/reference/command/aggregate.txt:236
# 58f24fdb23c44679801d4462a45d26df
# b254d5e4321e47ef988a9b82b9d2c5de
msgid ":method:`db.collection.aggregate()`"
msgstr ""

#: ../source/reference/command/aggregate.txt:156
# 0fc2bb7f40df4dc1b4b0bfb38c2d23a6
msgid "Aggregate Data Specifying Batch Size"
msgstr ""

#: ../source/reference/command/aggregate.txt:158
# 1bcce4b718574044b5ca5dcd199d65d4
msgid "To specify an *initial* batch size, specify the ``batchSize`` in the ``cursor`` field, as in the following example:"
msgstr ""

#: ../source/reference/command/aggregate.txt:172
# b557e94a3b87492a91b15c6cd641b34a
msgid "The ``{batchSize: 0 }`` document specifies the size of the *initial* batch size only. Specify subsequent batch sizes to :ref:`OP_GET_MORE <wire-op-get-more>` operations as with other MongoDB cursors. A ``batchSize`` of ``0`` means an empty first batch and is useful if you want to quickly get back a cursor or failure message, without doing significant server-side work."
msgstr ""

#: ../source/reference/command/aggregate.txt:180
# 4e9ed4a4525b412285db832158a26694
msgid "Specify a Collation"
msgstr ""

#: ../source/includes/extracts/collation-description.rst:1
# 61cfc9ca38a14bdf8c0bcce866cc07b8
msgid ":doc:`Collation </reference/collation>` allows users to specify language-specific rules for string comparison, such as rules for lettercase and accent marks."
msgstr ""

#: ../source/reference/command/aggregate.txt:184
# 4a366e6b5181461cb0d7e8ed504b1156
msgid "A collection ``myColl`` has the following documents:"
msgstr ""

#: ../source/reference/command/aggregate.txt:192
# eedc2ed6cc3b42e68084418f24f340e2
msgid "The following aggregation operation includes the :ref:`collation` option:"
msgstr ""

#: ../source/reference/command/aggregate.txt:202
# 4ed2fb1119134ea3a019d7cdee547fee
msgid "For descriptions on the collation fields, see :ref:`collation-document-fields`."
msgstr ""

#: ../source/reference/command/aggregate.txt:206
# 9683d9396f5e4049b0aa31935b11858d
msgid "Override Default Read Concern"
msgstr ""

#: ../source/reference/command/aggregate.txt:208
# 927059c187ae47839254db6ed9466bd1
msgid "To override the default read concern level of :readconcern:`\"local\"`, use the ``readConcern`` option. The :dbcommand:`getMore` command uses the ``readConcern`` level specified in the originating :dbcommand:`aggregate` command.s"
msgstr ""

#: ../source/reference/command/aggregate.txt:213
# 70f99455bd3c4ad983cedb5d7f61cac5
msgid "The following operation on a replica set specifies a :doc:`read concern </reference/read-concern>` of :readconcern:`\"majority\"` to read the most recent copy of the data confirmed as having been written to a majority of the nodes."
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:1
# 83e7003cfc944d869a54733ae7f83049
msgid "To use :term:`read concern` level of :readconcern:`\"majority\"`,"
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:3
# cd1366f7da1a493f85243b2ec2178d67
msgid "you must start the :program:`mongod` instances with the :option:`--enableMajorityReadConcern` command line option (or the :setting:`replication.enableMajorityReadConcern` set to ``true`` if using a configuration file)."
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:8
# 7a13cfb1de0845ef82b365d92a54141e
msgid "replica sets must use :ref:`WiredTiger storage engine <storage-wiredtiger>` and election :rsconf:`protocol version 1 <protocolVersion>`."
msgstr ""

#: ../source/includes/fact-aggregate-readConcern.rst:1
# 4098a75f02a3474688336d784cd44b9e
msgid "To use a :doc:`read concern </reference/read-concern>` level of :readconcern:`\"majority\"`, you cannot include the :pipeline:`$out` stage."
msgstr ""

#: ../source/includes/fact-readConcern-most-recent-data-in-node.rst:1
# b380136c3ce740adbebb0dae5e0eafe0
msgid "Regardless of the :term:`read concern` level, the most recent data on a node may not reflect the most recent version of the data in the system."
msgstr ""

#: ../source/includes/usage-read-concern-majority.rst:1
# b201317fd0d04984a65d1f872d8e69a9
msgid "To ensure that a single thread can read its own writes, use :readconcern:`\"majority\"` read concern and :writeconcern:`\"majority\"` write concern against the primary of the replica set."
msgstr ""

