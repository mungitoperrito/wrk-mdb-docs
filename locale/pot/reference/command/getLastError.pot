# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/getLastError.txt:3
# 957bb79541564e289ba38fe2ac9c02e0
msgid "getLastError"
msgstr ""

#: ../source/reference/command/getLastError.txt:0
# 77cbfb5b00d243e9837dfbca4694cbc6
msgid "On this page"
msgstr ""

#: ../source/reference/command/getLastError.txt:14
# 5f4e03bfa77040e09edaabf9d16dcc99
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/fact-2.6-wc-gle-change-cmd-getLastError.rst:5
# 2161f84d93524fed884908c97e5f9f80
msgid "A new protocol for :ref:`write operations <rel-notes-write-operations>` integrates write concerns with the write operations, eliminating the need for a separate :dbcommand:`getLastError`. :ref:`Most write methods <write-methods-incompatibility>` now return the status of the write operation, including error information. In previous versions, clients typically used the :dbcommand:`getLastError` in combination with a write operation to verify that the write succeeded."
msgstr ""

#: ../source/reference/command/getLastError.txt:20
# c838684f4265457dbb860483b4f844d4
msgid "Returns the error status of the preceding write operation on the *current connection*."
msgstr ""

#: ../source/reference/command/getLastError.txt:23
# 86c0a0406dff484e854060db3eaefe66
msgid ":dbcommand:`getLastError` uses the following prototype form:"
msgstr ""

#: ../source/reference/command/getLastError.txt:29
# 40bf6f30e54a4c78ba8fff0656eb40ef
msgid ":dbcommand:`getLastError` uses the following fields:"
msgstr ""

#: ../source/reference/command/getLastError.txt:33
# 04dde49dcd7440a2894af856864b1003
msgid ":doc:`/reference/write-concern`"
msgstr ""

#: ../source/reference/command/getLastError.txt:38
# f373552dd3e249c782a7eed6b2ce471d
msgid "Output"
msgstr ""

#: ../source/reference/command/getLastError.txt:40
# b0bd0b15c0c24bd7b7f304703ed90454
msgid "Each :dbcommand:`~db.collection.getLastError()` command returns a document containing a subset of the fields listed below."
msgstr ""

#: ../source/reference/command/getLastError.txt:45
# 22f7fa6d06514c94b0273a226012f809
msgid ":data:`~getLastError.ok` is ``true`` when the :dbcommand:`getLastError` command completes successfully."
msgstr ""

#: ../source/reference/command/getLastError.txt:48
# c3c73b927a50465c9762d8b7c242e464
msgid "A value of ``true`` does *not* indicate that the preceding operation did not produce an error."
msgstr ""

#: ../source/reference/command/getLastError.txt:53
# 17270e7cce754f268d7d9d323a850d76
msgid ":data:`~getLastError.err` is ``null`` unless an error occurs. When there was an error with the preceding operation, ``err`` contains a string identifying the error."
msgstr ""

#: ../source/reference/command/getLastError.txt:61
# 88e47f1cee76475ea631b2329e778022
msgid ":data:`~getLastError.errmsg` contains the description of the error. :data:`~getLastError.errmsg` only appears if there was an error with the preceding operation."
msgstr ""

#: ../source/reference/command/getLastError.txt:67
# 82ec2317915d47458acf9803f3a33f6e
msgid ":data:`~getLastError.code` reports the preceding operation's error code. For description of the error, see :data:`~getLastError.err` and :data:`~getLastError.errmsg`."
msgstr ""

#: ../source/reference/command/getLastError.txt:73
# e746491972c2454a977997b5834ecc7a
msgid "The identifier of the connection."
msgstr ""

#: ../source/reference/command/getLastError.txt:77
# 166f14984d68442b83d2bd512ed32330
msgid "When issued against a replica set member and the preceding operation was a write or update, :data:`~getLastError.lastOp` is the *optime* timestamp in the :term:`oplog`  of the change."
msgstr ""

#: ../source/reference/command/getLastError.txt:83
# 9e503a1e24ec480bb0dba500a74fcd3a
msgid "If the preceding operation was an update or a remove operation, but *not* a :dbcommand:`findAndModify` operation, :data:`~getLastError.n` reports the number of documents matched by the update or remove operation."
msgstr ""

#: ../source/reference/command/getLastError.txt:88
# 6bfbd5b0183d4347b4c875b75131f096
msgid "For a remove operation, the number of matched documents will equal the number removed."
msgstr ""

#: ../source/reference/command/getLastError.txt:91
# f694b11d44b844849ec6faa01cd7fca4
msgid "For an update operation, if the operation results in no change to the document, such as setting the value of the field to its current value, the number of matched documents may be smaller than the number of documents actually modified. If the update includes the ``upsert:true`` option and results in the creation of a new document, :data:`~getLastError.n` returns the number of documents inserted."
msgstr ""

#: ../source/reference/command/getLastError.txt:99
# 6010265b103f413b85fc862ae8bcc9ae
msgid ":data:`~getLastError.n` is ``0`` if reporting on an update or remove that occurs through a :dbcommand:`findAndModify` operation."
msgstr ""

#: ../source/reference/command/getLastError.txt:104
# 3d682d318d9c428688e8305350e37030
msgid ":data:`~getLastError.syncMillis` is the number of milliseconds spent waiting for the write to disk operation (e.g. write to journal files)."
msgstr ""

#: ../source/reference/command/getLastError.txt:110
# 7eff651380954f66bd782f8250ffd228
msgid "When issued against a sharded cluster after a write operation, :data:`~getLastError.shards` identifies the shards targeted in the write operation. :data:`~getLastError.shards` is present in the output only if the write operation targets multiple shards."
msgstr ""

#: ../source/reference/command/getLastError.txt:117
# d1906fe59fc84da489dd0e4c74e85e20
msgid "When issued against a sharded cluster after a write operation, identifies the shard targeted in the write operation. :data:`~getLastError.singleShard` is only present if the write operation targets exactly one shard."
msgstr ""

#: ../source/reference/command/getLastError.txt:124
# 77ed22b809fc49019cc7429a2266f9fb
msgid ":data:`~getLastError.updatedExisting` is ``true`` when an update affects at least one document and does not result in an :term:`upsert`."
msgstr ""

#: ../source/reference/command/getLastError.txt:130
# 4dd63825518e43e5ba06af6ed28e47eb
msgid "If the update results in an insert, :data:`~getLastError.upserted` is the value of ``_id`` field of the document."
msgstr ""

#: ../source/reference/command/getLastError.txt:133
# 5b8bc50a97cb4e10868db172f40971cd
msgid "Earlier versions of MongoDB included :data:`~getLastError.upserted` only if ``_id`` was an :term:`ObjectId <objectid>`."
msgstr ""

#: ../source/reference/command/getLastError.txt:140
# 6d1d06262ba64c8c91a9d9515c874676
msgid "If set, ``wnote`` indicates that the preceding operation's error relates to using the ``w`` parameter to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:0
# 00a8781a45d0429da69e85d7902490d7
msgid "See"
msgstr ""

#: ../source/reference/command/getLastError.txt:148
# e983124fa554433e89db1ba0cb51dada
msgid ":data:`~getLastError.wtimeout` is ``true`` if the :dbcommand:`getLastError` timed out because of the ``wtimeout`` setting to :dbcommand:`getLastError`."
msgstr ""

#: ../source/reference/command/getLastError.txt:154
# b69ebe78a09a4c7fad1c25086766bd12
msgid "If the preceding operation specified a timeout using the ``wtimeout`` setting to :dbcommand:`getLastError`, then :data:`~getLastError.waited` reports the number of milliseconds :dbcommand:`getLastError` waited before timing out."
msgstr ""

#: ../source/reference/command/getLastError.txt:161
# 3d342a23851849fab82c5719f386be76
msgid ":data:`getLastError.wtime` is the number of milliseconds spent waiting for the preceding operation to complete. If :dbcommand:`getLastError` timed out, :data:`~getLastError.wtime` and :dbcommand:`getLastError.waited` are equal."
msgstr ""

#: ../source/reference/command/getLastError.txt:168
# 6cdb6e82b8c14db596e69057d6e65ba6
msgid "If writing to a replica set, :data:`~getLastError.writtenTo` is an array that contains the hostname and port number of the members that confirmed the previous write operation, based on the value of the ``w`` field in the command."
msgstr ""

#: ../source/reference/command/getLastError.txt:176
# 144c9d15436044cfaf9f72f9204aa322
msgid "Examples"
msgstr ""

#: ../source/reference/command/getLastError.txt:179
# 18933331f7a94e4cbc664d514de61d0e
msgid "Confirm Replication to Two Replica Set Members"
msgstr ""

#: ../source/reference/command/getLastError.txt:181
# c4dd2007eed64e1882b93e64f419da5f
msgid "The following example ensures the preceding operation has replicated to two members (the primary and one other member). The command also specifies a timeout of ``5000`` milliseconds to ensure that the:dbcommand:`getLastError` command does not block forever if MongoDB cannot satisfy the requested write concern:"
msgstr ""

#: ../source/reference/command/getLastError.txt:192
# 5746e7624c844dfdbd6c80204b6df052
msgid "Confirm Replication to a Majority of a Replica Set"
msgstr ""

#: ../source/reference/command/getLastError.txt:194
# 18234f89fc034b5d956e7a79b0755f41
msgid "The following example ensures the write operation has replicated to a majority of the voting members of the replica set. The command also specifies a timeout of ``5000`` milliseconds to ensure that the:dbcommand:`getLastError` command does not block forever if MongoDB cannot satisfy the requested write concern:"
msgstr ""

#: ../source/includes/fact-master-slave-majority.rst:1
# 807bdd7319584cbba6a84237db7d0254
msgid "In :doc:`Master/Slave </core/master-slave>` deployments, MongoDB treats ``w: \"majority\"`` as equivalent to ``w: 1``. In earlier versions of MongoDB, ``w: \"majority\"`` produces an error in :doc:`master/slave </core/master-slave>` deployments."
msgstr ""

