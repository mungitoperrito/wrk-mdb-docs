# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/iterate-a-cursor.txt:5
# 7535be67408f49d88029fe9c330f71ff
msgid "Iterate a Cursor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:0
# c142367b2ede43bd810b59fae7ba128b
msgid "On this page"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:15
# be4eb35ba6b1451b91900a5350df1718
msgid "The :method:`db.collection.find()` method returns a cursor. To access the documents, you need to iterate the cursor. However, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times [#set-shell-batch-size]_ to print up to the first 20 documents in the results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:22
# ef75d26936ea422bbb4b4d6a0cb39232
msgid "The following examples describe ways to manually iterate the cursor to access the documents or to use the iterator index."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:26
# 778ac8fed48d486d859843e1692ddee6
msgid "Manually Iterate the Cursor"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:28
# 62cd36ebce624da698c2d18640b135bd
msgid "In the :program:`mongo` shell, when you assign the cursor returned from the :method:`find() <db.collection.find()>` method to a variable using the ``var`` keyword, the cursor does not automatically iterate."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:32
# 22f937c73ac043a8b44bad4089bcc8eb
msgid "You can call the cursor variable in the shell to iterate up to 20 times [#set-shell-batch-size]_ and print the matching documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:42
# 8b246ff9031b4d46850b704e30f481f6
msgid "You can also use the cursor method :method:`next() <cursor.next()>` to access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:53
# 134c8b2cc0604475a4bea9948ce1d628
msgid "As an alternative print operation, consider the ``printjson()`` helper method to replace ``print(tojson())``:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:64
# 245ac7d455894f38bbc07ef75057b141
msgid "You can use the cursor method :method:`forEach() <cursor.forEach()>` to iterate the cursor and access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:74
# e184bbb17794498baf019608275d072f
msgid "See :ref:`JavaScript cursor methods <js-query-cursor-methods>` and your :doc:`driver </applications/drivers>` documentation for more information on cursor methods."
msgstr ""

#: ../source/includes/footnote-set-shell-batch-size.rst:1
# 41695021569b4218ad391056a5a3a4ed
msgid "You can use the ``DBQuery.shellBatchSize`` to change the number of iteration from the default value ``20``. See :ref:`mongo-shell-executing-queries` for more information."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:81
# 20a34d5d3f954485bdc16ef86df64ce9
msgid "Iterator Index"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:83
# b1b98b3058e8430194276ac12416d4a0
msgid "In the :program:`mongo` shell, you can use the :method:`~cursor.toArray()` method to iterate the cursor and return the documents in an array, as in the following:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:93
# 65b67a642cbf4b8fa8808a6610f88035
msgid "The :method:`~cursor.toArray()` method loads into RAM all documents returned by the cursor; the :method:`~cursor.toArray()` method exhausts the cursor."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:97
# 44b6e74e6bbd4d0dbf08bac4e431b594
msgid "Additionally, some :doc:`drivers </applications/drivers>` provide access to the documents by using an index on the cursor (i.e. ``cursor[index]``). This is a shortcut for first calling the :method:`~cursor.toArray()` method and then using an index on the resulting array."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:103
# d6f1aae37c8d44f1b63301ded4fc2819
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:110
# 9efc3741b90140e6b89c2eea6b5ce16b
msgid "The ``myCursor[1]`` is equivalent to the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:119
# c7246918194647f1b3afaeb5cc2ec6d5
msgid "Cursor Behaviors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:122
# 4baea795e8274c48984fb300fd050f1b
msgid "Closure of Inactive Cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:124
# 28cb5b83cbe043948c04ee2e89b7a95d
msgid "By default, the server will automatically close the cursor after 10 minutes of inactivity, or if client has exhausted the cursor. To override this behavior in the :program:`mongo` shell, you can use the :method:`cursor.noCursorTimeout()` method:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:133
# cdc499e3db9c4acb880fe0d44f8670d5
msgid "After setting the ``noCursorTimeout`` option, you must either close the cursor manually with :method:`cursor.close()` or by exhausting the cursor's results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:136
# 2f0e5ad3373947409e5dbb970acc1175
msgid "See your :doc:`driver </applications/drivers>` documentation for information on setting the ``noCursorTimeout`` option."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:142
# be93fb5f00de4d3098945a5e3cc6a39f
msgid "Cursor Isolation"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:144
# c435666189ca4d0d899610bbb22fdecc
msgid "As a cursor returns documents, other operations may interleave with the query. For the :doc:`MMAPv1 </core/mmapv1>` storage engine, intervening write operations on a document may result in a cursor that returns a document more than once if that document has changed. To handle this situation, see the information on :ref:`snapshot mode <faq-developers-isolate-cursors>`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:154
# 45ca087407e34c49b96d955678afdbfb
msgid "Cursor Batches"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:156
# 10d23e0ddf924c62ae3fb6f8bb231269
msgid "The MongoDB server returns the query results in batches. The amount of data in the batch will not exceed the :ref:`maximum BSON document size <limit-bson-document-size>`. To override the default size of the batch, see :method:`~cursor.batchSize()` and :method:`~cursor.limit()`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:164
# cfdfa556af6a4086be256389754c1cc9
msgid "Operations of type :method:`~db.collection.find()`, :method:`~db.collection.aggregate()`, :dbcommand:`listIndexes`, and :dbcommand:`listCollections` return a maximum of 16 megabytes per batch. :method:`~cursor.batchSize()` can enforce a smaller limit, but not a larger one."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:171
# edc14485737f4bbeaa866f5c35518144
msgid "``find()`` and ``aggregate()`` operations have an initial batch size of 101 documents by default. Subsequent :dbcommand:`getMore` operations issued against the resulting cursor have no default batch size, so they are limited only by the 16 megabyte message size."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:176
# 37bf4fdd9e114ed497b78dd097aff519
msgid "For queries that include a sort operation *without* an index, the server must load all the documents in memory to perform the sort before returning any results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:180
# 782491a037de49079a174af0fc9bc16d
msgid "As you iterate through the cursor and reach the end of the returned batch, if there are more results, :method:`cursor.next()` will perform a :data:`getMore operation <currentOp.op>` to retrieve the next batch. To see how many documents remain in the batch as you iterate the cursor, you can use the :method:`~cursor.objsLeftInBatch()` method, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:196
# b57f03dd5db24d2e85f25fff536400c2
msgid "Cursor Information"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:198
# caded3e4fe8340cea9095bd2278db3bb
msgid "The :method:`db.serverStatus()` method returns a document that includes a :serverstatus:`metrics` field. The :serverstatus:`metrics` field contains a :serverstatus:`metrics.cursor` field with the following information:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:204
# 7be86a3630b041ba86f9a02c0e74ec73
msgid "number of timed out cursors since the last server restart"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:206
# bb142f477cb54be8a829fbedd4274aa6
msgid "number of open cursors with the option :data:`DBQuery.Option.noTimeout` set to prevent timeout after a period of inactivity"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:210
# 8119c525bccb4aa3aa901cac850192eb
msgid "number of \"pinned\" open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:212
# 087e3dfefb164ccdb2d8bf4d46a872b5
msgid "total number of open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:214
# 05f958aad17d4d8eae5879bdd8a72564
msgid "Consider the following example which calls the :method:`db.serverStatus()` method and accesses the ``metrics`` field from the results and then the ``cursor`` field from the ``metrics`` field:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:223
# 0512ffb5b3f543d6bb643772217d3f82
msgid "The result is the following document:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:236
# 2395d4983a4c466ab72ab10da402b62a
msgid ":method:`db.serverStatus()`"
msgstr ""

