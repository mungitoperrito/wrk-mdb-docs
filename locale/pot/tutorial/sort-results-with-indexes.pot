# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/sort-results-with-indexes.txt:6
# e2fd234b59d34020bec1df8bb9f135e8
msgid "Use Indexes to Sort Query Results"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:0
# b213b62c98be4f7dbcd23c072196921e
msgid "On this page"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:16
# 6b0a64ac6e7f485b81f46583e73858d0
msgid "In MongoDB, sort operations can obtain the sort order by retrieving documents based on the ordering in an index. If the query planner cannot obtain the sort order from an index, it will sort the results in memory. Sort operations that use an index often have better performance than those that do not use an index. In addition, sort operations that do *not* use an index will abort when they use 32 megabytes of memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:26
# 8dc0ec48cc2246e09f70708953f8f793
msgid "Sort with a Single Field Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:28
# 7b5ee1bafe6c4155a96b3c300d5cbfff
msgid "If an ascending or a descending index is on a single field, the sort operation on the field can be in either direction."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:31
# 8a1e39f752844f42aaaae357b964a426
msgid "For example, create an ascending index on the field ``a`` for a collection ``records``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:38
# fc5f8db84d76428780be0b9827177c82
msgid "This index can support an ascending sort on ``a``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:44
# 9f55ad73bf6a41b0a6b570feaed53057
msgid "The index can also support the following descending sort on ``a`` by traversing the index in reverse order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:54
# b36789ccc612473d864595c8c0a460b6
msgid "Sort on Multiple Fields"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:56
# 6ed38ecfdd7145e7b032ccc2d8350b24
msgid "Create a :ref:`compound index <index-type-compound>` to support sorting on multiple fields."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:59
# 2af2f150e9c645c8acec287d26746f06
msgid "You can specify a sort on all the keys of the index or on a subset; however, the sort keys must be listed in the *same order* as they appear in the index. For example, an index key pattern ``{ a: 1, b: 1 }`` can support a sort on ``{ a: 1, b: 1 }`` but *not* on ``{ b: 1, a: 1 }``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:65
# 97fd1fa51a8d45ec90e387476891c8e5
msgid "For a query to use a compound index for a sort, the specified sort direction for all keys in the :method:`cursor.sort()` document must match the index key pattern *or* match the inverse of the index key pattern. For example, an index key pattern ``{ a: 1, b: -1 }`` can support a sort on ``{ a: 1, b: -1 }`` and ``{ a: -1, b: 1 }`` but **not** on ``{ a: -1, b: -1 }`` or ``{a: 1, b: 1}``."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:75
# e27be1a721eb4efa9150d78bbbcac962
msgid "Sort and Index Prefix"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:77
# 25213e21b35347acb1948ec4bf7b4dfc
msgid "If the sort keys correspond to the index keys or an index *prefix*, MongoDB can use the index to sort the query results. A *prefix* of a compound index is a subset that consists of one or more keys at the start of the index key pattern."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:82
# 2be80be3f7e04a0ab2b808f62c68b4aa
msgid "For example, create a compound index on the ``data`` collection:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:88
# dd01932cd0484cd28c746966bfdff450
msgid "Then, the following are prefixes for that index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:96
# b8d6ef78d85143c19c8cb238033d7dea
msgid "The following query and sort operations use the index prefixes to sort the results. These operations do not need to sort the result set in memory."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:104
#: ../source/tutorial/sort-results-with-indexes.txt:162
# 936bdb3ed3504389bd9e9b2ff10346a3
# 93b9685712934f26b5016ecf743e59d2
msgid "Example"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:106
#: ../source/tutorial/sort-results-with-indexes.txt:164
# 8e280ff05119426b9e1b0e7a136e3a77
# a82d7ae7f7ce4cfa9bad317bcabaf811
msgid "Index Prefix"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:108
# 696397b89c5640c78841de82d53f19dd
msgid "``db.data.find().sort( { a: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:110
#: ../source/tutorial/sort-results-with-indexes.txt:114
# b89c8ac371954de39a54ff01fffede2f
# 1479e6fda4a2483d861780aac651bffd
msgid "``{ a: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:112
# 42bc7f5e6ac04e34a2b1d33182c74490
msgid "``db.data.find().sort( { a: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:116
# ebeff4d3443f4769b01c35b07ef8c843
msgid "``db.data.find().sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:118
#: ../source/tutorial/sort-results-with-indexes.txt:122
#: ../source/tutorial/sort-results-with-indexes.txt:130
#: ../source/tutorial/sort-results-with-indexes.txt:176
# 713cc3065dbd4f8cacbdbd076c71acd5
# d53fb50a696f4c538157d65009aa54ec
# e2c017db50044947ab29d616a50f950e
# dc8c312458924d42b2c2e3ba2eb6d627
msgid "``{ a: 1, b: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:120
# 29ef5557b4704433a693b5be621e0f1a
msgid "``db.data.find().sort( { a: -1, b: -1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:124
# 57c80e4431c5436d816506ffa876844e
msgid "``db.data.find().sort( { a: 1, b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:126
#: ../source/tutorial/sort-results-with-indexes.txt:172
# c25cc7c8a0ce4c628a19ae913a5dce95
# f69036aa4c044220826651df2922c162
msgid "``{ a: 1, b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:128
# 2a09a9a45c7748cca3689562d0cce9f0
msgid "``db.data.find( { a: { $gt: 4 } } ).sort( { a: 1, b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:132
# ca9e728b0776460aba935461054675ec
msgid "Consider the following example in which the prefix keys of the index appear in both the query predicate and the sort:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:139
# ef672c9584f34d7ba703dabbe326834c
msgid "In such cases, MongoDB can use the index to retrieve the documents in order specified by the sort. As the example shows, the index prefix in the query predicate can be different from the prefix in the sort."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:144
# df49a124ee854788beb67193dfc3f945
msgid "Sort and Non-prefix Subset of an Index"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:146
# 295c792a3e4643018598a3897d10806e
msgid "An index can support sort operations on a non-prefix subset of the index key pattern. To do so, the query must include **equality** conditions on all the prefix keys that precede the sort keys."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:150
# 1907d49661b14eb5aa35c5c92f3dce0c
msgid "For example, the collection ``data`` has the following index:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:156
# 0c10e4e7b6ff44cba9f9c8bb9a9d799b
msgid "The following operations can use the index to get the sort order:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:166
# 6cdf0b928df84d98a268e2ddac12236a
msgid "``db.data.find( { a: 5 } ).sort( { b: 1, c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:168
# f51bea0ae3e14acaa029ca59e6178cf7
msgid "``{ a: 1 , b: 1, c: 1 }``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:170
# 1f91e9f90a524ebcb4a6fa484fddf1e8
msgid "``db.data.find( { b: 3, a: 4 } ).sort( { c: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:174
# 7ffc24a3b8d44ae791b2b31f78f9119a
msgid "``db.data.find( { a: 5, b: { $lt: 3} } ).sort( { b: 1 } )``"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:178
# 59894895363240d7809f250cae648f3a
msgid "As the last operation shows, only the index fields *preceding* the sort subset must have the equality conditions in the query document; the other index fields may specify other conditions."
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:182
# 281e3fc94f4e4638b6f1f5691362014d
msgid "If the query does **not** specify an equality condition on an index prefix that precedes or overlaps with the sort specification, the operation will **not** efficiently use the index. For example, the following operations specify a sort document of ``{ c: 1 }``, but the query documents do not contain equality matches on the preceding index fields ``a`` and ``b``:"
msgstr ""

#: ../source/tutorial/sort-results-with-indexes.txt:194
# e6d14ba845c04bc587e91a0826c69ce4
msgid "These operations **will not** efficiently use the index ``{ a: 1, b: 1, c: 1, d: 1 }`` and may not even use the index to retrieve the documents."
msgstr ""

