# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/insert-documents.txt:5
# fdb0a5d462fb47edaeda4db22ba773f3
msgid "Insert Documents"
msgstr ""

#: ../source/tutorial/insert-documents.txt:0
# 6687b0146f4c45afa401b43a8ea0ab02
msgid "On this page"
msgstr ""

#: ../source/tutorial/insert-documents.txt:16
# 3a14076860244f7d923e84b2e4c7dd60
msgid "Insert Methods"
msgstr ""

#: ../source/tutorial/insert-documents.txt:18
# 38ce052e5c994fee91c3613a297bb039
msgid "MongoDB provides the following methods for inserting :ref:`documents <bson-document-format>` into a collection:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:21
# 732ece2117b04ab497a8e4ec62da4abb
msgid ":ref:`write-op-insertOne`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:23
# e5e11cf6ff4d4e359ddd84da554239fb
msgid ":ref:`write-op-insertMany`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:25
# 5914fb308b9949acba33022b65fd37bb
msgid ":ref:`write-op-insert-method`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:27
# aab4936c49424094980077c19d68cd75
msgid "This page provides examples of insert operations in the :program:`mongo` shell."
msgstr ""

#: ../source/tutorial/insert-documents.txt:33
# a91e7af01f3c4a828cb783f5ebf95b97
msgid "Insert Behavior"
msgstr ""

#: ../source/tutorial/insert-documents.txt:36
# 42280a32e5854e72bf922fd389cfbea8
msgid "Collection Creation"
msgstr ""

#: ../source/tutorial/insert-documents.txt:38
# 3b3a6806ecd146c5bf41a9b48652b6d9
msgid "If the collection does not currently exist, insert operations will create the collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:42
# 257ec69ad7e540aca6f16b6ab9f9f759
msgid "``_id`` Field"
msgstr ""

#: ../source/includes/fact-id-field.rst:1
# 708a1063ace445a484ff22b19da6267c
msgid "In MongoDB, each document stored in a collection requires a unique :term:`_id` field that acts as a :term:`primary key`. If an inserted document omits the ``_id`` field, the MongoDB driver automatically generates an :ref:`objectid` for the ``_id`` field."
msgstr ""

#: ../source/includes/fact-id-field.rst:6
# bad0d09f30084ed1a0819adfcfc6bb28
msgid "This also applies to documents inserted through update operations with :ref:`upsert: true <upsert-parameter>`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:47
# c007a5a484b7401190b3aba58c74dde2
msgid "Atomicity"
msgstr ""

#: ../source/tutorial/insert-documents.txt:49
# 9a9fba6557814ea6a49a88e030896a52
msgid "All write operations in MongoDB are atomic on the level of a single document. For more information on MongoDB and atomicity, see :doc:`/core/write-operations-atomicity`"
msgstr ""

#: ../source/tutorial/insert-documents.txt:56
# a9319611578f43dfbed74fac763fc452
msgid "``db.collection.insertOne()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:60
# 7c1cd3ebe6c94f6cbb8e2d2fe2f96bf9
msgid ":method:`db.collection.insertOne()` inserts a *single* :ref:`document <bson-document-format>` into a collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:63
# d5873d128cae4b9b8e599455991d99c1
msgid "The following example inserts a new document into the ``users`` collection. The new document has three fields ``name``, ``age``, and ``status``. Since the document does not specify an ``_id`` field, MongoDB adds the ``_id`` field with an ObjectId value to the new document. See :ref:`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:85
# f36b238a92db4f2ab77ef395c0fb11c5
msgid ":method:`~db.collection.insertOne()` will return a document providing the inserted document's ``_id`` field. See the :ref:`reference <insertOne-examples>` for an example."
msgstr ""

#: ../source/tutorial/insert-documents.txt:89
# 9dec2d81e7cf410286a3fda69fd8e2a0
msgid "To retrieve the document that you just inserted, :ref:`query the collection <document-query-filter>`:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:96
# 5da93ed53dc14b89a7f9b62f45342fa9
msgid "For more information and examples, see :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:102
# e9e609dc3a294fa0b026cf2fae86f323
msgid "``db.collection.insertMany()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:106
# f7146d0e6b1e455da590ed5f52496ef9
msgid ":method:`db.collection.insertMany()` inserts *multiple* :ref:`documents <bson-document-format>` into a collection."
msgstr ""

#: ../source/tutorial/insert-documents.txt:109
# bbfbc276cca44dda8b47a55dd2927030
msgid "The following example inserts three new documents into the ``users`` collection. Each document has three fields ``name``, ``age``, and ``status``. Since the documents do not specify an ``_id`` field, MongoDB adds the ``_id`` field with an ObjectId value to each document. See :ref:`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:131
# 2361a81767194d00bf25083821b8d6dd
msgid ":method:`~db.collection.insertMany()` will return a document providing each inserted document's ``_id`` field. See the :ref:`reference <insertMany-examples>` for an example."
msgstr ""

#: ../source/tutorial/insert-documents.txt:135
# 6a147a6b56fc450ea5609d4ef235aad7
msgid "To retrieve the inserted documents, :ref:`query the collection <read-operations-query-document>`:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:142
# 86e3427f9b9c4253b37a2bab71a6dab1
msgid "For more information and examples, see :method:`db.collection.insertMany()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:148
# 948a5edf8b154e7e960c441fcfcbc5ec
msgid "``db.collection.insert()``"
msgstr ""

#: ../source/tutorial/insert-documents.txt:150
# 9b9d7dd1771b4d44882caf0a061ab29a
msgid ":method:`db.collection.insert()` inserts a single document or multiple documents into a collection. To insert a single document, pass a document to the method; to insert multiple documents, pass an array of documents to the method."
msgstr ""

#: ../source/tutorial/insert-documents.txt:155
# 5bea34f7357e40ff8c6281491864082e
msgid "The following example inserts a new document into the ``users`` collection. The new document has three fields ``name``, ``age``, and ``status``. Since the document does not specify an ``_id`` field, MongoDB adds the ``_id`` field with an ObjectId value to the document. See :ref:`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:177
# c6b52672367c4f7a8e319ee789f92dea
msgid ":method:`db.collection.insert` returns a :method:`WriteResult` object providing status information."
msgstr ""

#: ../source/tutorial/insert-documents.txt:180
# 6e3c9e8dfe9d4833b6e8a28a48f6d4e1
msgid "For example, a successful insert returns the following :method:`WriteResult` object:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:187
# ab1c935205114bd08388ed4b0f99d267
msgid "The :data:`~WriteResult.nInserted` field specifies the number of documents inserted. If the operation encounters an error, the :method:`WriteResult` object will contain the error information."
msgstr ""

#: ../source/tutorial/insert-documents.txt:191
# f3e5d2d29c72433687bd2dad61a9742f
msgid "The following example inserts multiple documents into the ``users`` collection. Since the documents do not specify an ``_id`` field, MongoDB adds the ``_id`` field with an ObjectId value to each document. See :ref:`write-op-insert-behavior`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:206
# c8ae8c78d49d4a939dd721e9a2472f89
msgid "The method returns a :method:`BulkWriteResult` object with the status of the operation. A successful insert of the documents returns the following :method:`BulkWriteResult` object:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:223
# a1cdf3ad16ca4038a3d8664ebb4d09cc
msgid "For more information and examples, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:226
# f5958aa63948458793a3932b642f2620
msgid "Additional Methods"
msgstr ""

#: ../source/tutorial/insert-documents.txt:228
# a192b9edde1d46bb9cf61266322090ce
msgid "The following methods can also add new documents to a collection:"
msgstr ""

#: ../source/tutorial/insert-documents.txt:230
# 5aa7fffde5844d0cb117787ce38702af
msgid ":method:`db.collection.update()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:233
# 9406fd421d9f46878fcd25ba44e628b5
msgid ":method:`db.collection.updateOne()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:236
# 587a39a57f38488e9e873da93838b8af
msgid ":method:`db.collection.updateMany()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:239
# 6ce9cd393d1d4fceacddd0ee2fce74b7
msgid ":method:`db.collection.findAndModify()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:242
# 668c902f35e54593918938fd8da16179
msgid ":method:`db.collection.findOneAndUpdate()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:245
# 8d511dd7905a4bb492aba39716650528
msgid ":method:`db.collection.findOneAndReplace()` when used with the ``upsert: true`` option."
msgstr ""

#: ../source/tutorial/insert-documents.txt:248
# fa6660a256554e2f95c7591fce6c4d17
msgid ":method:`db.collection.save()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:250
# 3ace6ea4c21e4be0b83c6f90853d70a4
msgid ":method:`db.collection.bulkWrite()`."
msgstr ""

#: ../source/tutorial/insert-documents.txt:252
# a5563efbfd69431382e94180f5fc8435
msgid "See the individual reference pages for the methods for more information and examples."
msgstr ""

#: ../source/tutorial/insert-documents.txt:256
# 98cb1c2fa5314cf1a0d53d801e028c0d
msgid "Write Acknowledgement"
msgstr ""

#: ../source/tutorial/insert-documents.txt:258
# a9d6a6bfd1d34ecab8390d0f0cacbe5f
msgid "With write concerns, you can specify the level of acknowledgement requested from MongoDB for write operations. For details, see :doc:`/reference/write-concern`."
msgstr ""

