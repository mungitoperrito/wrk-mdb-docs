# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:5
# 1e85d7e4b6214e83967a2275c953d126
msgid "Troubleshoot Sharded Clusters"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:0
# 76a8832695304e71ad665b537009e483
msgid "On this page"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:15
# 529fad7b825a48ec8925c8b1941f8efd
msgid "This page describes common strategies for troubleshooting :term:`sharded cluster` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:19
# cd0671f583f64165a5b062710910e52b
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:21
# 79fbfd7020884b7b83e05da98014e7fa
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue to access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:29
# 2193a8b6a72d4f91b388b80ebb28a710
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:31
# 9f37e0eb27fb4b5f866f7fcb396c0f00
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:40
# a85edba31efa47a78f32714cc49a845c
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:44
# c0668a3a5a4342a9bd1ef52fc5c89158
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`; otherwise, it must perform an :term:`initial sync`."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:50
# fbabe106daf7417481dc0b2aabfb4280
msgid "All Members of a Shard Become Unavailable"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:52
# 93697c5821db47f1bf98c13e3c78d287
msgid "If all members of a replica set shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it is possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:62
# 20ca244a607b4f7d8447c50c43540761
msgid "A Config Server Replica Set Member Become Unavailable"
msgstr ""

#: ../source/includes/fact-mirrored-config-servers-deprecated.rst:1
# 33873f62ac6e4d408bbcbbb38368eac1
msgid "Starting in MongoDB 3.2, config servers for sharded clusters can be deployed as a :doc:`replica set </replication>`. The replica set config servers must run the :doc:`WiredTiger storage engine </core/wiredtiger>`. MongoDB 3.2 deprecates the use of three mirrored :program:`mongod` instances for config servers."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:68
# 3d7e4c86c55249828fdcd6f9bcce4ec4
msgid ":doc:`Replica sets </replication>` provide high availability for the config servers. If an unavailable config server is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:73
# 92b1637bac864f73990da27c8518bd86
msgid "If the replica set config server loses its primary and cannot elect a primary, the cluster's metadata becomes *read only*. You can still read and write data from the shards, but no :ref:`chunk migration <sharding-balancing>` or :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>` will occur until a primary is available. If all config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# 5deaa27e26c9415c81f840109b40ee9f
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:84
# 16915b011e0e40cd96b9177c48546c7f
msgid "Cursor Fails Because of Stale Config Data"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:88
# 3046b2a3004c4558bd94901139adb8d6
msgid "A query returns the following warning when one or more of the :program:`mongos` instances has not yet updated its cache of the cluster's metadata from the :term:`config database`:"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:96
# 36b0246bbc8a48cbb5dd9dfcd4acf91e
msgid "This warning *should* not propagate back to your application. The warning will repeat until all the :program:`mongos` instances refresh their caches. To force an instance to refresh its cache, run the :dbcommand:`flushRouterConfig` command."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:102
# 44edbceaae1f4d409f4ed83eee5430fd
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:104
# 627b170c78bb4abcb43da457ecab526f
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:107
# 5830256bec7c4b5096d8117e70e49f0e
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:110
# b03ec2ba71de44a7a599c5b73b215df1
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:112
# 4af93235426846c08d60e75fd966f400
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:115
# e6f9909f9aba4a4ea1d6910681f433c9
msgid "Furthermore:"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:117
# 970c81b53e7a43ebb7cf99da2edc7393
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:123
# bd6bfc5b964e4b60804d1e17a9ed11e2
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:127
# bd16896023e549ce84d868687a44ad2c
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:131
# df6e93171af141118bcde9a5781d81b4
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:138
# 9f6f546cb57843a19b8f7912c9f1c7c5
msgid "Config Database String Error"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:142
# 1ff4e64dab584809823635475d5d813c
msgid "Starting in MongoDB 3.2, config servers can be deployed as replica sets. The :program:`mongos` instances for the sharded cluster must specify the same config server replica set name but can specify hostname and port of different members of the replica set."
msgstr ""

#: ../source/includes/3.4-sccc-unsupported.rst:1
# b1822ea6e120441dbbda04a93a7fe5d2
msgid "Starting in 3.4, the use of the deprecated mirrored :program:`mongod` instances as config servers (SCCC) is no longer supported. Before you can upgrade your sharded clusters to 3.4, you must convert your config servers from SCCC to CSRS."
msgstr ""

#: ../source/includes/3.4-sccc-unsupported.rst:6
# 4c4d9e78951e456687268211cb6dd798
msgid "To convert your config servers from SCCC to CSRS, see :doc:`/tutorial/upgrade-config-servers-to-replica-set`."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:149
# 1087dbac0bca43e3992c58d27b554b18
msgid "With earlier versions of MongoDB sharded clusters that use the topology of three mirrored :program:`mongod` instances for config servers, :program:`mongos` instances in a sharded cluster must specify identical :setting:`~sharding.configDB` string."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:156
# 01abb150c1f443deba139a9c9a3e8f89
msgid "Avoid Downtime when Moving Config Servers"
msgstr ""

#: ../source/includes/fact-use-cnames-for-config-servers.rst:1
# 1d135f94651e49bb9bb765e4abbd430e
msgid "Use CNAMEs to identify your config servers to the cluster so that you can rename and renumber your config servers without downtime."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:161
# d83e9c4c10db4bfcbeb3f92634e41e1b
msgid "``moveChunk commit failed`` Error"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:163
# 0d4a6a9b406d4014bab9d6b985fb1791
msgid "At the end of a :ref:`chunk migration <sharding-chunk-migration>`, the :term:`shard` must connect to the :term:`config database` to update the chunk's record in the cluster metadata. If the :term:`shard` fails to connect to the :term:`config database`, MongoDB reports the following error:"
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:174
# cbe130a24fe84507b8ebec3e3815d6a5
msgid "When this happens, the :term:`primary` member of the shard's replica set then terminates to protect data consistency. If a :term:`secondary` member can access the config database, data on the shard becomes accessible again after an election."
msgstr ""

#: ../source/tutorial/troubleshoot-sharded-clusters.txt:179
# 399217ad85ca40c58b4aeacb8d33c1a3
msgid "The user will need to resolve the chunk migration failure independently. If you encounter this issue, contact the `MongoDB User Group <http://groups.google.com/group/mongodb-user>`_ or :doc:`MongoDB Support </support>` to address this issue."
msgstr ""

