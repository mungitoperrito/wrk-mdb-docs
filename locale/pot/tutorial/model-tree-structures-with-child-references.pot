# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-child-references.txt:3
# a20eca14c90347738527a2692665b642
msgid "Model Tree Structures with Child References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:0
# f430ad4a8f70450a8e2b929bfaf07db1
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:14
# 14489610c5ca4f749d41a8a781ad879b
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:16
# 4dcc52e39923460fa37ff3c5dfc44c28
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:22
# 7184e454cf3b493ca29fca00c434f041
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` in the parent-nodes to children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:27
# 575e80b5773045179d3a6a19c7704c20
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:31
# 18040181c5b44645a501fafc12101a4e
msgid "The *Child References* pattern stores each tree node in a document; in addition to the tree node, document stores in an array the id(s) of the node's children."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:35
# 770ef355b9894de1a0a73c9735e2f56c
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:39
# a61d0b1f1cfc4f03af4b82efc22ecd95
msgid "The following example models the tree using *Child References*, storing the reference to the node's children in the field ``children``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:51
# e56f1f6af62e40f1ba8537c26770a5b4
msgid "The query to retrieve the immediate children of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:58
# 74545e774c6c4b7f98420dc332682de7
msgid "You can create an index on the field ``children`` to enable fast search by the child nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:65
# 84e937f1cd9946b182e3d4f86fbc62bd
msgid "You can query for a node in the ``children`` field to find its parent node as well as its siblings:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:72
# 138e65ce25fd47c58d75edbd7bbc6fe2
msgid "The *Child References* pattern provides a suitable solution to tree storage as long as no operations on subtrees are necessary. This pattern may also provide a suitable solution for storing graphs where a node may have multiple parents."
msgstr ""

