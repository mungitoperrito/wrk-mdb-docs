# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/expire-data.txt:5
# bfef0c46e74e4c7aaaf317c2c77a5e8a
msgid "Expire Data from Collections by Setting TTL"
msgstr ""

#: ../source/tutorial/expire-data.txt:0
# c665dd74d1554f2ca0e0a721135c4f46
msgid "On this page"
msgstr ""

#: ../source/tutorial/expire-data.txt:15
# a60d9ef695e441db83f3d43e921650be
msgid "This document provides an introduction to MongoDB's \"*time to live*\" or :term:`TTL` collection feature. TTL collections make it possible to store data in MongoDB and have the :program:`mongod` automatically remove data after a specified number of seconds or at a specific clock time."
msgstr ""

#: ../source/tutorial/expire-data.txt:21
# 819fb25aebed41d0a9898fba51cf8432
msgid "Data expiration is useful for some classes of information, including machine generated event data, logs, and session information that only need to persist for a limited period of time."
msgstr ""

#: ../source/tutorial/expire-data.txt:25
# f1e4ef8803e844cd828803c8e58d2d7a
msgid "A special :doc:`TTL index property </core/index-ttl>` supports the implementation of TTL collections. The TTL feature relies on a background thread in :program:`mongod` that reads the date-typed values in the index and removes expired :term:`documents <document>` from the collection."
msgstr ""

#: ../source/tutorial/expire-data.txt:32
# 4e781429139c40ab80604b3b497c14e2
msgid "Procedures"
msgstr ""

#: ../source/tutorial/expire-data.txt:34
# 4ddb9087742e454ea5cf9d7e876acbb7
msgid "To create a :doc:`TTL index </core/index-ttl>`, use the :method:`db.collection.createIndex()` method with the ``expireAfterSeconds`` option on a field whose value is either a :ref:`date <document-bson-type-date>` or an array that contains :ref:`date values <document-bson-type-date>`."
msgstr ""

#: ../source/tutorial/expire-data.txt:42
# 8efbd3b188c0465c8a455689f83d52e7
msgid "The TTL index is a single field index. Compound indexes do not support the TTL property. For more information on TTL indexes, see :doc:`/core/index-ttl`."
msgstr ""

#: ../source/tutorial/expire-data.txt:46
# e02daa85d80b48a791540ec708727e65
msgid "You can modify the ``expireAfterSeconds`` of an existing TTL index using the :dbcommand:`collMod` command."
msgstr ""

#: ../source/tutorial/expire-data.txt:50
# 07cdea2339eb404f84e7422af77d96e2
msgid "Expire Documents after a Specified Number of Seconds"
msgstr ""

#: ../source/tutorial/expire-data.txt:52
# 268412df70d346ada044a8754343c050
msgid "To expire data after a specified number of seconds has passed since the indexed field, create a TTL index on a field that holds values of BSON date type or an array of BSON date-typed objects *and* specify a positive non-zero value in the ``expireAfterSeconds`` field. A document will expire when the number of seconds in the ``expireAfterSeconds`` field has passed since the time specified in its indexed field. [#field-is-array-of-dates]_"
msgstr ""

#: ../source/tutorial/expire-data.txt:60
# 2be7962a06ad48c0b9666d443ae2cf1b
msgid "For example, the following operation creates an index on the ``log_events`` collection's ``createdAt`` field and specifies the ``expireAfterSeconds`` value of ``3600`` to set the expiration time to be one hour after the time specified by ``createdAt``."
msgstr ""

#: ../source/tutorial/expire-data.txt:69
# 9909ec796ebf461f9125576e43610882
msgid "When adding documents to the ``log_events`` collection, set the ``createdAt`` field to the current time:"
msgstr ""

#: ../source/tutorial/expire-data.txt:80
# e01309a498be46998023732d9b96c052
msgid "MongoDB will automatically delete documents from the ``log_events`` collection when the document's ``createdAt`` value [#field-is-array-of-dates]_ is older than the number of seconds specified in ``expireAfterSeconds``."
msgstr ""

#: ../source/tutorial/expire-data.txt:85
# b135bc9257f346bab2b89ed95d75db34
msgid "If the field contains an array of BSON date-typed objects, data expires if at least one of BSON date-typed object is older than the number of seconds specified in ``expireAfterSeconds``."
msgstr ""

#: ../source/tutorial/expire-data.txt:90
# a78823b33ded47938bfef1c73679793d
msgid ":update:`$currentDate` operator"
msgstr ""

#: ../source/tutorial/expire-data.txt:93
# 3270d41ad2124e00bf2105a225df2a22
msgid "Expire Documents at a Specific Clock Time"
msgstr ""

#: ../source/tutorial/expire-data.txt:95
# 329711899b5844a9be2db339f04d9916
msgid "To expire documents at a specific clock time, begin by creating a TTL index on a field that holds values of BSON date type or an array of BSON date-typed objects *and* specify an ``expireAfterSeconds`` value of ``0``. For each document in the collection, set the indexed date field to a value corresponding to the time the document should expire. If the indexed date field contains a date in the past, MongoDB considers the document expired."
msgstr ""

#: ../source/tutorial/expire-data.txt:103
# dd9a789ff06b43dbab63e1725f8efe64
msgid "For example, the following operation creates an index on the ``log_events`` collection's ``expireAt`` field and specifies the ``expireAfterSeconds`` value of ``0``:"
msgstr ""

#: ../source/tutorial/expire-data.txt:111
# 38d90195327e432d9dc82e73abc47e45
msgid "For each document, set the value of ``expireAt`` to correspond to the time the document should expire. For instance, the following :method:`~db.collection.insert()` operation adds a document that should expire at ``July 22, 2013 14:00:00``."
msgstr ""

#: ../source/tutorial/expire-data.txt:124
# 1b630e88443b4f1198c69b8ab13088cc
msgid "MongoDB will automatically delete documents from the ``log_events`` collection when the documents' ``expireAt`` value is older than the number of seconds specified in ``expireAfterSeconds``, i.e. ``0`` seconds older in this case. As such, the data expires at the specified ``expireAt`` value."
msgstr ""

