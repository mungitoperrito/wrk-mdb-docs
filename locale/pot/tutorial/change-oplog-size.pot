# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/change-oplog-size.txt:3
# 634abb2164524194a84ac92d0a3ac787
msgid "Change the Size of the Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:0
# 4be61e7f8ef04d218b8f1a621e1187eb
msgid "On this page"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:13
# 7add785f4bdc47a9b2824fc8a9d0f3ae
msgid "The :term:`oplog` exists internally as a :term:`capped collection`, so you cannot modify its size in the course of normal operations. In most cases the :ref:`default oplog size <replica-set-oplog-sizing>` is an acceptable size; however, in some situations you may need a larger or smaller oplog. For example, you might need to change the oplog size if your applications perform large numbers of multi-updates or deletes in short periods of time."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:21
# fb79866e48a34c5d9728266d64756c77
msgid "This tutorial describes how to resize the oplog. For a detailed explanation of oplog sizing, see :ref:`replica-set-oplog-sizing`.  For details how oplog size affects :term:`delayed members <delayed member>` and affects :term:`replication lag`, see :ref:`replica-set-delayed-members`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:28
# bc3e2ad4614a4fd98a58f0c28e80f03a
msgid "Overview"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:30
# 9fd41bae5777488e8eadd358c9b7fe22
msgid "To change the size of the oplog, you must perform maintenance on each member of the replica set in turn. The procedure requires: stopping the :program:`mongod` instance and starting as a standalone instance, modifying the oplog size, and restarting the member."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:35
# 4996a5fb5ad14accade067dc2e53e3f8
msgid "Always start rolling replica set maintenance with the secondaries, and finish with the maintenance on primary member."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:39
# 636cdb772ee543b6b7f693183492cd4e
msgid "Procedure"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:41
# 79b76ab92d82459ea0f75cae929616d6
msgid "Restart the member in standalone mode."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:0
# 63bebf7919f647ecb6363e0f99fa4b4c
msgid "Tip"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:47
# 94002171fd1b4e2388afc838ef31f2f4
msgid "Recreate the oplog with the new size and with an old oplog entry as a seed."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:50
# 0978b5be341d4b9d94b5d60df59c547b
msgid "Restart the :program:`mongod` instance as a member of the replica set."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:54
# 90aec4689190435d9340871745d82061
msgid "Restart a Secondary in Standalone Mode on a Different Port"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:56
# 3618b557f2884513b0b582586e541f96
msgid "Shut down the :program:`mongod` instance for one of the non-primary members of your replica set. For example, to shut down, use the :method:`db.shutdownServer()` method:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:64
# 8f4c0ac700444b648b4896c663f3becc
msgid "Restart this :program:`mongod` as a standalone instance running on a different port and *without* the :option:`--replSet <mongod --replSet>` parameter. Use a command similar to the following:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:74
# 7e0bb89eaccd4e96a7d96534c66a2250
msgid "Create a Backup of the Oplog (Optional)"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:76
# eac74cc6d03b402ea3c86e1af0a86784
msgid "Optionally, backup the existing oplog on the standalone instance, as in the following example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:85
# df9590e12c21417e9c42d5fa5bb5a4bd
msgid "Recreate the Oplog with a New Size and a Seed Entry"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:87
# d73241d323d24ef5af1350b26294c700
msgid "Save the last entry from the oplog. For example, connect to the instance using the :program:`mongo` shell, and enter the following command to switch to the ``local`` database:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:95
# 44120b25c0f1481dabca95c0d1dac6f9
msgid "In :program:`mongo` shell scripts you can use the following operation to set the ``db`` object:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:102
# ea95d9198bb1496ea541cb49cfd89775
msgid "Ensure that the ``temp`` temporary collection is empty by dropping the collection:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:109
# 6feb2d7de4354e5bac626b5305100afa
msgid "Use the :method:`db.collection.save()` method and a sort on reverse :term:`natural order` to find the last entry and save it to a temporary collection:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:119
# 7e1cc8ef4e03426eb4b3cf13294eff12
msgid "To see this oplog entry, use the following operation:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:126
# f27ca75bbaed461ebaeccf265b319aca
msgid "Remove the Existing Oplog Collection"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:128
# 1f9d269823ea4e0abdc2c16c5a26c4fa
msgid "Drop the old ``oplog.rs`` collection in the ``local`` database. Use the following command:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:136
# 7d0d21b8959c4630a9b4f0535fcb3ae7
msgid "This returns ``true`` in the shell."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:139
# 52f9ba4947aa4764ba46ca75513573df
msgid "Create a New Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:141
# 9270e77f59904c9f9b7eb258fa40f83f
msgid "Use the :dbcommand:`create` command to create a new oplog of a different size. Specify the ``size`` argument in bytes. A value of ``2 * 1024 * 1024 * 1024`` will create a new oplog that's 2 gigabytes:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:149
# cccaee9dc11b4dc88b7cb6fdc9743126
msgid "Upon success, this command returns the following status:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:156
# 3644551fd4fa4af3a26644256fb564ba
msgid "Insert the Last Entry of the Old Oplog into the New Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:158
# 6488266b769e4b598cd1cb149788a53d
msgid "Insert the previously saved last entry from the old oplog into the new oplog. For example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:165
# b08ef40b156d48d7bf444cfa8c2e2b3a
msgid "To confirm the entry is in the new oplog, use the following operation:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:172
# 3f8cf1137bc14cdca3a6fde3cff53076
msgid "Restart the Member"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:174
# 9710baa85cc44135980ff3ec5498e5fc
msgid "Restart the :program:`mongod` as a member of the replica set on its usual port. For example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:182
# 2a57cdd6656e47f382ffc400240def30
msgid "The replica set member will recover and \"catch up\" before it is eligible for election to primary."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:186
# df81a9d499a54a99ae9069e10b70b74c
msgid "Repeat Process for all Members that may become Primary"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:188
# 90fc814a366d401fae3eb1a89f1c9dce
msgid "Repeat this procedure for all members you want to change the size of the oplog. Repeat the procedure for the primary as part of the following step."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:193
# b01688e64508490b81d7f7f701f8818d
msgid "Change the Size of the Oplog on the Primary"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:195
# ba8f65b5fd0d493c876d84fa17ff3af0
msgid "To finish the rolling maintenance operation, step down the primary with the :method:`rs.stepDown()` method and repeat the oplog resizing procedure above."
msgstr ""

