# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-data-for-keyword-search.txt:3
# e15504bd95c14f2c9b485d73120aeecf
msgid "Model Data to Support Keyword Search"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# 2421f2875ec74adebd7915923b2a4f23
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:15
# 911c7770d4944dec82e8b946d8d0e9fc
msgid "Keyword search is *not* the same as text search or full text search, and does not provide stemming or other text-processing features. See the :ref:`limit-keyword-indexes` section for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:20
# 7eccade93bfa4b73a3755faf0b54f3a6
msgid "In 2.4, MongoDB provides a text search feature. See :doc:`/core/index-text` for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:23
# 28b79eed19894036887ab6ba28e8f79f
msgid "If your application needs to perform queries on the content of a field that holds text you can perform exact matches on the text or use :query:`$regex` to use regular expression pattern matches. However, for many operations on text, these methods do not satisfy application requirements."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:29
# 0b0e0e26e80c4c529357f500e8771058
msgid "This pattern describes one method for supporting keyword search using MongoDB to support application search functionality, that uses keywords stored in an array in the same document as the text field. Combined with a :ref:`multi-key index <index-type-multikey>`, this pattern can support application's keyword search operations."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:36
# 729b8a93d2654db0a4ba20fb939f9f28
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:38
# 3cc53816731146e98457b2628646c8e0
msgid "To add structures to your document to support keyword-based queries, create an array field in your documents and add the keywords as strings in the array. You can then create a :ref:`multi-key index <index-type-multi-key>` on the array and create queries that select values from the array."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# fc5b694a7d0741db80c9ce7cf347ccfb
msgid "Example"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:46
# 52e718a67e884d2a81724c200d799174
msgid "Given a collection of library volumes that you want to provide topic-based search. For each volume, you add the array ``topics``, and you add as many keywords as needed for a given volume."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:50
# a7b4e246b10843dcb586560c0b872ac0
msgid "For the ``Moby-Dick`` volume you might have the following document:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:62
# 311a7d3f5f7e4572ba3f17671b0a4624
msgid "You then create a multi-key index on the ``topics`` array:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:68
# ff63c3023314412186eed639540898c7
msgid "The multi-key index creates separate index entries for each keyword in the ``topics`` array. For example the index contains one entry for ``whaling`` and another for ``allegory``."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:72
# 3250b74b0e584f3d9e4678ca34e5a3ef
msgid "You then query based on the keywords. For example:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:78
# 68ed3fc728524c218a7d3dd43efcd6ef
msgid "An array with a large number of elements, such as one with several hundreds or thousands of keywords will incur greater indexing costs on insertion."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:85
# 9a06f7b0d5134d96ba9e5362912d61c3
msgid "Limitations of Keyword Indexes"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:87
# 07092d3c3ca8409084fd02d11367d784
msgid "MongoDB can support keyword searches using specific data models and :ref:`multi-key indexes <index-type-multikey>`; however, these keyword indexes are not sufficient or comparable to full-text products in the following respects:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:92
# c93d447a3dc4408e943adba3c300f6f2
msgid "*Stemming*. Keyword queries in MongoDB can not parse keywords for root or related words."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:95
# 1eaa8e1fd2dd419e9260fa686b36cc6f
msgid "*Synonyms*. Keyword-based search features must provide support for synonym or related queries in the application layer."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:98
# c3d54972f73e4b2bb66527f1994e194b
msgid "*Ranking*. The keyword look ups described in this document do not provide a way to weight results."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:101
# 94fcc0ff8fac4f3a88f40d692485522d
msgid "*Asynchronous Indexing*. MongoDB builds indexes synchronously, which means that the indexes used for keyword indexes are always current and can operate in real-time. However, asynchronous bulk indexes may be more efficient for some kinds of content and workloads."
msgstr ""

