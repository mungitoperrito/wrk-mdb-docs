# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
# 5450edd7aeed4250909af4661ef7a66f
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:0
# 77dc852e88eb460fbe0b7b2c1d0f874d
msgid "On this page"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:13
# 2c1f88c8afe8442c9fa83a1c2fc75c15
msgid "MongoDB runs as a standard program. You can start MongoDB from a command line by issuing the :program:`mongod` command and specifying options.  For a list of options, see the :program:`mongod` reference. MongoDB can also run as a Windows service. For details, see :ref:`manually-create-windows-service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:20
# e8597efa67104b4587454f91817f36b8
msgid "The following examples assume the directory containing the :program:`mongod` process is in your system paths. The :program:`mongod` process is the primary database process that runs on an individual server. :program:`mongos` provides a coherent MongoDB interface equivalent to a :program:`mongod` from the perspective of a client. The :program:`mongo` binary provides the administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:28
# 7af1e07ed95c4610b2e696e1d2db4385
msgid "This document discusses the :program:`mongod` process; however, some portions of this document may be applicable to :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:33
# f1e42660a9794e2aac78fc79b8f11fba
msgid "Start ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:35
# 649485dea2b2471fb8f95f738f98622a
msgid "By default, MongoDB listens for connections from clients on port ``27017``, and stores data in the ``/data/db`` directory."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:38
# 7eed3b691c9f4c5ba55b5560de530d4a
msgid "On Windows, this path is on the drive from which you start MongoDB. For example, if you do not specify a :option:`--dbpath`, starting a MongoDB server on the ``C:\\`` drive stores all data files in ``C:\\data\\db``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:42
# bdb62ff8144e474e9522643541995aea
msgid "To start MongoDB using all defaults, issue the following command at the system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:50
# d02149de04d3441eac5a60997bbde360
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:52
# 81af6e4f2f8d4b6e85847e1f8eab7163
msgid "If you want :program:`mongod` to store data files at a path *other than* ``/data/db`` you can specify a :setting:`~storage.dbPath`. The :setting:`~storage.dbPath` must exist before you start :program:`mongod`. If it does not exist, create the directory and the permissions so that :program:`mongod` can read and write data to this path. For more information on permissions, see the :doc:`security operations documentation </administration/security-checklist>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:60
# f0fe18aa41ad48f89f2feeb17aa89bc9
msgid "To specify a :setting:`~storage.dbPath` for :program:`mongod` to use as a data directory, use the :option:`--dbpath <mongod --dbpath>` option. The following invocation will start a :program:`mongod` instance and store data in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:70
# 2fce311275f047cb96a2f056febb480a
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:72
# 687c829a7714448ba85988de216ea41c
msgid "Only a single process can listen for connections on a network interface at a time. If you run multiple :program:`mongod` processes on a single machine, or have other processes that must use this port, you must assign each a different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:78
# 5814290bb68e4261b4cf52594c6a5664
msgid "To specify a port to :program:`mongod`, use the :option:`--port <mongod --port>` option on the command line. The following command starts :program:`mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:86
# 1f13ba86c059425c86928b5e474ad80e
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:89
# 90083833eeec4cd49c05f554f909e01e
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:91
# a66870efc20945d8b29713d17b64a3bf
msgid "To run a :program:`mongod` process as a daemon (i.e. :setting:`~processManagement.fork`), *and* write its output to a log file, use the :option:`--fork <mongod --fork>` and :option:`--logpath <mongod --logpath>` options. You must create the log directory; however, :program:`mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:97
# 0e9d5d36ad054a4b88ca0c8c703668f4
msgid "The following command starts :program:`mongod` as a daemon and records log output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:105
# 396d014c05b64439ba2f0d64c8bc2ac8
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:107
# da74eb8fdb92438ead93422f8d56643a
msgid "For an overview of common configurations and deployments for common use cases, see :doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:114
# a76d85ae129f4048974aa56ec768128e
msgid "Stop ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:116
# 7b1215624896400c8781bf9585303206
msgid "In a clean shutdown a :program:`mongod` completes all pending operations, flushes all data to data files, and closes all data files. Other shutdowns are *unclean* and can compromise the validity of the data files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:127
# ce94fd2f4e6c4fd59d99d5a6733ed02c
msgid "To ensure a clean shutdown, always shutdown :program:`mongod` instances using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:131
# eb2495d905234c0cbaff21c8cbd7dc16
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:133
# 638a12745e3f4810a3ab8b6bcd047629
msgid "Shut down the :program:`mongod` from the :program:`mongo` shell using the :method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:141
# b86739646f1549adad4d91139638ad3d
msgid "Calling the same method from a :term:`init script` accomplishes the same result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:143
# 2c529cc8d4284e828fcda077b890a312
msgid "For systems with :setting:`~security.authorization` enabled, users may only issue :method:`db.shutdownServer()` when authenticated to the ``admin`` database or via the localhost interface on systems without authentication enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:149
# d86446baf2894b4ebd0e3e5e504ff282
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:151
# ccdfd4269aeb41ff82a988fba4ceb151
msgid "From the Linux command line, shut down the :program:`mongod` using the :option:`--shutdown <mongod --shutdown>` option in the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:159
# 9a3e6cc9310d4c13abbaa1b5d301450a
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:161
# d4e6b990af1749fa80e8fdd939328b41
msgid "When running the :program:`mongod` instance in interactive mode (i.e. without :option:`--fork <mongod --fork>`), issue ``Control-C`` to perform a clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:166
# bf671e748d62450b8b5997a820919752
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:168
# 8d903cd9cf9346c7be2076c334d3d18e
msgid "From the Linux command line, shut down a specific :program:`mongod` instance using one of the following commands:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:178
# afcffc58b1194119a5e4f6de8a8cb1e8
msgid "Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:181
# e9829c89f4114166a5c5923fcfa93803
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:184
# 5fe2732bca66479393c1cd1b055845b3
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:186
# 99a1ae346f104555acc16e16388e1374
msgid "If the :program:`mongod` is the :term:`primary` in a :term:`replica set`, the shutdown process for this :program:`mongod` instance has the following steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:190
# 05eb820b177d4f16b267f1472da4ab3b
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:192
# c4d9e287ee0042f1aa7a05909f820714
msgid "If no secondary is within 10 seconds of the primary, :program:`mongod` will return a message that it will not shut down. You can pass the :dbcommand:`shutdown` command a ``timeoutSecs`` argument to wait for a secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:197
# dd34c942f4e24773a75cfdc979cf74d9
msgid "If there is a secondary within 10 seconds of the primary, the primary will step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:200
# 007cc9090da14ab6a47865f03d665093
msgid "After 60 seconds or once the secondary has caught up, the primary will shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:204
# 672525d3566f4bcab5d566a811f7d4a6
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:206
# 485faa9c6e5449ec8bb2388f606d9c45
msgid "If there is no up-to-date secondary and you want the primary to shut down, issue the :dbcommand:`shutdown` command with the ``force`` argument, as in the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:214
# 61b02bbe3e124f47b7ef7e1449e18633
msgid "To keep checking the secondaries for a specified number of seconds if none are immediately up-to-date, issue :dbcommand:`shutdown` with the ``timeoutSecs`` argument. MongoDB will keep checking the secondaries for the specified number of seconds if none are immediately up-to-date. If any of the secondaries catch up within the allotted time, the primary will shut down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:221
# 7fd49e408091400c9a58e13142e6d56e
msgid "The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` set to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:228
# 042337d8f4774f52bfc2b9f30b1fd76c
msgid "Alternately you can use the ``timeoutSecs`` argument with the :method:`db.shutdownServer()` method:"
msgstr ""

