# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:3
# 07350689cb5e4efabb474fd48bb6077a
msgid "Model Tree Structures with Nested Sets"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:0
# e3dc4a5454024f568fb4a27148d91999
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:14
# 7a3f59b609864123a1c2aacfdb19e2b0
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:16
# 3da3e65d16c5435982003840fa232deb
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:22
# 6aa4c1248a7d4714acc30662e6d2444a
msgid "This document describes a data model that describes a tree like structure that optimizes discovering subtrees at the expense of tree mutability."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:27
# 79d62950ff044097bf5efa3d73a0b629
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:31
# caf1621873db4c79aa18b571b342cdeb
msgid "The *Nested Sets* pattern identifies each node in the tree as stops in a round-trip traversal of the tree. The application visits each node in the tree twice; first during the initial trip, and second during the return trip. The *Nested Sets* pattern stores each tree node in a document; in addition to the tree node, document stores the id of node's parent, the node's initial stop in the ``left`` field, and its return stop in the ``right`` field."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:39
# b0c0de89c5254a219bb025ea872cc8b4
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:43
# 7c5602ccba59476abeefce060a007d1e
msgid "The following example models the tree using *Nested Sets*:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:54
# 0322a023c5bc4a2d86552a3b73524c7e
msgid "You can query to retrieve the descendants of a node:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:61
# f84da7f59a424216ba3cfb2195771795
msgid "The *Nested Sets* pattern provides a fast and efficient solution for finding subtrees but is inefficient for modifying the tree structure. As such, this pattern is best for static trees that do not change."
msgstr ""

