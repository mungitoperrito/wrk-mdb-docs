# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:3
# 1267087a9279409da02877599b3e2802
msgid "Model Tree Structures with Parent References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:0
# 5fe215adf66c40499194e8958e0ae441
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:14
# dffda2f771c143cbb1d16d57db373223
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:16
# 0ca3c622008147f58a7477030811bff6
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:22
# df780865e95b49f59cf8df2711d9d758
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` to \"parent\" nodes in children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:28
# 09647c50c2cc423f8beb286c1b3c1b21
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:32
# f072d62bb561469cb02d5bf104d5dcf9
msgid "The *Parent References* pattern stores each tree node in a document; in addition to the tree node, the document stores the id of the node's parent."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:36
# 946b9c1b319a489f8b4e8f8b1784427d
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:41
# 761f6e01f2a24686ac7d9bbad6416673
msgid "The following example models the tree using *Parent References*, storing the reference to the parent category in the field ``parent``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:53
# 731950357f814fe38c15aea999ccff4d
msgid "The query to retrieve the parent of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:60
# 12693c9e26df4a1f864b7969e4aad5eb
msgid "You can create an index on the field ``parent`` to enable fast search by the parent node:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:67
# e16f1a8998654841a9bf0f6fb57ce5ea
msgid "You can query by the ``parent`` field to find its immediate children nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:74
# 5e2bef594779446288db4eed4c5520e7
msgid "The *Parent Links* pattern provides a simple solution to tree storage but requires multiple queries to retrieve subtrees."
msgstr ""

