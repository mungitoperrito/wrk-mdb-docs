# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:3
# 22de8c718d01476d9aafe1b10802aa33
msgid "Back Up and Restore with Filesystem Snapshots"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:0
# de995b2e358343529be22aa89ade0569
msgid "On this page"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:13
# fb1e5825841a4cc8bd42b394e2c45f96
msgid "This document describes a procedure for creating backups of MongoDB systems using system-level tools, such as :term:`LVM` or storage appliance, as well as the corresponding restoration strategies."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:17
# ae4750165f0c4d2397167aa75a02c10a
msgid "These filesystem snapshots, or \"block-level\" backup methods, use system level tools to create copies of the device that holds MongoDB's data files. These methods complete quickly and work reliably, but require additional system configuration outside of MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:24
# eab47a0a6b7744588cb525dacf086ed0
msgid "MongoDB 3.2 added support for volume-level back up of MongoDB instances using the :doc:`WiredTiger </core/wiredtiger>` storage engine when the MongoDB instance's data files and journal files reside on separate volumes."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:29
# 7bfa99d6755c4c1d9401e60222bb8f0a
msgid "Prior to MongoDB 3.2, creating volume-level backups of MongoDB instances using WiredTiger required that the data files and journal reside on the same volume."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:33
# 77df8d55cb944eb78a59db986f4f447d
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-and-restore-tools`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:39
# 7a923423341240509de59ba6140c8351
msgid "Snapshots Overview"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:41
# 14a937bd009e49e7b6de7d4e7041c275
msgid "Snapshots work by creating pointers between the live data and a special snapshot volume. These pointers are theoretically equivalent to \"hard links.\" As the working data diverges from the snapshot, the snapshot process uses a copy-on-write strategy. As a result, the snapshot only stores modified data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:47
# ba1b0adba567490eabae93eae7d4e409
msgid "After making the snapshot, you mount the snapshot image on your file system and copy data from the snapshot. The resulting backup contains a full copy of all data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:52
# 4440c18fa4d94ea7950a87f645b863f0
msgid "Considerations"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:55
# 05895ab26e1842759f7f2b96f86f76a8
msgid "Valid Database at the Time of Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:57
# 563a564b312044319d7a91ed5b8da394
msgid "The database must be valid when the snapshot takes place. This means that all writes accepted by the database need to be fully written to disk: either to the :term:`journal` or to data files."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:61
# 83bc208d65c14126b1efab60be75375e
msgid "If there are writes that are not on disk when the backup occurs, the backup will not reflect these changes."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:64
# 3accc2ce2efa48a9bda53472c1654e01
msgid "For the :doc:`MMAPv1 storage engine </core/mmapv1>`, if writes are *in progress* when the backup occurs, the data files will reflect an inconsistent state. With :ref:`journaling <journaling-mmapv1>`, all data file states resulting from in-progress writes are recoverable; without journaling, you must flush all pending writes to disk before running the back up operation and must ensure that no writes occur during the entire back up procedure. If you do use journaling, the journal **must** reside on the same volume as the data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:73
# bc957159662d422cb5b502036c435985
msgid "For the :doc:`WiredTiger storage engine </core/wiredtiger>`, the data files reflect a consistent state as of the last :ref:`checkpoint <storage-wiredtiger-checkpoints>`. Checkpoints occur with every 2 GB of data or every minute."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:79
# e83e4cff9a9544cbb25045dfa6afc96f
msgid "Entire Disk Image"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:81
# 7d2e7001aa4f4154ad134877ad5c5a7d
msgid "Snapshots create an image of an entire disk image. Unless you need to back up your entire system, consider isolating your MongoDB data files, journal (if applicable), and configuration on one logical disk that doesn't contain any other data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:86
# 9868d66d32f14425b035b3d019dcbb02
msgid "Alternately, store all MongoDB data files on a dedicated device so that you can make backups without duplicating extraneous data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:90
# 3ed480d350894fcbba7cc4d54b93054b
msgid "Site Failure Precaution"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:92
# 8f588be41541481c9dcfdec67a558b2d
msgid "Ensure that you copy data from snapshots onto other systems. This ensures that data is safe from site failures."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:96
# c25ab9cd95a64d6cabab55338a35a44f
msgid "No Incremental Backups"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:98
# 0e7a510f047a49d4a73fc61a52cf08ec
msgid "This tutorial does not include procedures for incremental backups. Although different snapshot methods provide different features, the LVM method outlined below does not provide any capacity for capturing incremental backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:106
# b59cf701c7f346cfbbb8f719f3dcc20a
msgid "Snapshots With Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:108
# 77cf83f84a6d4e47883fe4ac2cfd40c3
msgid "If your :program:`mongod` instance has journaling enabled, then you can use any kind of file system or volume/block level snapshot tool to create backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:112
# 6c0340694a7f48d4acfbe57d1d29dedd
msgid "If you manage your own infrastructure on a Linux-based system, configure your system with :term:`LVM` to provide your disk packages and provide snapshot capability. You can also use LVM-based setups *within* a cloud/virtualized environment."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:119
# 8e54a2723f524203a99174fe2561626a
msgid "Running :term:`LVM` provides additional flexibility and enables the possibility of using snapshots to back up MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:123
# 5e5d0918acd943ebb870fcf06d68d2a6
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:125
# 17a234e190494f248af8e9de3eca3441
msgid "If your deployment depends on Amazon's Elastic Block Storage (EBS) with RAID configured within your instance, it is impossible to get a consistent state across all disks using the platform's snapshot tool. As an alternative, you can do one of the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:130
# 6303580b685c4cedbd786bf77c8d7694
msgid "Flush all writes to disk and create a write lock to ensure consistent state during the backup process."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:133
# 908dc0fc38d942e28fa84f7c338ef075
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:135
# 5e79e79c0fe045fca9b701057175f0a2
msgid "Configure :term:`LVM` to run and hold your MongoDB data files on top of the RAID within your system."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:138
# 9ba6f4696bd44bc0b2dc849dee5047ae
msgid "If you choose this option, perform the LVM backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:144
# f38e8e7362594956af35e6ac596a403b
msgid "Back Up and Restore Using LVM on Linux"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:146
# db76e542ae9e4a65843f7930e4eb4ade
msgid "This section provides an overview of a simple backup process using :term:`LVM` on a Linux system. While the tools, commands, and paths may be (slightly) different on your system the following steps provide a high level overview of the backup operation."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:153
# 82822b246cc94b88af31c8deed278ff5
msgid "Only use the following procedure as a guideline for a backup system and infrastructure. Production backup systems must consider a number of application specific requirements and factors unique to specific environments."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:161
# e4062c499a734613bd74b0ad4d7cb51d
msgid "Create a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:165
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:324
# efe9c1aab4834549a4f8c8fab7a0f23d
# 8cf0fa61ae1c47a2a674b66e21fc5764
msgid "Starting in MongoDB 3.2, for the purpose of volume-level backup of MongoDB instances using WiredTiger, the data files and the journal are no longer required to reside on a single volume."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:169
# 8eec2af52c9943afaf5f4b261c8fc4bc
msgid "To create a snapshot with :term:`LVM`, issue a command as root in the following format:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:176
# 8edd668ac07d487590d0286eb08c7bd7
msgid "This command creates an :term:`LVM` snapshot (with the ``--snapshot`` option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume group."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:180
# f597cdb0b50f4310bf68995035c00af5
msgid "This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0/mdb-snap01``. The location and paths to your systems volume groups and devices may vary slightly depending on your operating system's :term:`LVM` configuration."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:185
# 305ab357c6884bbc8c6c74497258cd33
msgid "The snapshot has a cap of at 100 megabytes, because of the parameter ``--size 100M``. This size does not reflect the total amount of the data on the disk, but rather the quantity of differences between the current state of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0/mdb-snap01``.)"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:193
# e18104ab2db24775ab29820547d79abc
msgid "Ensure that you create snapshots with enough space to account for data growth, particularly for the period of time that it takes to copy data out of the system or to a temporary image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:197
# 725e7b7a493c42289e0c4e209cd6fe93
msgid "If your snapshot runs out of space, the snapshot image becomes unusable. Discard this logical volume and create another."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:200
# 02c7a2a67eae4b96a2e3e843b5782251
msgid "The snapshot will exist when the command returns. You can restore directly from the snapshot at any time or by creating a new logical volume and restoring from this snapshot to the alternate image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:204
# 4dc90e3a6cdb4fa9885644056789b254
msgid "While snapshots are great for creating high quality backups quickly, they are not ideal as a format for storing backup data. Snapshots typically depend and reside on the same storage infrastructure as the original disk images. Therefore, it's crucial that you archive these snapshots and store them elsewhere."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:211
# 4bf3347a0ecf46b291215df9e1b150cf
msgid "Archive a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:213
# dedbfc340af64d2982d6279ea6aabd10
msgid "After creating a snapshot, mount the snapshot and copy the data to separate storage. Your system might try to compress the backup images as you move them offline. Alternatively, take a block level copy of the snapshot image, such as with the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:223
# 161be6873db94fabb578bd9ff7dd461d
msgid "The above command sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:225
# a0df699899f04d03ae8c378ba61e758c
msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted.  Never take a block level copy of a filesystem or filesystem snapshot that is mounted."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:229
# c02e8a2c29bc43b484ecb1babb864f80
msgid "Performs a block level copy of the entire snapshot image using the ``dd`` command and compresses the result in a gzipped file in the current working directory."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:235
# 329c9daa210542aa873a16cb55f242e3
msgid "This command will create a large ``gz`` file in your current working directory. Make sure that you run this command in a file system that has enough free space."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:242
# c315dbd672d2477a8ce93a28d396be75
msgid "Restore a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:244
# 46a56dde1a834805a602080869c6d42c
msgid "To restore a snapshot created with :term:`LVM`, issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:253
# 6a086d6cfcc84f2b91075a96b3e127bb
msgid "The above sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:255
# 3452ca93cbbd413891f8b229a34649ea
msgid "Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:260
# 689a836bbaf04045af230fdd42228b8e
msgid "This volume will have a maximum size of 1 gigabyte. The original file system must have had a total size of 1 gigabyte or smaller, or else the restoration will fail."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:264
# fb2fcda3cf464d1b908c7eee10212701
msgid "Change ``1G`` to your desired volume size."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:266
# a5a03b62946e48178632f66c603a8753
msgid "Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:269
# bab05e3e3171428b83b7501fa79f0bec
msgid "Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify the mount point to correspond to your MongoDB data file location, or other location as needed."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:275
# 1f1b44351e184fb8af834c53fe6d2ecb
msgid "The restored snapshot will have a stale ``mongod.lock`` file. If you do not remove this file from the snapshot, and MongoDB may assume that the stale lock file indicates an unclean shutdown. If you're running with :setting:`storage.journal.enabled` enabled, and you *do not* use :method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:286
# cd188fa1ccae4acc8318e4f16537006c
msgid "Restore Directly from a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:288
# 4fd3d9aad22b4ff1a8b3619d006cbab9
msgid "To restore a backup without writing to a compressed ``gz`` file, use the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:299
# aa3413e39d9d49d7a0627388b1b22752
msgid "Remote Backup Storage"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:301
# 7596012146ef44849ab4d6562fb548a0
msgid "You can implement off-system backups using the :ref:`combined process <backup-restore-from-snapshot>` and SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:304
# 016b1d9767d449b2b2479bdb57f82740
msgid "This sequence is identical to procedures explained above, except that it archives and compresses the backup on a remote system using SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:307
# 911d8472c17a4f90ad3b4eab31e80ee9
msgid "Consider the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:320
# 57a47909216540b0aee4bd054c1fd08e
msgid "Back up Instances with Journal Files on Separate Volume or without Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:328
# 78d5451ad58f4ce688532e2693aa5a18
msgid "If your :program:`mongod` instance is either running without journaling or has the journal files on a separate volume, you must flush all writes to disk and lock the database to prevent writes during the backup process. If you have a :term:`replica set` configuration, then for your backup use a :term:`secondary` which is not receiving reads (i.e. :term:`hidden member`)."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:337
# 4555b30d55ec4376af318d8cb58817c9
msgid "In the following procedure to create backups, you **must** issue the :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` operations on the same connection. The client that issues :method:`db.fsyncLock()` is solely responsible for issuing a :method:`db.fsyncUnlock()` operation and must be able to handle potential error conditions so that it can perform the :method:`db.fsyncUnlock()` before terminating the connection."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:4
# e340d51818d24a7d8e307c08cf33f0d0
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:6
# 26ab6ecbe29c4788a831a5950b5daaa4
msgid "See also |mms-home| for seamless automation, backup, and monitoring."
msgstr ""

