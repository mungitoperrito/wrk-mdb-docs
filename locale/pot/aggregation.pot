# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/aggregation.txt:3
# 674944ade3144669a271d4f6f8f556cc
msgid "Aggregation"
msgstr ""

#: ../source/aggregation.txt:0
# 7a9d16b51fa34deeb2b4092cf8c41445
msgid "On this page"
msgstr ""

#: ../source/aggregation.txt:13
# 6a6cfed3600847abbccc5c78bf55c6f3
msgid "Aggregations operations process data records and return computed results. Aggregation operations group values from multiple documents together, and can perform a variety of operations on the grouped data to return a single result. MongoDB provides three ways to perform aggregation: the :ref:`aggregation pipeline <aggregation-framework>`, the :ref:`map-reduce function <aggregation-map-reduce>`, and :ref:`single purpose aggregation methods <single-purpose-agg-operations>`."
msgstr ""

#: ../source/aggregation.txt:25
# dae03fb17ed845f3862febb0f7058e41
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/aggregation.txt:27
# c80814c686154eb78a437348b74cbf39
msgid "MongoDB's :doc:`aggregation framework </core/aggregation-pipeline>` is modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated result."
msgstr ""

#: ../source/aggregation.txt:32
# 0f50350ff8ce4f01a3ce32c1fdd8b818
msgid "The most basic pipeline stages provide *filters* that operate like queries and *document transformations* that modify the form of the output document."
msgstr ""

#: ../source/aggregation.txt:36
# 5a2380371b5b4eaaaa75e7674a39edf3
msgid "Other pipeline operations provide tools for grouping and sorting documents by specific field or fields as well as tools for aggregating the contents of arrays, including arrays of documents. In addition, pipeline stages can use :ref:`operators <aggregation-expression-operators>` for tasks such as calculating the average or concatenating a string."
msgstr ""

#: ../source/aggregation.txt:43
# a404942d9d9947f1a5f45bbf29297237
msgid "The pipeline provides efficient data aggregation using native operations within MongoDB, and is the preferred method for data aggregation in MongoDB."
msgstr ""

#: ../source/aggregation.txt:47
# 702a0d7b3f2d44e6ac76ba831c10fe9a
msgid "The aggregation pipeline can operate on a :doc:`sharded collection </sharding>`."
msgstr ""

#: ../source/aggregation.txt:50
# 591605110fec4bf8b8cc1208a69836d2
msgid "The aggregation pipeline can use indexes to improve its performance during some of its stages. In addition, the aggregation pipeline has an internal optimization phase. See :ref:`aggregation-pipeline-operators-and-performance` and :doc:`/core/aggregation-pipeline-optimization` for details."
msgstr ""

#: ../source/aggregation.txt:61
# bd8fa915a59649648dd17f731fea013f
msgid "Map-Reduce"
msgstr ""

#: ../source/aggregation.txt:63
# 5c7895feee90412998832d24de000a16
msgid "MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to perform aggregation. In general, map-reduce operations have two phases: a *map* stage that processes each document and *emits* one or more objects for each input document, and *reduce* phase that combines the output of the map operation. Optionally, map-reduce can have a *finalize* stage to make final modifications to the result. Like other aggregation operations, map-reduce can specify a query condition to select the input documents as well as sort and limit the results."
msgstr ""

#: ../source/aggregation.txt:72
# e4859e49803e4079b0b253b79cca6af6
msgid "Map-reduce uses custom JavaScript functions to perform the map and reduce operations, as well as the optional *finalize* operation. While the custom JavaScript provide great flexibility compared to the aggregation pipeline, in general, map-reduce is less efficient and more complex than the aggregation pipeline."
msgstr ""

#: ../source/aggregation.txt:78
# 9dd84af3809a401e93fdde4dad7c353c
msgid "Map-reduce can operate on a :doc:`sharded collection </sharding>`. Map reduce operations can also output to a sharded collection. See :doc:`/core/aggregation-pipeline-sharded-collections` and :doc:`/core/map-reduce-sharded-collections` for details."
msgstr ""

#: ../source/aggregation.txt:84
# 708d6168a9e1449eb2e32a9a506b00f9
msgid "Starting in MongoDB 2.4, certain :program:`mongo` shell functions and properties are inaccessible in map-reduce operations. MongoDB 2.4 also provides support for multiple JavaScript operations to run at the same time. Before MongoDB 2.4, JavaScript code executed in a single thread, raising concurrency issues for map-reduce."
msgstr ""

#: ../source/aggregation.txt:96
# 78895e56414d4c1f85f2795320d7de94
msgid "Single Purpose Aggregation Operations"
msgstr ""

#: ../source/aggregation.txt:98
# 8b78b98eaf3c4ec2b6cf20365c2ffcaa
msgid "MongoDB also provides :method:`db.collection.count()` and :method:`db.collection.distinct()`."
msgstr ""

#: ../source/aggregation.txt:101
# df402e609bf44d7d87b0d166950b2c88
msgid "All of these operations aggregate documents from a single collection. While these operations provide simple access to common aggregation processes, they lack the flexibility and capabilities of the aggregation pipeline and map-reduce."
msgstr ""

#: ../source/aggregation.txt:109
# 644f8b39fd774db598ef321f44525496
msgid "Additional Features and Behaviors"
msgstr ""

#: ../source/aggregation.txt:111
# e3b68f253b9d447ca4c2ddd79aa9c7f5
msgid "For a feature comparison of the aggregation pipeline, map-reduce, and the special group functionality, see :doc:`/reference/aggregation-commands-comparison`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
# ab45a5697fa34771bc594a466adf7164
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
# b8ca1f3cbef5417dac6f8c22e859b572
msgid "`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and Visualization Using Flight Data <http://www.mongodb.com/presentations/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
# e7b738b648c442b88425c63f924a1921
msgid "`MongoDB for Time Series Data: Analyzing Time Series Data Using the Aggregation Framework and Hadoop <http://www.mongodb.com/presentations/mongodb-time-series-data-part-2-analyzing-time-series-data-using-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
# a9ecf15a49b14dbab307c0a5bca9e36f
msgid "`The Aggregation Framework <https://www.mongodb.com/presentations/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
# 661961050ac7459886132424330c1738
msgid "`Webinar: Exploring the Aggregation Framework <https://www.mongodb.com/webinar/exploring-the-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
# 730528f2eaff4ac9b133a05214433a7a
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

