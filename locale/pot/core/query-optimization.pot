# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# 419f8232d4c545389284107fe10e1001
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:0
# 2863f77bb5d54bf990c384ea253aa189
msgid "On this page"
msgstr ""

#: ../source/core/query-optimization.txt:15
# 165dff7d31a24512b1f0d52f652e9d71
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:20
# db20a6b4dbc140b2967ad00409f7d970
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:22
# 9c3f04dc801a4ae7afa34993d053b7a3
msgid "If your application queries a collection on a particular field or set of fields, then an index on the queried field or a :doc:`compound index </core/index-compound>` on the set of fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB </indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
# 3ce72697a3e9422c8b444b2bb54ba74d
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:37
# bbdb1220872045149da3bb422f4dc5de
msgid "To improve the performance of this query, add an ascending or a descending index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.createIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:47
# 18c62b3d52974ba4a853a25c798ba15a
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:50
# df0ec2f77c0b43f098237a0365d6d4bc
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:53
# aea35a9a72274e519600ae59f44bc868
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.createIndex()` and :doc:`/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:60
# 6a6a9ded66f342ca862a0c2c40eadd83
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:68
# 4e2c8a10205846f2937899d1cf96c5c8
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:70
# b29ac44ed8e246cea955dcca8c2233ef
msgid "Query selectivity refers to how well the query predicate excludes or filters out documents in a collection. Query selectivity can determine whether or not queries can use indexes effectively or even use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:75
# 3a6069240adb467eaa4cba0b7aa3459d
msgid "More selective queries match a smaller percentage of documents. For instance, an equality match on the unique ``_id`` field is highly selective as it can match at most one document."
msgstr ""

#: ../source/core/query-optimization.txt:79
# eb4a2ef234f14cc5bc730408b5ffdba1
msgid "Less selective queries match a larger percentage of documents. Less selective queries cannot use indexes effectively or even at all."
msgstr ""

#: ../source/includes/extracts/inequality_operators_selectivity.rst:2
# 4722452d842a40e28c125877570e69b2
msgid "For instance, the inequality operators :query:`$nin` and :query:`$ne` are *not* very selective since they often match a large portion of the index. As a result, in many cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:84
# 29c3b501848a4b6db077b8738d36c9f7
msgid "The selectivity of :query:`regular expressions <$regex>` depends on the expressions themselves. For details, see :ref:`regular expression and index use <regex-index-use>`."
msgstr ""

#: ../source/core/query-optimization.txt:93
# 6eafe9b3d82f4605a3bdb7e3c5eab714
msgid "Covered Query"
msgstr ""

#: ../source/core/query-optimization.txt:95
# 9d382f242dd640b4b6e70a661a3772f3
msgid "A covered query is a query that can be satisfied entirely using an index and does not have to examine any documents. An index :ref:`covers <indexes-covered-queries>` a query when both of the following apply:"
msgstr ""

#: ../source/core/query-optimization.txt:100
# 509eba18502c4e9c87651c272aa0ed04
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of an index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:103
# 110fb8b790474d319e1488b127ecf417
msgid "all the fields returned in the results are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:105
# 4fb34b112861493185c475592e911c46
msgid "For example, a collection ``inventory`` has the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:112
# 6949e95e69494bf294b6d836c0172fd3
msgid "This index will cover the following operation which queries on the ``type`` and ``item`` fields and returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:122
# afc11f90317043cd9c0f00780ede4e71
msgid "For the specified index to cover the query, the projection document must explicitly specify ``_id: 0`` to exclude the ``_id`` field from the result since the index does not include the ``_id`` field."
msgstr ""

#: ../source/core/query-optimization.txt:127
# 3e1db36aa8f248059fc016bcd092f7c2
msgid "Performance"
msgstr ""

#: ../source/core/query-optimization.txt:129
# 9d9e4363aa574d82b362b2f97fa46986
msgid "Because the index contains all fields required by the query, MongoDB can both match the :ref:`query conditions <read-operations-query-document>` and return the results using only the index."
msgstr ""

#: ../source/core/query-optimization.txt:133
# d643ec1d9c25404e8d4fdbf991830ce9
msgid "Querying *only* the index can be much faster than querying documents outside of the index. Index keys are typically smaller than the documents they catalog, and indexes are typically available in RAM or located sequentially on disk."
msgstr ""

#: ../source/core/query-optimization.txt:139
# 7469fd62c81049f0896c9ba3d539cb39
msgid "Limitations"
msgstr ""

#: ../source/core/query-optimization.txt:142
# a12a61da52994f74909c664b4104093f
msgid "Restrictions on Indexed Fields"
msgstr ""

#: ../source/core/query-optimization.txt:144
# bb8418d40bdd4d3499c07f9c15604c4c
msgid "An index **cannot** cover a query if:"
msgstr ""

#: ../source/core/query-optimization.txt:146
# 17b14c7a864e415e9f59d4fc21a97a1b
msgid "any of the indexed fields in any of the documents in the collection includes an array. If an indexed field is an array, the index becomes a :ref:`multi-key index <index-type-multikey>` and cannot support a covered query."
msgstr ""

#: ../source/core/query-optimization.txt:151
# c1c1b114881e4a77a255dc933c08adbd
msgid "any of the indexed fields in the query predicate or returned in the projection are fields in embedded documents. [#index-embedded-document-fields]_ For example, consider a collection ``users`` with documents of the following form:"
msgstr ""

#: ../source/core/query-optimization.txt:160
# 987d14016eb54deea963971b0b568855
msgid "The collection has the following index:"
msgstr ""

#: ../source/core/query-optimization.txt:166
# 1802cbe5059842208127d21ae8ffc112
msgid "The ``{ \"user.login\": 1 }`` index will **not** cover the query below because this index is on a field in an embedded document:"
msgstr ""

#: ../source/core/query-optimization.txt:173
# 8306bab72dfa41418f2e1ae2b2ca7b88
msgid "This query can still use the ``{ \"user.login\": 1 }`` index to find matching documents but it will examine and fetch documents to satisfy the query."
msgstr ""

#: ../source/core/query-optimization.txt:180
# cc24c6bf8f0b4094b9c0e2ebfd93b65d
msgid "Restrictions on Sharded Collection"
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:1
# d8f2bd5163c3493baf27b178a066641b
msgid "An index cannot cover a query on a :term:`sharded <shard>` collection when run against a :program:`mongos` if the index does not contain the shard key, with the following exception for the ``_id`` index: If a query on a sharded collection only specifies a condition on the ``_id`` field and returns only the ``_id`` field, the ``_id`` index can cover the query when run against a :program:`mongos` even if the ``_id`` field is not the shard key."
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:11
# 397bdd082cae4edb8550c42b8a6a8508
msgid "In previous versions, an index cannot :ref:`cover <covered-queries>` a query on a :term:`sharded <shard>` collection when run against a :program:`mongos`."
msgstr ""

#: ../source/core/query-optimization.txt:185
# 83c7993a74e440ce9aa0d7ab3e3fc277
msgid "``explain``"
msgstr ""

#: ../source/core/query-optimization.txt:187
# 05bc03a137574a39a2cc025491fac3b9
msgid "To determine whether a query is a covered query, use the :method:`db.collection.explain()` or the :method:`~cursor.explain()` method and review the :ref:`results <explain-output-covered-queries>`."
msgstr ""

#: ../source/includes/fact-explain-collection-method.rst:1
# 57e99cb810a44d91a1a6369e7f3dbd5d
msgid ":method:`db.collection.explain()` provides information on the execution of other operations, such as :method:`db.collection.update()`. See :method:`db.collection.explain()` for details."
msgstr ""

#: ../source/core/query-optimization.txt:193
# 45171dbb30cc41d0b02f02a4e4f4c49c
msgid "For more information see :ref:`indexes-measuring-use`."
msgstr ""

#: ../source/core/query-optimization.txt:195
# 4bdfae71ddc64108a956032be9b9ef3f
msgid "To index fields in embedded documents, use :term:`dot notation`."
msgstr ""

