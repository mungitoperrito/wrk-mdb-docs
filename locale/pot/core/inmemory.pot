# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/inmemory.txt:5
# b1c4f891e6454ad196e722200ef05dbf
msgid "In-Memory Storage Engine"
msgstr ""

#: ../source/core/inmemory.txt:0
# f235451d2c584efda656ba09d13d86c4
msgid "On this page"
msgstr ""

#: ../source/core/inmemory.txt:17
# 1416dc6556a7443185eea665db39de08
msgid "Starting in MongoDB Enterprise version 3.2.6, the in-memory storage engine is part of general availability (GA) in the 64-bit builds. Other than some metadata and diagnostic data, the in-memory storage engine does not maintain any on-disk data, including configuration data, indexes, user credentials, etc."
msgstr ""

#: ../source/core/inmemory.txt:23
# a2b51a2f41a34792a72473bacdea99c5
msgid "By avoiding disk I/O, the in-memory storage engine allows for more predictable latency of database operations."
msgstr ""

#: ../source/core/inmemory.txt:29
# ccbcd960322f4de99a1d17a956109c2c
msgid "Specify In-Memory Storage Engine"
msgstr ""

#: ../source/core/inmemory.txt:31
# ed58ae9dcf5a43b4ac7bdde62ea57517
msgid "To select the in-memory storage engine, specify:"
msgstr ""

#: ../source/core/inmemory.txt:33
# c74e3ac190394ac7a75685d719d2d922
msgid "``inMemory`` for the :option:`--storageEngine` option, or the :setting:`storage.engine` setting if using a configuration file."
msgstr ""

#: ../source/core/inmemory.txt:36
# edb69d6f27ae43aba86934af92eafc97
msgid "``--dbpath``, or :setting:`storage.dbPath` if using a configuration file. Although the in-memory storage engine does not write data to the filesystem, it maintains in the ``--dbpath`` small metadata files and diagnostic data as well temporary files for building large indexes."
msgstr ""

#: ../source/core/inmemory.txt:42
# 0a0cbb1426ea493ebb2def00644fab0b
msgid "For example, from the command line:"
msgstr ""

#: ../source/core/inmemory.txt:48
# 6ae05788d1564eee9e241dcef5dbfddc
msgid "Or, if using the :doc:`YAML configuration file format </reference/configuration-options>`:"
msgstr ""

#: ../source/core/inmemory.txt:57
# 0e882b7cb80c4dadb49c6d43f5065d87
msgid "See :ref:`cli-mongod-inmemory` for configuration options specific to this storage engine. Most :program:`mongod` configuration options are available for use with in-memory storage engine except for those options that are related to data persistence, such as journaling or encryption at rest configuration."
msgstr ""

#: ../source/core/inmemory.txt:64
# 68e3cb98138c467ea50a68b12dd0c1e2
msgid "The in-memory storage engine does not persist data after process shutdown."
msgstr ""

#: ../source/core/inmemory.txt:69
# 64e22cadc6f34190be33bd835393c90c
msgid "Concurrency"
msgstr ""

#: ../source/core/inmemory.txt:71
# 058a2820d71a411993fd560b3478ed07
msgid "The in-memory storage engine uses *document-level* concurrency control for write operations. As a result, multiple clients can modify different documents of a collection at the same time."
msgstr ""

#: ../source/core/inmemory.txt:78
# 282b9908a9504ce7ad094cc02816c5fa
msgid "Memory Use"
msgstr ""

#: ../source/core/inmemory.txt:80
# 75b4e036c77b4846b841f7daca25030b
msgid "In-memory storage engine requires that all its data (including indexes, oplog if :program:`mongod` instance is part of a replica set, etc.) must fit into the specified :option:`--inMemorySizeGB` command-line option or :setting:`storage.inMemory.engineConfig.inMemorySizeGB` setting in the :doc:`YAML configuration file </reference/configuration-options>`."
msgstr ""

#: ../source/includes/fact-inmemory-storage-engine-default-ram.rst:1
# 6a90bf2d1d0b47c88d8c35ca8ddf584d
msgid "By default, the in-memory storage engine uses 50% of physical RAM minus 1 GB."
msgstr ""

#: ../source/core/inmemory.txt:88
# d3a46f9fa9f540809a9d878c39894639
msgid "If a write operation would cause the data to exceed the specified memory size, MongoDB returns with the error:"
msgstr ""

#: ../source/core/inmemory.txt:95
# c966d14dc71848bb916f6ca9f56408b0
msgid "To specify a new size, use the :setting:`storage.inMemory.engineConfig.inMemorySizeGB` setting in the :doc:`YAML configuration file format </reference/configuration-options>`:"
msgstr ""

#: ../source/core/inmemory.txt:109
# 5f5b2e4495ea4293ad691ee7909bef96
msgid "Or use the command-line option :option:`--inMemorySizeGB`:"
msgstr ""

#: ../source/core/inmemory.txt:118
# dfafe4379219443f9b956f26bcc1eacc
msgid "Durability"
msgstr ""

#: ../source/core/inmemory.txt:120
# a9a66909fee84659a4acf39b46179282
msgid "The in-memory storage engine is non-persistent and does not write data to a persistent storage. That is non-persisted data includes application data and system data, such as users, permissions, indexes, replica set configuration, sharded cluster configuration, etc."
msgstr ""

#: ../source/core/inmemory.txt:125
# 3f43eb6d5c8d4b39b9acab5f94afd36d
msgid "As such, the concept of :term:`journal` or waiting for data to become :term:`durable` does not apply to the in-memory storage engine."
msgstr ""

#: ../source/includes/extracts/no-journaling-writeConcernMajorityJournalDefault-false.rst:2
# 3e5bc7d534734aca888f89f376a84e4e
msgid "If any voting member of a replica set runs without :ref:`journaling <journaling-internals>` (i.e. either runs an :ref:`in-memory storage engine<storage-inmemory>` or runs with journaling disabled), you must set :rsconf:`writeConcernMajorityJournalDefault` to ``false``."
msgstr ""

#: ../source/includes/extracts/no-journaling-rollback.rst:1
# b3b30ef40c8340c990abc58c4d9d7d5f
msgid "With :rsconf:`writeConcernMajorityJournalDefault` set to ``false``, MongoDB will not wait for :writeconcern:`w: \"majority\" <\"majority\">` writes to be durable before acknowledging the writes. As such, :writeconcern:`\"majority\"` write operations could possibly roll back in the event of a loss of a replica set member."
msgstr ""

#: ../source/core/inmemory.txt:132
# 504ef00a5353402480ef585fba14669e
msgid "Write operations that specify a write concern :writeconcern:`journaled <j>` are acknowledged immediately. When an :program:`mongod` instance shuts down, either as result of the :dbcommand:`shutdown` command or due to a system error, recovery of in-memory data is impossible."
msgstr ""

#: ../source/core/inmemory.txt:138
# da9977839ae54b93aad456eb0e24e52c
msgid "Deployment Architectures"
msgstr ""

#: ../source/core/inmemory.txt:140
# bcd5d5eb5ae04f7ea34194615caad816
msgid "In addition to running as standalones, :program:`mongod` instances that use in-memory storage engine can run as part of a replica set or part of a sharded cluster."
msgstr ""

#: ../source/core/inmemory.txt:145
# 11bfc131329e4a89ae70908f8d6a9f82
msgid "Replica Set"
msgstr ""

#: ../source/core/inmemory.txt:147
# cff42eb207614c72baed4c36452ffbec
msgid "You can deploy :program:`mongod` instances that use in-memory storage engine as part of a replica set. For example, as part of a three-member replica set, you could have:"
msgstr ""

#: ../source/core/inmemory.txt:151
# c37591f9ff194bd48c5ae41701a49390
msgid "two :program:`mongod` instances run with in-memory storage engine."
msgstr ""

#: ../source/core/inmemory.txt:153
#: ../source/core/inmemory.txt:184
# 8ee47627ee114fc7b8ada0f430cdde18
# f121b5e76a5843f2bef2785f498a7d2a
msgid "one :program:`mongod` instance run with :doc:`WiredTiger </core/wiredtiger>` storage engine. Configure the WiredTiger member as a hidden member (i.e. :rsconf:`hidden: true <members[n].hidden>` and :rsconf:`priority: 0 <members[n].priority>`)."
msgstr ""

#: ../source/core/inmemory.txt:158
# 3989d13950584aecaf8f6a1aaaa7c4fb
msgid "With this deployment model, only the :program:`mongod` instances running with the in-memory storange engine can become the primary. Clients connect only to the in-memory storage engine :program:`mongod` instances. Even if both :program:`mongod` instances running in-memory storage engine crash and restart, they can sync from the member running WiredTiger. The hidden :program:`mongod` instance running with WiredTiger persists the data to disk, including the user data, indexes, and replication configuration information."
msgstr ""

#: ../source/core/inmemory.txt:169
# 09c8e85b3a304714b720ec638765a2b9
msgid "In-memory storage engine requires that all its data (including oplog if :program:`mongod` is part of replica set, etc.) fit into the specified :option:`--inMemorySizeGB` command-line option orn :setting:`storage.inMemory.engineConfig.inMemorySizeGB` setting. See :ref:`inmemory-memory-use`."
msgstr ""

#: ../source/core/inmemory.txt:176
# f0019683e4df47d286b336fc4480923e
msgid "Sharded Cluster"
msgstr ""

#: ../source/core/inmemory.txt:178
# 0f10537ddbe241a8949753b0370fc49b
msgid "You can deploy :program:`mongod` instances that use in-memory storage engine as part of a sharded cluster. For example, in a sharded cluster, you could have one shard that has consists of the following replica set:"
msgstr ""

#: ../source/core/inmemory.txt:182
# 5adc1bf3f8724689936b62daf39bc5db
msgid "two :program:`mongod` instances run with in-memory storage engine"
msgstr ""

#: ../source/core/inmemory.txt:189
# 32fd2fb91e144c4888dd4b53f07591ea
msgid "To this shard, add the :method:`tag <sh.addShardTag>` ``inmem``. For example, if this shard has the name ``shardC``, connect to the :program:`mongos` and run :method:`sh.addShardTag()`."
msgstr ""

#: ../source/core/inmemory.txt:193
# 1d0bf71c6d974265b073f0f88e7d23f6
msgid "For example,"
msgstr ""

#: ../source/core/inmemory.txt:199
# 7931fb2ce919438da1255515a70ea213
msgid "To the other shards, add a separate tag ``persisted`` ."
msgstr ""

#: ../source/core/inmemory.txt:206
# 44654daccf694b5f96bd44c088aef10f
msgid "For each sharded collection that should reside on the ``inmem`` shard, :method:`assign to the entire chunk range <sh.addTagRange>` the tag ``inmem``:"
msgstr ""

#: ../source/core/inmemory.txt:214
# 774a2ce37555475ea0cf40048a639dbf
msgid "For each sharded collection that should resided across the ``persisted`` shards, :method:`assign to the entire chunk range <sh.addTagRange>` the tag ``persisted``:"
msgstr ""

#: ../source/core/inmemory.txt:222
# 075c5bc2e0e944eda74bcbd202d86394
msgid "For the ``inmem`` shard, create a database or move the database."
msgstr ""

