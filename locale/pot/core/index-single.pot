# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-single.txt:3
# cf4eaea7e57b47b99d4122699d7f01eb
msgid "Single Field Indexes"
msgstr ""

#: ../source/core/index-single.txt:0
# 8b0ac127a7c84f7c8fe26f157c6c672c
msgid "On this page"
msgstr ""

#: ../source/core/index-single.txt:13
# 999d2534658c47c9ab416d6a477d6ea9
msgid "MongoDB provides complete support for indexes on any field in a :term:`collection` of :term:`documents <document>`. By default, all collections have an index on the :ref:`_id field <index-type-id>`, and applications and users may add additional indexes to support important queries and operations."
msgstr ""

#: ../source/core/index-single.txt:19
# 9683e7cba90048a5ad673c49792a82c7
msgid "This document describes ascending/descending indexes on a single field."
msgstr ""

#: ../source/core/index-single.txt:24
# 7b5cd4da436747d58f2001cf92bf9a0c
msgid "Create an Ascending Index on a Single Field"
msgstr ""

#: ../source/core/index-single.txt:26
#: ../source/core/index-single.txt:70
#: ../source/core/index-single.txt:101
# 1593bafd49a94694963e5bf27bca7328
# 2e75dfc6069e420297750bcdfca8a1ce
# d2a4cdb6da2b43308888c088745cb7d6
msgid "Consider a collection named ``records`` that holds documents that resemble the following sample document:"
msgstr ""

#: ../source/core/index-single.txt:37
# 0cd47a38f36f40efa3fd636babb7469a
msgid "The following operation creates an ascending index on the ``score`` field of the ``records`` collection:"
msgstr ""

#: ../source/includes/fact-index-specification-field-value.rst:1
# e0301b348be24ad8b44ddb5f336dd95a
msgid "The value of the field in the index specification describes the kind of index for that field. For example, a value of ``1`` specifies an index that orders items in ascending order. A value of ``-1`` specifies an index that orders items in descending order. For additional index types, see :ref:`index types <index-types>`."
msgstr ""

#: ../source/core/index-single.txt:46
# 552e0872f5784e2790672c43e3b91fb3
msgid "The created index will support queries that select on the field ``score``, such as the following:"
msgstr ""

#: ../source/core/index-single.txt:60
# dd22d7b95749428ebee8a1521fd116ee
msgid "Create an Index on an Embedded Field"
msgstr ""

#: ../source/core/index-single.txt:62
# b50cb45bb5f448a0bef849892ff3c83b
msgid "You can create indexes on fields within embedded documents, just as you can index top-level fields in documents. Indexes on embedded fields differ from :ref:`indexes on embedded documents <index-embedded-documents>`, which include the full content up to the maximum :limit:`index size <Index Key>` of the embedded document in the index. Instead, indexes on embedded fields allow you to use a \"dot notation,\" to introspect into embedded documents."
msgstr ""

#: ../source/core/index-single.txt:81
# 6925a5ace3a34fe084ef15258fc81665
msgid "The following operation creates an index on the ``location.state`` field:"
msgstr ""

#: ../source/core/index-single.txt:88
# a85d3088cb3c483bbea96039774c1dba
msgid "The created index will support queries that select on the field ``location.state``, such as the following:"
msgstr ""

#: ../source/core/index-single.txt:97
# e5d01d05052c44eb82e31aa80cbe7f28
msgid "Create an Index on Embedded Document"
msgstr ""

#: ../source/core/index-single.txt:99
# cf55227ab0eb401ea89117a4613a323e
msgid "You can also create indexes on embedded document as a whole."
msgstr ""

#: ../source/core/index-single.txt:112
# 04f5988e40c34487a40a3aa8171e907e
msgid "The ``location`` field is an embedded document, containing the embedded fields ``city`` and ``state``. The following command creates an index on the ``location`` field as a whole:"
msgstr ""

#: ../source/core/index-single.txt:120
# 1dfd2c3f75424c00b92054b17dd6fe6f
msgid "The following query can use the index on the ``location`` field:"
msgstr ""

#: ../source/core/index-single.txt:126
# 072d904e898540f0bda5989e7d572fd9
msgid "Although the query can use the index, the result set does not include the sample document above. When performing equality matches on embedded documents, field order matters and the embedded documents must match exactly. See :ref:`query-embedded-documents` for more information regarding querying on embedded documents."
msgstr ""

#: ../source/core/index-single.txt:133
# c441bc1c7ab84679a809afa6115153bb
msgid "Additional Considerations"
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:1
# 8d4563f3819840de8813fcee483021a5
msgid "If your collection holds a large amount of data, and your application needs to be able to access the data while building the index, consider building the index in the background, as described in :ref:`index-creation-background`."
msgstr ""

#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
# 74a5beb107bf418887935dc8c8abce42
msgid "To build or rebuild indexes for a :term:`replica set`, see :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:8
# bf3191bb070f4917a7bedb914870863b
msgid "Some drivers may specify indexes, using ``NumberLong(1)`` rather than ``1`` as the specification. This does not have any affect on the resulting index."
msgstr ""

#: ../source/core/index-single.txt:54
# eb73a13e26d142e595581bc9472a6d30
msgid "index"
msgstr ""

#: ../source/core/index-single.txt:54
# eb73a13e26d142e595581bc9472a6d30
msgid "embedded fields"
msgstr ""

