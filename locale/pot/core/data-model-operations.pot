# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-model-operations.txt:3
# a4b532c021da4685b82b3e3a510df909
msgid "Operational Factors and Data Models"
msgstr ""

#: ../source/core/data-model-operations.txt:0
# 0e8b6bd12cae4edcb83322e2f9e88fc6
msgid "On this page"
msgstr ""

#: ../source/core/data-model-operations.txt:13
# a84bdef6dd8c4920b7497c57c5c791c6
msgid "Modeling application data for MongoDB depends on both the data itself, as well as the characteristics of MongoDB itself. For example, different data models may allow applications to use more efficient queries, increase the throughput of insert and update operations, or distribute activity to a sharded cluster more effectively."
msgstr ""

#: ../source/core/data-model-operations.txt:19
# 9cb2c3b773e043a4b620493a782e69ef
msgid "These factors are *operational* or address requirements that arise outside of the application but impact the performance of MongoDB based applications. When developing a data model, analyze all of your application's :doc:`read and write operations </crud>` in conjunction with the following considerations."
msgstr ""

#: ../source/core/data-model-operations.txt:28
# 81a3c5a9bca14edaaae53664aa618e53
msgid "Document Growth"
msgstr ""

#: ../source/core/data-model-operations.txt:32
# 33e89bfff3844380a2959c84cb42d8bc
msgid "Some updates to documents can increase the size of documents. These updates include pushing elements to an array (i.e. :update:`$push`) and adding new fields to a document."
msgstr ""

#: ../source/core/data-model-operations.txt:36
# 7373eac407024b29850bae983bd9ec5b
msgid "When using the MMAPv1 storage engine, document growth can be a consideration for your data model. For MMAPv1, if the document size exceeds the allocated space for that document, MongoDB will relocate the document on disk. With MongoDB 3.0.0, however, the default use of the :ref:`power-of-2-allocation` minimizes the occurrences of such re-allocations as well as allows for the effective reuse of the freed record space."
msgstr ""

#: ../source/core/data-model-operations.txt:44
# 2da32d42f48a46fc93892d0e5e4eb5fe
msgid "When using MMAPv1, if your applications require updates that will frequently cause document growth to exceeds the current power of 2 allocation, you may want to refactor your data model to use references between data in distinct documents rather than a denormalized data model."
msgstr ""

#: ../source/core/data-model-operations.txt:50
# 785f4c90aed548929c9adf494ae22f7f
msgid "You may also use a *pre-allocation* strategy to explicitly avoid document growth. Refer to the :ecosystem:`Pre-Aggregated Reports Use Case </use-cases/pre-aggregated-reports>` for an example of the *pre-allocation* approach to handling document growth."
msgstr ""

#: ../source/core/data-model-operations.txt:55
# 23589687372a405fbe3b8f658fe0ff6d
msgid "See :doc:`/core/mmapv1` for more information on MMAPv1."
msgstr ""

#: ../source/core/data-model-operations.txt:61
# 21761be2d8d94a6fb2fb2fe95a29483f
msgid "Atomicity"
msgstr ""

#: ../source/core/data-model-operations.txt:63
# fbbeda34a8304b77a14c88d57f486930
msgid "In MongoDB, operations are atomic at the :term:`document` level. No **single** write operation can change more than one document. Operations that modify more than a single document in a collection still operate on one document at a time. [#record-atomicity]_ Ensure that your application stores all fields with atomic dependency requirements in the same document. If the application can tolerate non-atomic updates for two pieces of data, you can store these data in separate documents."
msgstr ""

#: ../source/core/data-model-operations.txt:72
# e2b49318adf84798a04eee3b2f0ac995
msgid "A data model that embeds related data in a single document facilitates these kinds of atomic operations. For data models that store references between related pieces of data, the application must issue separate read and write operations to retrieve and modify these related pieces of data."
msgstr ""

#: ../source/core/data-model-operations.txt:78
# ca428b02f4854a148410439b65b82a4b
msgid "See :ref:`data-modeling-atomic-operation` for an example data model that provides atomic updates for a single document."
msgstr ""

#: ../source/core/data-model-operations.txt:81
# 9a4ea48a08ee476291d16b73f51c5872
msgid "Document-level atomic operations include all operations within a single MongoDB document record: operations that affect multiple embedded documents within that single record are still atomic."
msgstr ""

#: ../source/core/data-model-operations.txt:87
# 021ab0c6a4974dfbb9daa65227145858
msgid "Sharding"
msgstr ""

#: ../source/core/data-model-operations.txt:89
# a5c61edd9e364f4aba83905a812b3e6a
msgid "MongoDB uses :term:`sharding` to provide horizontal scaling. These clusters support deployments with large data sets and high-throughput operations. Sharding allows users to :term:`partition <data partition>` a :term:`collection` within a database to distribute the collection's documents across a number of :program:`mongod` instances or :term:`shards <shard>`."
msgstr ""

#: ../source/core/data-model-operations.txt:96
# ec756bc3da724e128c6f7f8364977445
msgid "To distribute data and application traffic in a sharded collection, MongoDB uses the :ref:`shard key <shard-key>`. Selecting the proper :ref:`shard key <shard-key>` has significant implications for performance, and can enable or prevent query isolation and increased write capacity. It is important to consider carefully the field or fields to use as the shard key."
msgstr ""

#: ../source/core/data-model-operations.txt:103
# d029a686e6e14d6583abb9a6872e9c76
msgid "See :doc:`/sharding` and :doc:`/core/sharding-shard-key` for more information."
msgstr ""

#: ../source/core/data-model-operations.txt:109
# 1ddda084674b43c39d71293bc4f2a363
msgid "Indexes"
msgstr ""

#: ../source/core/data-model-operations.txt:111
# b10e59d57fde49fdbec75ae2b4ff7b4d
msgid "Use indexes to improve performance for common queries. Build indexes on fields that appear often in queries and for all operations that return sorted results. MongoDB automatically creates a unique index on the ``_id`` field."
msgstr ""

#: ../source/core/data-model-operations.txt:116
# 6539c78b02914ae5bb31642a3f371af7
msgid "As you create indexes, consider the following behaviors of indexes:"
msgstr ""

#: ../source/core/data-model-operations.txt:118
# 4c0d9311838447c88c297a7f3813e104
msgid "Each index requires at least 8 kB of data space."
msgstr ""

#: ../source/core/data-model-operations.txt:120
# 40a93831a93f48b3a3b26ed179d992c2
msgid "Adding an index has some negative performance impact for write operations. For collections with high write-to-read ratio, indexes are expensive since each insert must also update any indexes."
msgstr ""

#: ../source/core/data-model-operations.txt:124
# 2d3c5999cbab43e393991239346fb9a4
msgid "Collections with high read-to-write ratio often benefit from additional indexes. Indexes do not affect un-indexed read operations."
msgstr ""

#: ../source/core/data-model-operations.txt:127
# d24d6334443d464199c862b2690ec0cd
msgid "When active, each index consumes disk space and memory. This usage can be significant and should be tracked for capacity planning, especially for concerns over working set size."
msgstr ""

#: ../source/core/data-model-operations.txt:131
# c6a184c53cf048cbbb298e19e98ee6bd
msgid "See :doc:`/applications/indexes` for more information on indexes as well as :doc:`/tutorial/analyze-query-plan/`. Additionally, the MongoDB :doc:`database profiler </tutorial/manage-the-database-profiler>` may help identify inefficient queries."
msgstr ""

#: ../source/core/data-model-operations.txt:139
# 0c5e823f66ef4c6885e96e01a1fcbf61
msgid "Large Number of Collections"
msgstr ""

#: ../source/core/data-model-operations.txt:141
# bcf88e6ef9e148ff806cee1c8379d4a2
msgid "In certain situations, you might choose to store related information in several collections rather than in a single collection."
msgstr ""

#: ../source/core/data-model-operations.txt:144
# 97c37ceae4264edc88dc84eab6205555
msgid "Consider a sample collection ``logs`` that stores log documents for various environment and applications. The ``logs`` collection contains documents of the following form:"
msgstr ""

#: ../source/core/data-model-operations.txt:153
# cd29daf1b7fb4cfda79212bec734cb53
msgid "If the total number of documents is low, you may group documents into collection by type. For logs, consider maintaining distinct log collections, such as ``logs_dev`` and ``logs_debug``. The ``logs_dev`` collection would contain only the documents related to the dev environment."
msgstr ""

#: ../source/core/data-model-operations.txt:159
# 926dcb5af6a9487c814659849eb8ebbb
msgid "Generally, having a large number of collections has no significant performance penalty and results in very good performance. Distinct collections are very important for high-throughput batch processing."
msgstr ""

#: ../source/core/data-model-operations.txt:163
# 8aba6a0896774951908ee1cba5872485
msgid "When using models that have a large number of collections, consider the following behaviors:"
msgstr ""

#: ../source/core/data-model-operations.txt:166
# e5ba7d26818e4e8095c291566e44b714
msgid "Each collection has a certain minimum overhead of a few kilobytes."
msgstr ""

#: ../source/core/data-model-operations.txt:168
# 05ea2044bdb4483c913e2cfc6efb7c94
msgid "Each index, including the index on ``_id``, requires at least 8 kB of data space."
msgstr ""

#: ../source/core/data-model-operations.txt:171
# 96022a6fbcb04f77ada67b6c9cbc2921
msgid "For each :term:`database`, a single namespace file (i.e. ``<database>.ns``) stores all meta-data for that database, and each index and collection has its own entry in the namespace file. MongoDB places :limit:`limits on the size of namespace files <Size of Namespace File>`."
msgstr ""

#: ../source/core/data-model-operations.txt:177
# aeaec9365b57497ab90d10c9adb788c7
msgid "MongoDB using the ``mmapv1`` storage engine has :limit:`limits on the number of namespaces <Number of Namespaces>`. You may wish to know the current number of namespaces in order to determine how many additional namespaces the database can support. To get the current number of namespaces, run the following in the :program:`mongo` shell:"
msgstr ""

#: ../source/core/data-model-operations.txt:188
# 8926f18437e743088ee6e06b478f9b1f
msgid "The limit on the number of namespaces depend on the ``<database>.ns`` size. The namespace file defaults to 16 MB."
msgstr ""

#: ../source/core/data-model-operations.txt:191
# d9ddc8cd172245f5ba5644c4816f5e2f
msgid "To change the size of the *new* namespace file, start the server with the option :option:`--nssize \\<new size MB\\> <--nssize>`. For existing databases, after starting up the server with :option:`--nssize`, run the :method:`db.repairDatabase()` command from the :program:`mongo` shell. For impacts and considerations on running :method:`db.repairDatabase()`, see :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/core/data-model-operations.txt:202
# 5d267827fd6843c3b67b0e7b0a2ccac4
msgid "Collection Contains Large Number of Small Documents"
msgstr ""

#: ../source/core/data-model-operations.txt:204
# 819edbf10a9d4f9c8531ed4eebd56b9c
msgid "You should consider embedding for performance reasons if you have a collection with a large number of small documents. If you can group these small documents by some logical relationship *and* you frequently retrieve the documents by this grouping, you might consider \"rolling-up\" the small documents into larger documents that contain an array of embedded documents."
msgstr ""

#: ../source/core/data-model-operations.txt:211
# bb848b991f094b0da20ae7c6efcbc53a
msgid "\"Rolling up\" these small documents into logical groupings means that queries to retrieve a group of documents involve sequential reads and fewer random disk accesses. Additionally, \"rolling up\" documents and moving common fields to the larger document benefit the index on these fields. There would be fewer copies of the common fields *and* there would be fewer associated key entries in the corresponding index. See :doc:`/indexes` for more information on indexes."
msgstr ""

#: ../source/core/data-model-operations.txt:219
# 6bbe0a370c96489295d1fbd4a69f740e
msgid "However, if you often only need to retrieve a subset of the documents within the group, then \"rolling-up\" the documents may not provide better performance. Furthermore, if small, separate documents represent the natural model for the data, you should maintain that model."
msgstr ""

#: ../source/core/data-model-operations.txt:227
# d3154606e66c46cdba53466392fe26f4
msgid "Storage Optimization for Small Documents"
msgstr ""

#: ../source/core/data-model-operations.txt:229
# 1fda389bd1a245979461aa96a8375220
msgid "Each MongoDB document contains a certain amount of overhead. This overhead is normally insignificant but becomes significant if all documents are just a few bytes, as might be the case if the documents in your collection only have one or two fields."
msgstr ""

#: ../source/core/data-model-operations.txt:234
# 1e3a61d7e6b04d88a30cf74b945bc4ee
msgid "Consider the following suggestions and strategies for optimizing storage utilization for these collections:"
msgstr ""

#: ../source/core/data-model-operations.txt:237
# 83a12ada84f448a2903fc9ff8706b1e8
msgid "Use the ``_id`` field explicitly."
msgstr ""

#: ../source/core/data-model-operations.txt:239
# d0a0b48b6fc642e08bffb3ef2a03b5e2
msgid "MongoDB clients automatically add an ``_id`` field to each document and generate a unique 12-byte :term:`ObjectId` for the ``_id`` field. Furthermore, MongoDB always indexes the ``_id`` field. For smaller documents this may account for a significant amount of space."
msgstr ""

#: ../source/core/data-model-operations.txt:245
# 53467be44e0f4986a517a00a7ac0c228
msgid "To optimize storage use, users can specify a value for the ``_id`` field explicitly when inserting documents into the collection. This strategy allows applications to store a value in the ``_id`` field that would have occupied space in another portion of the document."
msgstr ""

#: ../source/core/data-model-operations.txt:250
# cc8ab59f0bba48d19735dffe834e6972
msgid "You can store any value in the ``_id`` field, but because this value serves as a primary key for documents in the collection, it must uniquely identify them. If the field's value is not unique, then it cannot serve as a primary key as there would be collisions in the collection."
msgstr ""

#: ../source/core/data-model-operations.txt:256
# 68622cde98b94b9cbae77cf140abb0fc
msgid "Use shorter field names."
msgstr ""

#: ../source/core/data-model-operations.txt:260
# 6239af983c1a4ce6a485ca31b15607e7
msgid "Shortening field names reduces expressiveness and does not provide considerable benefit for larger documents and where document overhead is not of significant concern. Shorter field names do not reduce the size of indexes, because indexes have a predefined structure."
msgstr ""

#: ../source/core/data-model-operations.txt:266
# 4ea49eb72ade4094822f305eda02a2cd
msgid "In general, it is not necessary to use short field names."
msgstr ""

#: ../source/core/data-model-operations.txt:268
# 43b13967c6cc475a9fdceaa64d82357f
msgid "MongoDB stores all field names in every document. For most documents, this represents a small fraction of the space used by a document; however, for small documents the field names may represent a proportionally large amount of space. Consider a collection of small documents that resemble the following:"
msgstr ""

#: ../source/core/data-model-operations.txt:278
# 10ddab27a41e4de8920688b984f13217
msgid "If you shorten the field named ``last_name`` to ``lname`` and the field named ``best_score`` to ``score``, as follows, you could save 9 bytes per document."
msgstr ""

#: ../source/core/data-model-operations.txt:286
# 2f776d9932f34c7da06d81891c58796d
msgid "Embed documents."
msgstr ""

#: ../source/core/data-model-operations.txt:288
# 5f9c7727402e414dbad0f459dad39a43
msgid "In some cases you may want to embed documents in other documents and save on the per-document overhead. See :ref:`faq-developers-embed-documents`."
msgstr ""

#: ../source/core/data-model-operations.txt:293
# cc2135ad0587491fb61a90f87399a8ee
msgid "Data Lifecycle Management"
msgstr ""

#: ../source/core/data-model-operations.txt:295
# 9c26f6baa578401793202a26231b428b
msgid "Data modeling decisions should take data lifecycle management into consideration."
msgstr ""

#: ../source/core/data-model-operations.txt:298
# 464ddd3b453d410697b72aaec2150bc7
msgid "The :doc:`Time to Live or TTL feature </tutorial/expire-data>` of collections expires documents after a period of time. Consider using the TTL feature if your application requires some data to persist in the database for a limited period of time."
msgstr ""

#: ../source/core/data-model-operations.txt:303
# bcb2216e25534b658620b9f6e693f103
msgid "Additionally, if your application only uses recently inserted documents, consider :doc:`/core/capped-collections`. Capped collections provide *first-in-first-out* (FIFO) management of inserted documents and efficiently support operations that insert and read documents based on insertion order."
msgstr ""

