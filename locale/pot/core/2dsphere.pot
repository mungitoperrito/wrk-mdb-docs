# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2dsphere.txt:3
# f49f8e79c77e4a11bf00f57de82b1c1a
msgid "``2dsphere`` Indexes"
msgstr ""

#: ../source/core/2dsphere.txt:0
# a9e359ef3a0246098a0738010406d6d2
msgid "On this page"
msgstr ""

#: ../source/core/2dsphere.txt:16
# e44a06424fcc42f897c31bcd22b89363
msgid "Overview"
msgstr ""

#: ../source/core/2dsphere.txt:18
# 1a79b4b3053a4681876da48a6e645c17
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. ``2dsphere`` index supports all MongoDB geospatial queries: queries for inclusion, intersection and proximity. See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2dsphere.txt:24
# 5401b6fa8302427dae5b465ec7bb847c
msgid "The ``2dsphere`` index supports data stored as :doc:`GeoJSON </reference/geojson>` objects and as legacy coordinate pairs (See also :ref:`2dsphere-data-restrictions`). For legacy coordinate pairs, the index converts the data to GeoJSON :ref:`geojson-point`. For details on the supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:30
# 27369eb1312548aca82b13da50a19233
msgid "The default datum for an earth-like sphere is :term:`WGS84`. Coordinate-axis order is **longitude, latitude**."
msgstr ""

#: ../source/core/2dsphere.txt:36
# cb56d99e1ff04497831d81c3327c67cf
msgid "``2dsphere (Version 2)``"
msgstr ""

#: ../source/core/2dsphere.txt:40
# 11151192cd4d441ca01a111542b00e37
msgid "MongoDB 2.6 introduces a version 2 of ``2dsphere`` indexes. Version 2 is the default version of ``2dsphere`` indexes created in MongoDB 2.6 and later series. To override the default version 2 and create a version 1 index, include the option ``{ \"2dsphereIndexVersion\": 1 }`` when creating the index."
msgstr ""

#: ../source/core/2dsphere.txt:47
# c12fc844212b48b7892ca62ac0df4843
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2dsphere.txt:51
# 786c6eaca9b04ad58aa52f2000162c26
msgid "``2dsphere (Version 2)`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2dsphere`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the index. For inserts, MongoDB inserts the document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/core/2dsphere.txt:58
# a6cc001585ac43bc82c31257ab6c7eda
msgid "For a compound index that includes a ``2dsphere`` index key along with keys of other types, only the ``2dsphere`` index field determines whether the index references a document."
msgstr ""

#: ../source/core/2dsphere.txt:62
# b33d9c604495474eb344d1969af16fc9
msgid "Earlier versions of MongoDB only support ``2dsphere (Version 1)`` indexes. ``2dsphere (Version 1)`` indexes are *not* sparse by default and will reject documents with ``null`` location fields."
msgstr ""

#: ../source/core/2dsphere.txt:67
# 8ee6e51b04aa4cf6a41de87813e5c86e
msgid "Additional GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:69
# 359008ba45ce4c89b644c3ebd399f3f5
msgid "``2dsphere (Version 2)`` includes support for additional GeoJSON object: :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection`. For details on all supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:75
# e93e67be73464c399ac4f4c1b2a73dcb
msgid "Considerations"
msgstr ""

#: ../source/core/2dsphere.txt:78
# 934521df6d87481684cc7293ef7a0ad7
msgid "``geoNear`` and ``$geoNear`` Restrictions"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# 4bc4888cdd8747cf90de6ac70941ec38
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# 98ae2c693c834d1780c06ab10a854d1a
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# 62e2c86df2244924949cfaa2eee59572
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2dsphere.txt:85
# e491972b656946e59b37887963d4c51b
msgid "Shard Key Restrictions"
msgstr ""

#: ../source/core/2dsphere.txt:87
# 12143ac64e77405bb982141c19c68411
msgid "You cannot use a ``2dsphere`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2dsphere.txt:94
# 2b4311e766d443f296e2610603bcdaff
msgid "``2dsphere`` Indexed Field Restrictions"
msgstr ""

#: ../source/includes/geo-data-limit-for-2dsphere.rst:1
# 68a1767be6424f92a1bde61d2cb7c261
msgid "Fields with :doc:`2dsphere </core/2dsphere>` indexes must hold geometry data in the form of :term:`coordinate pairs <legacy coordinate pairs>` or :term:`GeoJSON` data. If you attempt to insert a document with non-geometry data in a ``2dsphere`` indexed field, or build a ``2dsphere`` index on a collection where the indexed field has non-geometry data, the operation will fail."
msgstr ""

#: ../source/core/2dsphere.txt:99
#: ../source/core/2dsphere.txt:138
# cffe8d07b33b46e7b3c46dd51df13e9e
# e893e9ace7ad4682b3ccb9eef9d7522a
msgid "Create a ``2dsphere`` Index"
msgstr ""

#: ../source/core/2dsphere.txt:101
# 3d7c8833301949e8a1c716b119010142
msgid "To create a ``2dsphere`` index, use the :method:`db.collection.createIndex()` method, specifying the location field as the key and the string literal ``\"2dsphere\"`` as the index type:"
msgstr ""

#: ../source/core/2dsphere.txt:110
# f13329e640ed42b6955cfc7a552e4c2f
msgid "Unlike a compound :doc:`2d </core/2d>` index which can reference one location field and one other field, a :ref:`compound <index-type-compound>` ``2dsphere`` index can reference multiple location and non-location fields."
msgstr ""

#: ../source/core/2dsphere.txt:115
# 58a0f6d0b60e40429ca075b209aea0f7
msgid "For the following examples, consider a collection ``places`` with documents that store location data as :ref:`GeoJSON Point <geojson-point>` in a field named ``loc``:"
msgstr ""

#: ../source/core/2dsphere.txt:140
# b6eb1678fdf24174ba89a1f86726c1d7
msgid "The following operation creates a :doc:`2dsphere </core/2dsphere>` index on the location field ``loc``:"
msgstr ""

#: ../source/core/2dsphere.txt:148
# eb5dd4f7b0c14e5b9845c20e4f6344c1
msgid "Create a Compound Index with ``2dsphere`` Index Key"
msgstr ""

#: ../source/core/2dsphere.txt:150
# 7bf57cab94134138aaa26e7317dd08eb
msgid "A :ref:`compound index <index-type-compound>` can include a ``2dsphere`` index key in combination with non-geospatial index keys. For example, the following operation creates a compound index where the first key ``loc`` is a ``2dsphere`` index key, and the remaining keys ``category`` and ``names`` are non-geospatial index keys, specifically descending (``-1``) and ascending (``1``) keys respectively."
msgstr ""

#: ../source/core/2dsphere.txt:162
# 4d3435e8ba67483bbb674960c7635fa5
msgid "Unlike the :doc:`2d </core/2d>` index, a compound ``2dsphere`` index does not require the location field to be the first field indexed. For example:"
msgstr ""

