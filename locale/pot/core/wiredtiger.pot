# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/wiredtiger.txt:5
# 00a038750977412781830cb32a4d65b6
msgid "WiredTiger Storage Engine"
msgstr ""

#: ../source/core/wiredtiger.txt:0
# 5bc0d943dfe543c8a09d7dcb62179508
msgid "On this page"
msgstr ""

#: ../source/core/wiredtiger.txt:15
# 8a6854230e7643e7bc0762fd756a9b36
msgid "Starting in MongoDB 3.0, the WiredTiger storage engine is available in the 64-bit builds."
msgstr ""

#: ../source/core/wiredtiger.txt:20
# c0b2c33b1248485bb418b62ddf14b6cc
msgid "The WiredTiger storage engine is the default storage engine starting in MongoDB 3.2. For existing deployments, if you do not specify the ``--storageEngine`` or the :setting:`storage.engine` setting, MongoDB 3.2 can automatically determine the storage engine used to create the data files in the ``--dbpath`` or :setting:`storage.dbPath`. See :ref:`3.2-storage-engine-compatibility`."
msgstr ""

#: ../source/core/wiredtiger.txt:29
# 5ccd22986c8840509528cdb6b4c54f93
msgid "Document Level Concurrency"
msgstr ""

#: ../source/core/wiredtiger.txt:31
# aad4e827777444dcad8dbd5383002f97
msgid "WiredTiger uses *document-level* concurrency control for write operations. As a result, multiple clients can modify different documents of a collection at the same time."
msgstr ""

#: ../source/includes/fact-wiredtiger-locks.rst:1
# 6e8d31f6de484d72a25a0a598f542275
msgid "For most read and write operations, WiredTiger uses optimistic concurrency control. WiredTiger uses only intent locks at the global, database and collection levels. When the storage engine detects conflicts between two operations, one will incur a write conflict causing MongoDB to transparently retry that operation."
msgstr ""

#: ../source/includes/fact-wiredtiger-locks.rst:7
# e68eb4e5f1904a7e971ab923ff8078f8
msgid "Some global operations, typically short lived operations involving multiple databases, still require a global \"instance-wide\" lock. Some other operations, such as dropping a collection, still require an exclusive database lock."
msgstr ""

#: ../source/core/wiredtiger.txt:40
# 7cb1fc2acc134a78b92bb6aa89521ac4
msgid "Snapshots and Checkpoints"
msgstr ""

#: ../source/core/wiredtiger.txt:42
# 4e8afe1acf80445d9615110efcfa2dca
msgid "WiredTiger uses MultiVersion Concurrency Control (MVCC). At the start of an operation, WiredTiger provides a point-in-time snapshot of the data to the transaction. A snapshot presents a consistent view of the in-memory data."
msgstr ""

#: ../source/core/wiredtiger.txt:47
# a341dc77005f4a738f23155f17954a4f
msgid "When writing to disk, WiredTiger writes all the data in a snapshot to disk in a consistent way across all data files. The now-:term:`durable` data act as a *checkpoint* in the data files. The *checkpoint* ensures that the data files are consistent up to and including the last checkpoint; i.e. checkpoints can act as recovery points."
msgstr ""

#: ../source/includes/extracts/wt-snapshot-frequency.rst:1
# e60bb65876ed46818953a81a1248ad13
msgid "MongoDB configures WiredTiger to create checkpoints (i.e. write the snapshot data to disk) at intervals of 60 seconds or 2 gigabytes of journal data."
msgstr ""

#: ../source/core/wiredtiger.txt:55
# 7e68ae76ede94a338a69b0fa4d8c3ff5
msgid "During the write of a new checkpoint, the previous checkpoint is still valid. As such, even if MongoDB terminates or encounters an error while writing a new checkpoint, upon restart, MongoDB can recover from the last valid checkpoint."
msgstr ""

#: ../source/core/wiredtiger.txt:60
# c41e0d617dba40749a6e4be09fab9326
msgid "The new checkpoint becomes accessible and permanent when WiredTiger's metadata table is atomically updated to reference the new checkpoint. Once the new checkpoint is accessible, WiredTiger frees pages from the old checkpoints."
msgstr ""

#: ../source/core/wiredtiger.txt:65
# e4516fd204214bed9ed05c975872fdd8
msgid "Using WiredTiger, even without :ref:`journaling <storage-wiredtiger-journal>`, MongoDB can recover from the last checkpoint; however, to recover changes made after the last checkpoint, run with :ref:`journaling <storage-wiredtiger-journal>`."
msgstr ""

#: ../source/core/wiredtiger.txt:73
# 41ad377a265f45aba88bdee2e0713077
msgid "Journal"
msgstr ""

#: ../source/core/wiredtiger.txt:75
# bd5ca88e872945faa98050f15eff3719
msgid "WiredTiger uses a write-ahead transaction log in combination with :ref:`checkpoints <storage-wiredtiger-checkpoints>` to ensure data durability."
msgstr ""

#: ../source/core/wiredtiger.txt:79
# 8904b9cba3784eefa96757cfaf001c6d
msgid "The WiredTiger journal persists all data modifications between checkpoints. If MongoDB exits between checkpoints, it uses the journal to replay all data modified since the last checkpoint. For information on the frequency with which MongoDB writes the journal data to disk, see :ref:`journal-process`."
msgstr ""

#: ../source/core/wiredtiger.txt:85
# 3ec3a4cdd0a046869f31434146fa5875
msgid "WiredTiger journal is compressed using the :term:`snappy` compression library. To specify an alternate compression algorithm or no compression, use the :setting:`storage.wiredTiger.engineConfig.journalCompressor` setting."
msgstr ""

#: ../source/includes/fact-wiredtiger-log-compression-limit.rst:1
# 64f6ee7bfc124695ba28d3a18a03c870
msgid "Minimum log record size for WiredTiger is 128 bytes. If a log record is 128 bytes or smaller, WiredTiger does not compress that record."
msgstr ""

#: ../source/core/wiredtiger.txt:94
# aa7d8c0ec2b34a32922d182ff8f82c8e
msgid "You can disable journaling by setting :setting:`storage.journal.enabled` to ``false``, which can reduce the overhead of maintaining the journal."
msgstr ""

#: ../source/core/wiredtiger.txt:98
# eae98623a50245eea7035e7d036aea28
msgid "For :term:`standalone` instances, not using the journal means that you will lose some data modifications when MongoDB exits unexpectedly between checkpoints. For members of :term:`replica sets <replica set>`, the replication process may provide sufficient durability guarantees."
msgstr ""

#: ../source/core/wiredtiger.txt:103
# a771b410e5684f9f91de0cfdaefdb2ca
msgid ":ref:`Journaling with WiredTiger <journaling-wiredTiger>`"
msgstr ""

#: ../source/core/wiredtiger.txt:108
# 681879a2e85742fba244764c6420511e
msgid "Compression"
msgstr ""

#: ../source/core/wiredtiger.txt:110
# 1f2df76c58964ddb9eb56fab2c2eb256
msgid "With WiredTiger, MongoDB supports compression for all collections and indexes. Compression minimizes storage use at the expense of additional CPU."
msgstr ""

#: ../source/core/wiredtiger.txt:114
# 4f3a285b9fe947cbb9b09bb7b897045a
msgid "By default, WiredTiger uses block compression with the :term:`snappy` compression library for all collections and :term:`prefix compression` for all indexes."
msgstr ""

#: ../source/core/wiredtiger.txt:118
# dd169d00b71c413587508764c304c34c
msgid "For collections, block compression with :term:`zlib` is also available. To specify an alternate compression algorithm or no compression, use the :setting:`storage.wiredTiger.collectionConfig.blockCompressor` setting."
msgstr ""

#: ../source/core/wiredtiger.txt:123
# db9440aeb2a54bd79646f209ec065f6e
msgid "For indexes, to disable :term:`prefix compression`, use the :setting:`storage.wiredTiger.indexConfig.prefixCompression` setting."
msgstr ""

#: ../source/core/wiredtiger.txt:126
# ee450bac123041359cf812b58e3690b5
msgid "Compression settings are also configurable on a per-collection and per-index basis during collection and index creation. See :ref:`create-collection-storage-engine-options` and :ref:`db.collection.createIndex() storageEngine option <createIndex-options>`."
msgstr ""

#: ../source/core/wiredtiger.txt:132
# b326de9b0fb047f0aaa585f7254c2d9e
msgid "For most workloads, the default compression settings balance storage efficiency and processing requirements."
msgstr ""

#: ../source/core/wiredtiger.txt:135
# 44eceb8a57a041aa9ef917e30ef64f33
msgid "The WiredTiger journal is also compressed by default. For information on journal compression, see :ref:`storage-wiredtiger-journal`."
msgstr ""

#: ../source/core/wiredtiger.txt:141
# 5c6bac21922441de94c1a11ee42999cd
msgid "Memory Use"
msgstr ""

#: ../source/includes/extracts/wt-cache-utilization.rst:1
# 3c8c75ec38434efc9c3f6c6023c02c1d
msgid "With WiredTiger, MongoDB utilizes both the WiredTiger internal cache and the filesystem cache."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:2
# f1c17bb44fb64066ad560f8a79a894c7
msgid "Starting in 3.4, the WiredTiger internal cache, by default, will use the larger of either:"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:5
# 9851a202c4834aa08035e2a17c16374a
msgid "50% of RAM minus 1 GB, or"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:7
# 4359f395f77a4b2a9a1b3252640a8af2
msgid "256 MB."
msgstr ""

#: ../source/includes/extracts/wt-filesystem-cache.rst:1
# c63e0abb127d40f09bccf39b776f4d41
msgid "Via the filesystem cache, MongoDB automatically uses all free memory that is not used by the WiredTiger cache or by other processes. Data in the filesystem cache is compressed."
msgstr ""

#: ../source/includes/extracts/wt-cache-setting.rst:1
# 9cb2df66d2ae479a86cba32dc227eab1
msgid "To adjust the size of the WiredTiger internal cache, see :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and :option:`--wiredTigerCacheSizeGB`. Avoid increasing the WiredTiger internal cache size above its default value."
msgstr ""

#: ../source/core/wiredtiger.txt:147
# c3287fc138b844f09697f9dc335a7367
msgid "`<http://wiredtiger.com>`_"
msgstr ""

