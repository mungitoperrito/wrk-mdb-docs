# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# a879b86ca2d94bf3a4578e26971b3d00
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:0
# b3922ae091b84eeda3807caf967f75ca
msgid "On this page"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:13
# 22fc3692182e474390ddc533a914ffa6
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# 7952fe7004104ba6b9885095c4496cbd
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:24
# b87119cd6e69421e92c9ae6ca3282c3b
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:31
# 76ce9763bce441bd93af6d28f15d2e37
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:33
# cb37aae09a984bb989b33ecbdd86c40d
msgid "The MongoDB aggregation pipeline consists of :ref:`stages <aggregation-pipeline-operator-reference>`. Each stage transforms the documents as they pass through the pipeline. Pipeline stages do not need to produce one output document for every input document; e.g., some stages may generate new documents or filter out documents. Pipeline stages can appear multiple times in the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:40
# cb752c3a76be4bc09097c86627eb9513
msgid "MongoDB provides the :method:`db.collection.aggregate()` method in the :program:`mongo` shell and the :dbcommand:`aggregate` command for aggregation pipeline. See :ref:`aggregation-pipeline-operator-reference` for the available stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:45
# 93abdb11bf274de0b9bc9b3ec391cd3c
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:52
# ebf294bf64d344a4b6cb3fc8508003a4
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:54
# 1efc9abd39ec4d438f81c88da34892f9
msgid "Some pipeline stages takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :doc:`document </core/document>` structure and can contain other :ref:`expression <aggregation-expressions>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:60
# 5416ef76693742c79b0dd342d0d44286
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:64
# 4f72f7d46e57488d9044c07bf41db4d2
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :ref:`accumulator <aggregation-accumulator-operators>` expressions."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:68
# 527ef8b150fb4be5aefc4a7c96ecf5b9
msgid "The accumulators, used in the :pipeline:`$group` stage, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:74
# c398bd237b1649efb990e8253dfa587b
msgid "Some accumulators are available in the :pipeline:`$project` stage; however, when used in the :pipeline:`$project` stage, the accumulators do not maintain their state across documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:78
# 9c0bf51d25de47e69417f48610882d17
msgid "For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# 763e284e515e4715866879dea7cbc4a0
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:86
# 430196476d5f4678b43bdc3b4efcfb1a
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:94
# e96ffd0405ab4115910a5ef30682551a
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:96
# 261a325a09714c1eb6383288faab3303
msgid "The :pipeline:`$match` and :pipeline:`$sort` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# 98772f408acc47d2ae4a39ac306f95c4
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:108
# ae2688c326d34140a7d8fa4a46ca6a2f
msgid "Starting in MongoDB 3.2, indexes can :ref:`cover <read-operations-covered-query>` an aggregation pipeline. In MongoDB 2.6 and 3.0, indexes could not cover an aggregation pipeline since even when the pipeline uses an index, aggregation still requires access to the actual documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:115
# 2dde1c17d6104089a76c6d3b2938291b
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:117
# 91e320169e7340499e3c39b0229b46e6
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:124
# 39de03123f204f90933c62b46c5a8e3f
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:131
# 157eb25886384a4aba0d5fd8d1e7cb13
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:133
# 82e578fdc04f4aec94ad9dad1b6958e8
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :doc:`/core/aggregation-pipeline-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:137
# fa8bb6f9278e4d6e9ab1bdafd0e7417b
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
# 52c6187cf1084746ab3d11ec5d0b28d5
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
# 9517b9ca7add4c0c8729e0394eedb833
msgid "`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and Visualization Using Flight Data <http://www.mongodb.com/presentations/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
# 63920b263e974690b3fed36fb64ce645
msgid "`MongoDB for Time Series Data: Analyzing Time Series Data Using the Aggregation Framework and Hadoop <http://www.mongodb.com/presentations/mongodb-time-series-data-part-2-analyzing-time-series-data-using-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
# 1c030109f58c42b58fe3e0841498f90a
msgid "`The Aggregation Framework <https://www.mongodb.com/presentations/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
# 1971140da8d94dcabaf7d9dcf3a97986
msgid "`Webinar: Exploring the Aggregation Framework <https://www.mongodb.com/webinar/exploring-the-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
# ee56b62ddaee4530abdc0c9f337dd9b9
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

