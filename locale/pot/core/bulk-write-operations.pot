# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-write-operations.txt:3
# ceba53ad7dfc477db6bb16ea9d6be6c7
msgid "Bulk Write Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 7e1dea0c2408468da7b30f4af7734604
msgid "On this page"
msgstr ""

#: ../source/core/bulk-write-operations.txt:14
# ddf7c859174a4a8e91cfc8ce6f735ec3
msgid "Overview"
msgstr ""

#: ../source/core/bulk-write-operations.txt:16
# 774e7cee03b34fff8119d997250256a7
msgid "MongoDB provides clients the ability to perform write operations in bulk. Bulk write operations affect a *single* collection. MongoDB allows applications to determine the acceptable level of acknowledgement required for bulk write operations."
msgstr ""

#: ../source/core/bulk-write-operations.txt:23
# 056bc15ac9b548c1bb257e48062ebc02
msgid "The :method:`db.collection.bulkWrite()` method provides the ability to perform bulk insert, update, and remove operations. MongoDB also supports bulk insert through the :method:`db.collection.insertMany()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:29
# ea500b6e2cfe4800b8a98a697463e323
msgid "Ordered vs Unordered Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:31
# 89f1e69836fd4f4786d110b01e531153
msgid "Bulk write operations can be either *ordered* or *unordered*."
msgstr ""

#: ../source/core/bulk-write-operations.txt:33
# 49671a18a4ef4adebb456f9d92b1064e
msgid "With an ordered list of operations, MongoDB executes the operations serially. If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list. See :ref:`ordered Bulk Write<bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:39
# 6a2851739077443d9af2b6d0817913e2
msgid "With an unordered list of operations, MongoDB can execute the operations in parallel, but this behavior is not guaranteed. If an error occurs during the processing of one of the write operations, MongoDB will continue to process remaining write operations in the list. See :ref:`bulkwrite-example-unordered-bulk-write`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:46
# a4286483fd144c3183a2387919cedec0
msgid "Executing an ordered list of operations on a sharded collection will generally be slower than executing an unordered list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/core/bulk-write-operations.txt:51
# 65db100abb9948f09d7c8b8491cb3c92
msgid "By default, :method:`~db.collection.bulkWrite()` performs ``ordered`` operations. To specify ``unordered`` write operations, set ``ordered : false`` in the options document."
msgstr ""

#: ../source/core/bulk-write-operations.txt:55
# 31ce5a31425042dfbb9e134667f12258
msgid "See :ref:`bulkwrite-write-operations-executionofoperations`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:58
# cf7086f5360146868fb5edcbc67a40a8
msgid "bulkWrite() Methods"
msgstr ""

#: ../source/core/bulk-write-operations.txt:60
# f9dbdc9249d9451a8c33f5c7e3b55ad6
msgid ":method:`~db.collection.bulkWrite()` supports the following write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:62
# 34615e3122ad4c44966307e33a4da454
msgid ":ref:`bulkwrite-write-operations-insertOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:63
# 8a213fd00d59448984e94ed1c5b1b7b0
msgid ":ref:`updateOne <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:64
# b0c339e31af441d9bb882cc676c9035c
msgid ":ref:`updateMany <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:65
# a7d478c44d1f4b4aa9ba571d686cce27
msgid ":ref:`bulkwrite-write-operations-replaceOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:66
# 212933c6fbf1420c9f8e528fad6607ec
msgid ":ref:`deleteOne <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:67
# 41c5c2b2ec28445aa2795e4b18486bfe
msgid ":ref:`deleteMany <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:69
# 7d42a3fbeb4843b0b8be1ebbe4300a57
msgid "Each write operation is passed to :method:`~db.collection.bulkWrite()` as a document in an array."
msgstr ""

#: ../source/core/bulk-write-operations.txt:72
# dcd768898643494f9a26858ffa547718
msgid "For example, the following performs multiple write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:74
# 3a6f054029ce49bba02b6651cc445608
msgid "The ``characters`` collection contains the following documents:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:82
# eb5708739a094eee98fdc23ec0aa048b
msgid "The following :method:`~db.collection.bulkWrite()` performs multiple operations on the collection:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:128
# 0fcf675b091f41e6b48a0ff5f7a98c28
msgid "The operation returns the following:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:147
# 2033cc4c8d85459b92e5de295b038a66
msgid "For more examples, see :ref:`bulkWrite() Examples <bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:151
# e582cbc4a6e04d0f892bd708675478e3
msgid "Strategies for Bulk Inserts to a Sharded Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:153
# acf2b813ebf9454980cc8df35cd9cf47
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:158
# 564e0f5a75334712819aa7a1c1c894d7
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:160
# 9b8ec85a1f1747a2a159b47f33bb6da1
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:168
# 04fa42d85bf847f6a1b146f2f7fe7560
msgid "Unordered Writes to ``mongos``"
msgstr ""

#: ../source/core/bulk-write-operations.txt:170
# 99f530ff76024b9aa3bb260e5546f9ea
msgid "To improve write performance to sharded clusters, use :method:`~db.collection.bulkWrite()` with the optional parameter ``ordered`` set to ``false``. :program:`mongos` can attempt to send the writes to multiple shards simultaneously. For *empty* collections, first pre-split the collection as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:178
# 80885160725844978c38becfb1620900
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-write-operations.txt:180
# f19a4887bb9a41bb8a2d028381ada31e
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-write-operations.txt:185
# 8626a73ef2284175b68047e5c1ff66bf
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:189
# 8844589af0c94a4b9025e31e11f3b21e
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-write-operations.txt:193
# 26d1ca90fa9749c8810d4e4fadb9b40c
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 3caae7b1622a4b698228d2b95c82bf49
msgid "Example"
msgstr ""

#: ../source/core/bulk-write-operations.txt:215
# c01c9fead0d041bbaf04df8e2ada6259
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

