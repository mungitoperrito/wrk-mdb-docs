# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/backups.txt:3
# d7bc5d27c3184eb4990609e97f5688e4
msgid "MongoDB Backup Methods"
msgstr ""

#: ../source/core/backups.txt:0
# f41b0d7ec03642e19ce4b1c4db5d8b5f
msgid "On this page"
msgstr ""

#: ../source/core/backups.txt:13
# a9a30d247b1c4fecaac25780a0ee576e
msgid "When deploying MongoDB in production, you should have a strategy for capturing and restoring backups in the case of data loss events."
msgstr ""

#: ../source/core/backups.txt:18
# ad35a313755a4663857a4a9a66ee0ce1
msgid "Back Up with |MMS| or Ops Manager"
msgstr ""

#: ../source/core/backups.txt:20
# 91395d71c08d44f1adc5b3cdd28d96da
msgid "|MMS| is a hosted back up, monitoring, and automation service for MongoDB. |mms-home| supports backing up and restoring MongoDB :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>` from a graphical user interface."
msgstr ""

#: ../source/core/backups.txt:28
# a2a7d73dce5d4531a86bcb47e6438bf9
msgid "|MMS|"
msgstr ""

#: ../source/core/backups.txt:30
# 70b3664f7cd64aa68ddf4060274fac21
msgid "The |mms-home| supports the backing up and restoring of MongoDB deployments."
msgstr ""

#: ../source/core/backups.txt:33
# 9bc7088ee0b64002ab3c934ea6ceca6b
msgid "|MMS| continually backs up MongoDB :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>` by reading the :term:`oplog` data from your MongoDB deployment. |MMS| creates snapshots of your data at set intervals, and can also offer point-in-time recovery of MongoDB replica sets and sharded clusters."
msgstr ""

#: ../source/core/backups.txt:0
# 3b036dc86a6b406189160888da244fab
msgid "Tip"
msgstr ""

#: ../source/core/backups.txt:43
# fcd828ec08e04408a6e5679b56d343c3
msgid "To get started with |MMS| Backup, sign up for |mms-home|. For documentation on |MMS|, see the |mms-docs|."
msgstr ""

#: ../source/core/backups.txt:51
# fa513ab4a31f41a8b834777c51dbd5e8
msgid "Ops Manager"
msgstr ""

#: ../source/core/backups.txt:53
# 789275b1782244cf9d3a69a8d38f8309
msgid "With Ops Manager, MongoDB subscribers can install and run the same core software that powers :ref:`backup-with-mms` on their own infrastructure. Ops Manager is an on-premise solution that has similar functionality to |MMS| and is available with Enterprise Advanced subscriptions."
msgstr ""

#: ../source/core/backups.txt:58
# e145555184914ae8a45570adf0a321d5
msgid "For more information about Ops Manager, see the `MongoDB Enterprise Advanced <https://www.mongodb.com/products/mongodb-enterprise-advanced?jmp=docs>`_ page and the :opsmgr:`Ops Manager Manual </>`."
msgstr ""

#: ../source/core/backups.txt:66
# 43d284f9934e48d698acfad02e6087a2
msgid "Back Up by Copying Underlying Data Files"
msgstr ""

#: ../source/core/backups.txt:69
# 3ea41d41d58b40f9af43f1a267b133fd
msgid "Back Up with Filesystem Snapshots"
msgstr ""

#: ../source/core/backups.txt:71
# 2492d29597214dde9000111c5399d6e2
msgid "You can create a backup of a MongoDB deployment by making a copy of MongoDB's underlying data files."
msgstr ""

#: ../source/core/backups.txt:74
# 7ac8704c928a41e88a37496b4b13a8a4
msgid "If the volume where MongoDB stores its data files supports point-in-time snapshots, you can use these snapshots to create backups of a MongoDB system at an exact moment in time. File system snapshots are an operating system volume manager feature, and are not specific to MongoDB. With file system snapshots, the operating system takes a snapshot of the volume to use as a baseline for data backup. The mechanics of snapshots depend on the underlying storage system. For example, on Linux, the Logical Volume Manager (LVM) can create snapshots. Similarly, Amazonâ€™s EBS storage system for EC2 supports snapshots."
msgstr ""

#: ../source/core/backups.txt:85
# 637abe65a04d42f39d581ef8577c9652
msgid "To get a correct snapshot of a running :program:`mongod` process, you must have journaling enabled and the journal must reside on the same logical volume as the other MongoDB data files. Without journaling enabled, there is no guarantee that the snapshot will be consistent or valid."
msgstr ""

#: ../source/core/backups.txt:91
# aabf001e47f949f3972eac9d0a4b7e84
msgid "To get a consistent snapshot of a :term:`sharded cluster`, you must disable the balancer and capture a snapshot from every shard as well as a config server at approximately the same moment in time."
msgstr ""

#: ../source/core/backups.txt:95
# 7e94a507605a4ca29006a0f4875b4955
msgid "For more information, see the :doc:`/tutorial/backup-with-filesystem-snapshots` and :doc:`/tutorial/backup-sharded-cluster-with-filesystem-snapshots` for complete instructions on using LVM to create snapshots. Also see :ecosystem:`Back up and Restore Processes for MongoDB on Amazon EC2 </tutorial/backup-and-restore-mongodb-on-amazon-ec2>`."
msgstr ""

#: ../source/core/backups.txt:103
# 0f5f375209174b5ea1d4e4cdc9bda8a0
msgid "Back Up with ``cp`` or ``rsync``"
msgstr ""

#: ../source/core/backups.txt:105
# a664b966054d4e4b8f35f569404d2500
msgid "If your storage system does not support snapshots, you can copy the files directly using ``cp``, ``rsync``, or a similar tool. Since copying multiple files is not an atomic operation, you must stop all writes to the :program:`mongod` before copying the files. Otherwise, you will copy the files in an invalid state."
msgstr ""

#: ../source/core/backups.txt:111
# 428462f52eb34bd29602a162d7d61930
msgid "Backups produced by copying the underlying data do not support point in time recovery for :term:`replica sets <replica set>` and are difficult to manage for larger sharded clusters. Additionally, these backups are larger because they include the indexes and duplicate underlying storage padding and fragmentation. :program:`mongodump`, by contrast, creates smaller backups."
msgstr ""

#: ../source/core/backups.txt:121
# 44d340a36f074bbfaae48656100105f1
msgid "Back Up with ``mongodump``"
msgstr ""

#: ../source/core/backups.txt:123
# 60f0bf5e3b4f431a9891288e2004759b
msgid ":program:`mongodump` reads data from a MongoDB database and creates high fidelity BSON files which the :program:`mongorestore` tool can use to populate a MongoDB database. :program:`mongodump` and :program:`mongorestore` are simple and efficient tools for backing up and restoring small MongoDB deployments, but are not ideal for capturing backups of larger systems."
msgstr ""

#: ../source/core/backups.txt:131
# ee0dfaa258b9420f8381f23fa784174b
msgid ":program:`mongodump` and :program:`mongorestore` operate against a running :program:`mongod` process, and can manipulate the underlying data files directly. By default, :program:`mongodump` does not capture the contents of the :doc:`local database </reference/local-database>`."
msgstr ""

#: ../source/core/backups.txt:136
# 943eb31b2d23441c86addef099c1e2b0
msgid ":program:`mongodump` only captures the documents in the database. The resulting backup is space efficient, but :program:`mongorestore` or :program:`mongod` must rebuild the indexes after restoring data."
msgstr ""

#: ../source/core/backups.txt:140
# 797e8425109a424fb386992faa2f7d1d
msgid "When connected to a MongoDB instance, :program:`mongodump` can adversely affect :program:`mongod` performance. If your data is larger than system memory, the queries will push the working set out of memory, causing :ref:`page faults <administration-monitoring-page-faults>`."
msgstr ""

#: ../source/core/backups.txt:145
# bc98528e66554709ab5cbc228e323463
msgid "Applications can continue to modify data while :program:`mongodump` captures the output. For replica sets, :program:`mongodump` provides the :option:`--oplog <mongodump --oplog>` option to include in its output :term:`oplog` entries that occur during the :program:`mongodump` operation. This allows the corresponding :program:`mongorestore` operation to replay the captured oplog. To restore a backup created with :option:`--oplog <mongodump --oplog>`, use :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option."
msgstr ""

#: ../source/core/backups.txt:154
# fc78c4f7a5e44dc98d3b92b22ad61975
msgid "However, for replica sets, consider :ref:`backup-with-mms` or :ref:`backup-with-mms-onprem`."
msgstr ""

#: ../source/core/backups.txt:157
# b82b232a5358453399f23eb328e642de
msgid "See :doc:`/tutorial/backup-and-restore-tools` and :doc:`/tutorial/backup-sharded-cluster-with-database-dumps` for more information."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:4
# c03acfe7502c4fa3837df6d826dc0933
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:6
# 9c9798b4a3d74ceaa2e9393f3a956f23
msgid "`Backup and it's Role in Disaster Recovery White Paper <https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:7
# 48ee00c04c0e4ff7a6c9fbdc38637a92
msgid "`Backup vs. Replication: Why Do You Need Both? <http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup.rst:8
# 01d29901e0754678ad80bb3168105abf
msgid "`MongoDB Production Readiness Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs#s_product_readiness>`_"
msgstr ""

