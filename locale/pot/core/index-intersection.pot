# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-intersection.txt:3
# 2659ca2a2cfe42eabfe602cc09bbf22e
msgid "Index Intersection"
msgstr ""

#: ../source/core/index-intersection.txt:0
# b3ee75c3b8f849af801bf73a47cb1069
msgid "On this page"
msgstr ""

#: ../source/core/index-intersection.txt:15
# 4ac1c2772d3b458684204fc59d8a0c98
msgid "MongoDB can use the intersection of multiple indexes to fulfill queries. [#previous-versions]_ In general, each index intersection involves two indexes; however, MongoDB can employ multiple/nested index intersections to resolve a query."
msgstr ""

#: ../source/core/index-intersection.txt:20
# e02c419812ae4995b44b88ad374aca84
msgid "To illustrate index intersection, consider a collection ``orders`` that has the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:28
# 073fe2550312423f8762382e5159f2c6
msgid "MongoDB can use the intersection of the two indexes to support the following query:"
msgstr ""

#: ../source/core/index-intersection.txt:35
# cffce35e290f4cda8f0e4477cae65f84
msgid "To determine if MongoDB used index intersection, run :method:`~cursor.explain()`; the results of :ref:`explain() <explain-output-index-intersection>` will include either an ``AND_SORTED`` stage or an ``AND_HASH`` stage."
msgstr ""

#: ../source/core/index-intersection.txt:40
# ec6ab7162df04757b03736bf4a8df539
msgid "In previous versions, MongoDB could use only a single index to fulfill most queries. The exception to this is queries with :query:`$or` clauses, which could use a single index for each :query:`$or` clause."
msgstr ""

#: ../source/core/index-intersection.txt:46
# af5f19bfa39844a6ae66dfff19da2b10
msgid "Index Prefix Intersection"
msgstr ""

#: ../source/core/index-intersection.txt:48
# e6acfb5039704668a3165040e39e79e2
msgid "With index intersection, MongoDB can use an intersection of either the entire index or the index prefix. An index prefix is a subset of a compound index, consisting of one or more keys starting from the beginning of the index."
msgstr ""

#: ../source/core/index-intersection.txt:53
# be02789ab6b84d6cac399ca772071837
msgid "Consider a collection ``orders`` with the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:60
# ef3d90bb59414852a72ea629b16ef130
msgid "To fulfill the following query which specifies a condition on both the ``qty`` field and the ``status`` field, MongoDB can use the intersection of the two indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:71
# 2cbec824296b497f947f3298fa0b3457
msgid "Index Intersection and Compound Indexes"
msgstr ""

#: ../source/core/index-intersection.txt:73
# 67f37ce32cf8498ab55e3e2d94b1a60d
msgid "Index intersection does not eliminate the need for creating :doc:`compound indexes </core/index-compound>`. However, because both the list order (i.e. the order in which the keys are listed in the index) and the sort order (i.e. ascending or descending), matter in :doc:`compound indexes </core/index-compound>`, a compound index may not support a query condition that does not include the :ref:`index prefix keys <compound-index-prefix>` or that specifies a different sort order."
msgstr ""

#: ../source/core/index-intersection.txt:82
# cccd80e48668401a8dc0d548798e1bbe
msgid "For example, if a collection ``orders`` has the following compound index, with the ``status`` field listed before the ``ord_date`` field:"
msgstr ""

#: ../source/core/index-intersection.txt:89
# 5279b5dc3ceb47eb9220518c7a257617
msgid "The compound index can support the following queries:"
msgstr ""

#: ../source/core/index-intersection.txt:101
# cfb806ad01344005bc3d40913104810d
msgid "But not the following two queries:"
msgstr ""

#: ../source/core/index-intersection.txt:108
# 19f32a5abf904616999b88967ffa063d
msgid "However, if the collection has two separate indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:115
# 5b91d296e8794bb681eea8edc444a9cc
msgid "The two indexes can, either individually or through index intersection, support all four aforementioned queries."
msgstr ""

#: ../source/core/index-intersection.txt:118
# c355d482ccf14cd7b331356b7c7abe86
msgid "The choice between creating compound indexes that support your queries or relying on index intersection depends on the specifics of your system."
msgstr ""

#: ../source/core/index-intersection.txt:122
# 90342fdb06e74f8583173717685fc655
msgid ":doc:`compound indexes </core/index-compound>`, :ref:`compound-key-indexes`"
msgstr ""

#: ../source/core/index-intersection.txt:126
# b5d759192fb441248a991ea173bd3c1f
msgid "Index Intersection and Sort"
msgstr ""

#: ../source/core/index-intersection.txt:128
# 1e6da886e26b4abb85bd3854f9dd14ba
msgid "Index intersection does not apply when the :method:`~cursor.sort()` operation requires an index completely separate from the query predicate."
msgstr ""

#: ../source/core/index-intersection.txt:132
# 18f8247838f24c33b2f9cf122bc7e36e
msgid "For example, the ``orders`` collection has the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:141
# 22827be436414cb68c5340445e76b0d8
msgid "MongoDB cannot use index intersection for the following query with sort:"
msgstr ""

#: ../source/core/index-intersection.txt:147
# 0199d61bc56c4874a48d5c8f548189d2
msgid "That is, MongoDB does not use the ``{ qty: 1 }`` index for the query, and the separate ``{ status: 1 }`` or the ``{ status: 1, ord_date: -1 }`` index for the sort."
msgstr ""

#: ../source/core/index-intersection.txt:151
# df281325f94a4de6a424b7d0164161d3
msgid "However, MongoDB can use index intersection for the following query with sort since the index ``{ status: 1, ord_date: -1 }`` can fulfill part of the query predicate."
msgstr ""

