.. _csfle-tutorial-automatic-kmip:

===========================================================
Use Automatic {+csfle+} with KMIP
===========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. tabs-selector:: drivers

Overview
--------

This guide shows you how to build a {+csfle+} ({+csfle-abbrev+})-enabled
application using a Key Management Interoperability Protocol
(KMIP)-compliant **{+kms-long+}** (KMS).

After you complete the steps in this guide, you should have:

- A {+cmk-long+} hosted on a {+kmip-kms+}.
- A working client application that inserts encrypted documents
  using your {+cmk-long+}.

.. note:: Limited Coverage

   This tutorial contains code snippets for Java only, however,
   the following language drivers support performing {+csfle-abbrev+}
   with a {+kmip-kms+}:

   - C#
   - Python
   - Go
   - Node.js

   We plan to add these languages to this guide soon.

Before You Get Started
----------------------

.. include:: /includes/set-up-section.rst

.. include:: /includes/fact-csfle-placeholder.rst

Set Up the KMS
--------------

.. procedure::
   :style: normal

   .. step:: Configure your {+kmip-kms-no-hover+}

      .. include:: /includes/tutorials/automatic/kmip/configure.rst

   .. step:: Specify your Certificates

      .. include:: /includes/tutorials/automatic/kmip/certificates.rst

Create the Application
----------------------

.. procedure::
   :style: normal

   .. step:: Generate your {+dek-long+}

      .. include:: /includes/tutorials/automatic/kmip/dek.rst

   .. step:: Configure the MongoClient

      .. include:: /includes/tutorials/automatic/kmip/client.rst

   .. step:: Insert a Document with Encrypted Fields

      .. include:: /includes/tutorials/automatic/kmip/insert.rst

Learn More
----------

To learn how {+csfle-abbrev+} works, see
:ref:`<csfle-fundamentals>`.

To learn more about the topics mentioned in this guide, see the
following links:

- Learn more about CSFLE components on the :ref:`Reference <csfle-reference>` page.
- Learn how {+cmk-long+}s and {+dek-long+}s work on the :ref:`<csfle-reference-keys-key-vaults>` page
- See how KMS Providers manage your CSFLE keys on the :ref:`<csfle-reference-kms-providers>` page.
