.. _qe-tutorial-automatic-gcp:

=========================================================
Use Automatic {+qe+} with GCP
=========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This guide shows you how to build a {+qe+} enabled
application using Google Cloud Key Management Service.

After you complete the steps in this guide, you should have:

- A {+cmk-abbr+} hosted on Google Cloud Key Management Service.
- A client application that inserts encrypted documents using your {+cmk-abbr+}.

Before You Get Started
----------------------

.. include:: /includes/queryable-encryption/set-up-section.rst

.. see:: Full Application

   To see the complete code for the application you make in this guide,
   select the tab corresponding to your programming language and follow
   the provided link:

   .. tabs::

      .. tab:: Node.js
         :tabid: nodejs

         `Complete Node.js Application <{+sample-app-url-qe+}node-fle-2/gcp/reader/>`__

      .. tab:: Python
         :tabid: python

         `Complete Python Application <{+sample-app-url-qe+}python-fle-2/gcp/reader/>`__

      .. tab:: Java
         :tabid: java-sync

         `Complete Java Application <{+sample-app-url-qe+}java-fle-2/gcp/reader/>`__

      .. tab:: Go
         :tabid: go

         `Complete Go Application <{+sample-app-url-qe+}go-fle-2/gcp/reader/>`__

      .. tab:: C#
         :tabid: csharp

         `Complete Go Application <{+sample-app-url-qe+}dotnet-fle-2/gcp/reader/>`__


.. tabs-selector:: drivers

Set Up the KMS
--------------

.. procedure::
   :style: normal

   .. step:: Register a GCP Service Account

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/register.rst

   .. step:: Create a GCP {+cmk-long+}

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/cmk.rst


Create the Application
----------------------

Select the tab that corresponds to the MongoDB driver you are using in
your application to see relevant code samples.

.. procedure::
   :style: normal

   .. step:: Create a Unique Index on your {+key-vault-long+}

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/key-vault-index.rst

   .. step:: Create your {+dek-long+}s and Encrypted Collection

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/dek.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: nodejs

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-qe+}node-fle-2/gcp/reader/make_data_key.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-qe+}python-fle-2/gcp/reader/make_data_key.py>`__.

            .. tab::
               :tabid: java-sync

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-qe+}java-fle-2/gcp/reader/src/main/java/com/mongodb/csfle/makeDataKey.java>`__.

            .. tab::
               :tabid: go

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-qe+}go-fle-2/gcp/reader/make-data-key.go>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for making a {+dek-long+}, see
               `our Github repository <{+sample-app-url-qe+}dotnet-fle-2/gcp/reader/CSFLE/MakeDataKey.cs>`__.


   .. step:: Configure your MongoClient for Encrypted Reads and Writes

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/client.rst

   .. step:: Insert a Document with Encrypted Fields

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/insert.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: nodejs

               To view the complete code for inserting an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}node-fle-2/gcp/reader/insert_encrypted_document.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for inserting an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}python-fle-2/gcp/reader/insert_encrypted_document.py>`__.

            .. tab::
               :tabid: java-sync

               To view the complete code for inserting an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}java-fle-2/gcp/reader/src/main/java/com/mongodb/csfle/insertEncryptedDocument.java>`__.

            .. tab::
               :tabid: go

               To view the complete code for inserting an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}go-fle-2/gcp/reader/insert-encrypted-document.go>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for inserting an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}dotnet-fle-2/gcp/reader/CSFLE/InsertEncryptedDocument.cs>`__.


   .. step:: Retrieve Your Encrypted Document

      .. include:: /includes/queryable-encryption/tutorials/automatic/gcp/find.rst

      .. see:: Complete Code

         .. tabs-drivers::

            .. tab::
               :tabid: nodejs

               To view the complete code for finding an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}node-fle-2/gcp/reader/insert_encrypted_document.js>`__.

            .. tab::
               :tabid: python

               To view the complete code for finding an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}python-fle-2/gcp/reader/insert_encrypted_document.py>`__.

            .. tab::
               :tabid: java-sync

               To view the complete code for finding an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}java-fle-2/gcp/reader/src/main/java/com/mongodb/csfle/insertEncryptedDocument.java>`__.

            .. tab::
               :tabid: go

               To view the complete code for finding an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}go-fle-2/gcp/reader/insert_encrypted_document.go>`__.

            .. tab::
               :tabid: csharp

               To view the complete code for finding an encrypted document, see
               `our Github repository <{+sample-app-url-qe+}dotnet-fle-2/gcp/reader/CSFLE/InsertEncryptedDocument.cs>`__.


Learn More
----------

To learn more about the topics mentioned in this guide, see the
following links:

- Learn more about {+qe+} components on the :ref:`Reference <qe-reference>` page.
- Learn how {+cmk-long+}s and {+dek-long+}s work on the :ref:`<qe-reference-keys-key-vaults>` page.
- See how KMS Providers manage your {+qe+} keys on the :ref:`<qe-fundamentals-kms-providers>` page.
