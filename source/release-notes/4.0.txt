========================================================
Release Notes for MongoDB 4.0 (Development Series 3.7.x)
========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol


.. include:: /includes/in-dev.rst

Multi-Document Transaction
---------------------------

Starting in version 4.0, MongoDB provides the ability to perform
:doc:`multi-document transactions </core/transactions>` against replica
sets. With multi-document transactions, until a transaction commits, no
write operations in the transaction are visible outside the
transaction. That is, the multi-document transactions are atomic.

.. important::

   The availability of multi-document transaction should not be a
   replacement for effective schema design. For many scenarios, the
   denormalized data model will continue to be optimal for your data
   and use cases.

Feature Compatibility
~~~~~~~~~~~~~~~~~~~~~

The ``featureCompatibilityVersion`` of all members of the replica set
must be ``4.0`` or greater. To check the
``featureCompatibilityVersion`` for a member, connect to the member and
run the following command:

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )

For more information on the ``featureCompatibilityVersion`` flag, see
:dbcommand:`setFeatureCompatibilityVersion`.

``mongo`` Shell Methods
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1

   * - Method
     - Description

   * - :method:`Session.startTransaction()`

     - Starts a multi-statement transaction.

   * - :method:`Session.commitTransaction()`

     - Commits the transaction.

   * - :method:`Session.abortTransaction()`

     - Aborts the transaction.

MongoDB Drivers
~~~~~~~~~~~~~~~

Clients require MongoDB drivers updated for MongoDB 4.0 to use
transactions.

Read Concern ``snapshot``
~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 introduces a new read concern level
:readconcern:`"snapshot"` for :doc:`multi-document transaction
</core/transactions>`.

For a :doc:`multi-document transaction </core/transactions>`, read
concern levels :readconcern:`"local"` and :readconcern:`"majority"` are
promoted to :readconcern:`"snapshot"`.

For a list of all operations that accept read concerns, see
:ref:`read-concern-operations`.

New Type Conversion Operators
-----------------------------

MongoDB 4.0 adds the following new operators for type conversion:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Operator
     - Description

   * - :expression:`$convert`
     - Convert value to specified type.

   * - :expression:`$toBool`
     - Convert value to boolean.

   * - :expression:`$toDate`
     - Convert value to Date.

   * - :expression:`$toDecimal`
     - Convert value to Decimal128.

   * - :expression:`$toDouble`
     - Convert value to Double.

   * - :expression:`$toInt`
     - Convert value to integer.

   * - :expression:`$toLong`
     - Convert value to long.

   * - :expression:`$toObjectId`
     - Convert value to ObjectId.

   * - :expression:`$toString`
     - Convert value to string.


Security
--------

.. _4.0-scram-sha-256:

Add Support for ``SCRAM-SHA-256``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note::

   To use :ref:`SCRAM-SHA-256 <authentication-scram-sha-256>`, the
   ``featureCompatibilityVersion`` must be set to ``4.0``. For more
   information on featureCompatibilityVersion, see :ref:`view-fcv` and
   :dbcommand:`setFeatureCompatibilityVersion`.

MongoDB adds support for :ref:`authentication-scram` authentication
mechanism :ref:`SCRAM-SHA-256 <scram-mechanisms>`, which uses the SHA-256
hash function. To modify the iteration count for ``SCRAM-SHA-256``,
MongoDB adds a new parameter :parameter:`scramSHA256IterationCount`.

New Command and Method Option
``````````````````````````````

When creating or updating a SCRAM user, you can indicate the specific
SCRAM mechanism or mechanisms to use for the user credentials.
Specifically, MongoDB 4.0 adds the ``mechanisms`` option to the
following commands and :binary:`~bin.mongo` shell helpers:

.. list-table::
   :header-rows: 1

   * - Command
     - Method
   * - :dbcommand:`createUser`
     - :method:`db.createUser()`

   * - :dbcommand:`updateUser`
     - :method:`db.updateUser()`

When using ``SCRAM-SHA-256``, MongoDB (i.e. the server) requires
undigested password. Starting in MongoDB 4.0, the default value of
``digestPassword`` is ``true`` for :dbcommand:`createUser`, and the
default value of ``passwordDigestor`` is ``"server"``. In earlier
MongoDB versions, ``digestPassword`` is ``false`` and ``client``
respectively.

.. _4.0-mongodb-cr:

Remove Support for ``MONGODB-CR``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting in version 4.0, MongoDB removes support for the deprecated
MongoDB Challenge-Response (``MONGODB-CR``) authentication mechanism.

Since version 3.0, MongoDB has not supported the creation of
``MONGODB-CR`` users unless the deployment had been upgraded from a 2.6
or earlier deployment that already had ``MONGODB-CR`` users and had not
upgraded the authentication schema.

If your deployment has user credentials stored in ``MONGODB-CR``
schema, you must upgrade to :ref:`Salted Challenge Response
Authentication Mechanism (SCRAM) <authentication-scram>` **before** you
upgrade to version 4.0. For information on upgrading to ``SCRAM``, see
:doc:`/release-notes/3.0-scram`.

``usersInfo`` Enhancement
~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`usersInfo` command can return information across all databases
by specifying:

.. code-block:: javascript

   { usersInfo: { forAllDBs: true } }

The :dbcommand:`usersInfo` and the :binary:`~bin.mongo` shell helpers
:method:`db.getUser()` and :method:`db.getUsers()` method accept a new
optional ``filter`` document. The filter document specifies
:pipeline:`$match` stage conditions to return information only for
users that match the conditions.

The :dbcommand:`usersInfo` command and the :binary:`~bin.mongo` shell helpers
:method:`db.getUser()` and :method:`db.getUsers()` method return the
``mechanisms`` field for the user.

.. _4.0-deprecate-mmapv1:

Deprecate MMAPv1
----------------

Starting in version 4.0, MongoDB deprecates the :ref:`storage-mmapv1`
and will remove MMAPv1 in a future release.

To change your MMAPv1 storage engine deployment to
:doc:`/core/wiredtiger`, see:

- :doc:`/tutorial/change-standalone-wiredtiger`

- :doc:`/tutorial/change-replica-set-wiredtiger`

- :doc:`/tutorial/change-sharded-cluster-wiredtiger`

Replica Set
-----------

.. _4.0-remove-pv0:

Remove ``pv0`` for Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 removes the deprecated replica set protocol version 0
``pv0``.

Before upgrading to MongoDB 4.0, you must upgrade to :rsconf:`pv1
<protocolVersion>`.

To upgrade to ``pv1``, connect a :binary:`~bin.mongo` shell to the
replica set primary and perform the following sequence of operations:

.. code-block:: sh

   cfg = rs.conf();
   cfg.protocolVersion=1;
   rs.reconfig(cfg);

You can use :rsconf:`~settings.catchUpTimeoutMillis` to prioritize
between faster failovers and preservation of :writeconcern:`w:1
<\<number\>>` writes.

For more information on ``pv1``, see
:doc:`/reference/replica-set-protocol-versions`.

.. _4.0-remove-master-slave:

Remove Master-Slave Replication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

MongoDB 4.0 removes support for the deprecated master-slave
replication. Before you can upgrade to MongoDB 4.0, if your deployment
uses master-slave replication, you must upgrade to a replica set.

To convert your master-slave replication, see
:ref:`convert-master-slave-to-replica-set`.

Journaling and Replica Sets
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/wiredtiger-node-nojournal.rst

``replSetGetStatus`` Output Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The :dbcommand:`replSetGetStatus` returns the following new fields:

- :data:`~replSetGetStatus.syncSourceHost`

- :data:`~replSetGetStatus.syncSourceId`

- :data:`~replSetGetStatus.lastStableCheckpointTimestamp`

- :data:`~replSetGetStatus.members[n].syncSourceHost`

- :data:`~replSetGetStatus.members[n].syncSourceId`

The following fields returned from :dbcommand:`replSetGetStatus` are
deprecated:

- :data:`replSetGetStatus.syncingTo`

- :data:`replSetGetStatus.members[n].syncingTo`

Platform Support
----------------

- MongoDB 4.0 does not support SLES 11.
   Support for SLES 11 has also been removed in MongoDB 3.2.20+,
   3.4.15+, and 3.6.4+.

- MongoDB 4.0 does not support Ubuntu 12.04.
   Support for Ubuntu 12.04 has also been removed in MongoDB 3.2.20+,
   3.4.15+, and 3.6.4+.

- MongoDB 4.0 binaries for macOS support TLS 1.2.

General Improvements
--------------------

- The geospatial query operators :query:`$near` and
  :query:`$nearSphere` now supports querying on sharded collections.


Changes Affecting Compatibility
-------------------------------

Some changes can affect compatibility and may require user actions. For
a detailed list of compatibility changes, see
:doc:`/release-notes/4.0-compatibility`.

Report an Issue
---------------

To report an issue, see
https://github.com/mongodb/mongo/wiki/Submit-Bug-Reports for
instructions on how to file a JIRA ticket for the MongoDB server or one
of the related projects.

.. class:: hidden

   .. toctree::

      /release-notes/4.0-compatibility
