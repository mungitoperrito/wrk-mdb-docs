title:
  text: Open an Administrator command prompt.
  character: "~"
stepnum: 1
ref: open-command-prompt
pre: |
  Press the ``Win`` key, type ``cmd.exe``, and press ``Ctrl + Shift + Enter``
  to run the :guilabel:`Command Prompt` as Administrator.
post: |
  Execute the remaining steps from the Administrator command prompt.
---
title: Create directories.
stepnum: 2
ref: create-directories
pre: |
  Create directories for your database and log files:
action:
  language: powershell
  copyable: true
  code: |
    mkdir c:\data\db
    mkdir c:\data\log
---
title: Create a MongoDB configuration file.
stepnum: 3
ref: create-configuration-file
content: |
  Using your preferred text editor, create a MongoDB configuration
  file.

  .. note::
     MongoDB configuration files use the
     `YAML <http://yaml.org>`__ file format. Per the `YAML 1.2
     specification <http://yaml.org/spec/1.2/spec.html#id2777534>`__,
     all indents must use spaces to maintain portability. To ensure no
     parsing errors, enclose all values in double quotation marks
     (``"``) and escape any backslash characters (``\``).

  The file *must* set :setting:`systemLog.path`. Include additional
  :doc:`configuration options </reference/configuration-options>` as
  needed.

  .. example::

     Create a file at ``C:\Program Files\MongoDB\Server\{+version+}\mongod.cfg``
     that specifies both :setting:`systemLog.path` and
     :setting:`storage.dbPath`:

     .. code-block:: yaml

        systemLog:
          destination: "file"
          path: "c:\\data\\log\\mongod.log"
        storage:
          dbPath: "c:\\data\\db"
---
title: Create the MongoDB service.
stepnum: 4
ref: create-mongodb-service
action:
  - pre: "Create the MongoDB service."
    language: powershell
    copyable: true
    code: |
      sc.exe create MongoDB ^
        binPath= "\"C:\Program Files\MongoDB\Server\{+version+}\bin\mongod.exe\" ^
        --service --config=\"C:\Program Files\MongoDB\Server\{+version+}\mongod.cfg\"" ^
        DisplayName= "MongoDB" start= "auto"
    post: |
      ``sc.exe`` requires a space between "=" and the configuration values
      (eg "binPath= "), and a "\\" to escape double quotes.
  - pre: "If successfully created, the following log message will display:"
    language: powershell
    code: |
      [SC] CreateService SUCCESS
---
title: Start the MongoDB service.
stepnum: 5
ref: start-mongodb-service
action:
  pre: |
    Close all other command prompts, then invoke the following command:
  language: powershell
  copyable: true
  code: |
    net start MongoDB
---
stepnum: 6
source:
  file: steps-run-mongodb-on-linux.yaml
  ref: verify
pre: |
  Verify that MongoDB has started successfully by checking the
  log file at ``c:\data\log\mongod.log`` for the following line:
post: |
  If you modified the :setting:`systemLog.path`
  configuration file option, open the log file at that location to
  examine the process output.

  You may see non-critical warnings in the process
  output. As long as you see the log line shown above, you can safely
  ignore these warnings during your initial evaluation of MongoDB.
---
title: Connect to MongoDB.
stepnum: 7
ref: connect
pre: |
  To connect to MongoDB through the :binary:`~bin.mongo.exe <mongo>` shell,
  open another :guilabel:`Command Prompt`.
action:
    copyable: true
    language: powershell
    code: |
      "C:\Program Files\MongoDB\Server\{+version+}\bin\mongo.exe"
post: |
   If you want to develop applications using .NET, see the documentation
   of :ecosystem:`C# and MongoDB </drivers/csharp>` for more information.
---
title: Stop or remove the MongoDB service as needed.
stepnum: 8
ref: stop-mongodb-service
action:
  - pre: "To stop the MongoDB service, use the following command:"
    language: powershell
    code: |
      net stop MongoDB
  - pre: |
      To remove the MongoDB service, first stop the service and then
      run the following command:
    language: powershell
    code: |
      sc.exe delete MongoDB
...
