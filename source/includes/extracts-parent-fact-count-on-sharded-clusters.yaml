ref: _fact-count-sharded-clusters
content: |
  On a sharded cluster, {{countOp}} can result in an *inaccurate* count if
  :term:`orphaned documents <orphaned document>` exist or if a
  :doc:`chunk migration </core/sharding-balancer-administration>` is in progress.

  To avoid these situations, on a sharded cluster, use the
  :method:`db.collection.aggregate()` method:

  - You can use the :pipeline:`$count` stage to count the documents.
    For example, the following operation counts the documents in a
    collection:

  .. code-block:: javascript

     db.collection.aggregate(
        [
           { $count: "myCount" }
        ]
     )

  - You can use the :pipeline:`$group` stage to :group:`$sum` the
    documents. For example, the following operation counts the
    documents in a collection:

  .. code-block:: javascript

     db.collection.aggregate(
        [
           { $group: { _id: null, count: { $sum: 1 } } }
        ]
     )

  Even for count operations where a query predicate is specified,
  :method:`db.collection.aggregate()` is the preferred over the
  :dbcommand:`count` command and its :binary:`~bin.mongo` shell helpers
  :method:`~cursor.count()` and :method:`db.collection.count()`. For an
  approximate count, see also the :pipeline:`$collStats` aggregation stage.

  For more examples of using aggregation to perform count, see also
  :pipeline:`$count` stage and :pipeline:`$group` stage.

...