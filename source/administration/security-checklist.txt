==================
Security Checklist
==================

.. default-domain:: mongodb

This documents provides a list of security measures that you should implement to
protect your MongoDB installation.


Checklist/Considerations
------------------------

.. _checklist-auth:

|arrow| Enable Access Control and Enforce Authentication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Enable access control and specify the authentication mechanism.
       You can use the default MongoDB authentication mechanism or an
       existing external framework. Authentication requires that all
       clients and servers provide valid credentials before they can
       connect to the system. In clustered deployments, enable
       authentication for each MongoDB server.

       See :doc:`/core/authentication` and
       :doc:`/tutorial/enable-authentication`.

.. _security-checklist-role-based-access-control:

|arrow| Configure Role-Based Access Control
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Create a user administrator **first**, then create additional
       users. Create a unique MongoDB user for each person/application
       that accesses the system.
       |
       Create roles that define the exact access a set of users needs.
       Follow a principle of least privilege. Then create users and
       assign them only the roles they need to perform their
       operations. A user can be a person or a client application.


       See :doc:`/core/authorization` and
       :doc:`/tutorial/manage-users-and-roles`.

|arrow| Encrypt Communication (TLS/SSL)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Configure MongoDB to use TLS/SSL for all incoming and outgoing
       connections. Use TLS/SSL to encrypt communication between
       :binary:`~bin.mongod` and :binary:`~bin.mongos` components of a
       MongoDB deployment as well as between all applications and
       MongoDB.

       .. include:: /includes/fact-tls-libraries.rst

       .. note::

          .. include:: /includes/fact-tls-1.0.rst

       See :doc:`/tutorial/configure-ssl`.

.. |binary| replace:: MongoDB

|arrow| Encrypt and Protect Data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Starting with MongoDB Enterprise 3.2, the WiredTiger storage
       engine's native :doc:`/core/security-encryption-at-rest` can be
       configured to encrypt data in the storage layer.

   * -

     - If you are not using WiredTiger's encryption at rest, MongoDB
       data should be encrypted on each host using file-system, device,
       or physical encryption. Protect MongoDB data using file-system
       permissions. MongoDB data includes data files, configuration
       files, auditing logs, and key files.

       
|arrow| Limit Network Exposure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Ensure that MongoDB runs in a trusted network environment and
       limit the interfaces on which MongoDB instances listen for
       incoming connections. Allow only trusted clients to access the
       network interfaces and ports on which MongoDB instances are
       available.

       .. note::

          .. include:: /includes/fact-default-bind-ip-change.rst

       See :doc:`/core/security-hardening` and the
       :setting:`net.bindIp` setting.

|arrow| Audit System Activity
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Track access and changes to database configurations and data.
       `MongoDB Enterprise
       <http://www.mongodb.com/products/mongodb-enterprise-advanced?jmp-docs>`_ 
       includes a system auditing facility that can record
       system events (e.g. user operations, connection events) on a
       MongoDB instance. These audit records permit forensic analysis
       and allow administrators to verify proper controls.

       See :doc:`/core/auditing` and
       :doc:`/tutorial/configure-auditing`.

|arrow| Run MongoDB with a Dedicated User
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - Run MongoDB processes with a dedicated operating system user
       account. Ensure that the account has permissions to access data
       but no unnecessary permissions.

       See :doc:`/installation` for more information on running MongoDB.

|arrow| Run MongoDB with Secure Configuration Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - MongoDB supports the execution of JavaScript code for certain
       server-side operations: :dbcommand:`mapReduce` and
       :query:`$where`. If you do not use these operations, disable
       server-side scripting by using the :option:`--noscripting
       <mongod --noscripting>` option on the command line.

   * -

     - Use only the MongoDB wire protocol on production deployments.

   * -

     - Keep input validation enabled. MongoDB enables input validation
       by default through the :setting:`net.wireObjectCheck` setting.
       This ensures that all documents stored by the
       :binary:`~bin.mongod` instance are valid :term:`BSON`.

.. see::

   :doc:`/core/security-hardening`.

|arrow| Request a Security Technical Implementation Guide (where applicable)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - The Security Technical Implementation Guide (STIG) contains
       security guidelines for deployments within the United States
       Department of Defense. MongoDB Inc. provides its STIG, upon
       request, for situations where it is required. Please `request a
       copy <http://www.mongodb.com/lp/contact/stig-requests>`_ for
       more information.

|arrow| Consider Security Standards Compliance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 5 95

   * -

     - For applications requiring HIPAA or PCI-DSS compliance, please
       refer to the `MongoDB Security Reference Architecture
       <https://www.mongodb.com/collateral/mongodb-security-architecture>`_
       to learn more about how you can use the key security
       capabilities to build compliant application infrastructure.


.. |arrow| unicode:: U+27A4
