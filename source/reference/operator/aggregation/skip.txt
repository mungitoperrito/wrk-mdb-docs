===================
$skip (aggregation)
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. pipeline:: $skip

   Skips over the specified number of :term:`documents <document>` that
   pass into the stage and passes the remaining documents to the next
   stage in the :term:`pipeline`.

   The :pipeline:`$skip` stage has the following prototype form:

   .. code-block:: javascript

      { $skip: <positive integer> }

   :pipeline:`$skip` takes a positive integer that specifies the
   maximum number of documents to skip.

Behavior
--------

Using $skip with Sorted Results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If using the :pipeline:`$skip` stage with any of:

- the :pipeline:`$sort` aggregation stage,
- the :method:`~cursor.sort()` method, or
- the ``sort`` field to the :dbcommand:`findAndModify` command or the
  :method:`~db.collection.findAndModify()` shell method.

be sure that you are performing a *stable sort* before passing results
to the :pipeline:`$skip` stage. A stable sort ensures that the sort
order of returned documents remains the same across multiple executions
of the same sort; especially important when used with the
:pipeline:`$skip` stage.

See the following for more information on each:

- :ref:`Stable sorting with $sort (aggregation)
  <sort-aggregation-stable-sorting>`
- :ref:`Stable sorting with the sort() method
  <sort-cursor-stable-sorting>`
- :ref:`Stable sorting with the findAndModify command
  <findandmodify-command-stable-sorting>`
- :ref:`Stable sorting with the findAndModify() method
  <findandmodify-method-stable-sorting>`

Example
-------

Consider the following example:

.. code-block:: javascript

   db.article.aggregate([
       { $skip : 5 }
   ]);

This operation skips the first 5 documents passed to it by the
pipeline. :pipeline:`$skip` has no effect on the content of the
documents it passes along the pipeline.

.. seealso::
   :doc:`/tutorial/aggregation-zip-code-data-set`,
   :doc:`/tutorial/aggregation-with-user-preference-data`
