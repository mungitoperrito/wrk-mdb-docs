==========================
KeyVault.getKeyByAltName()
==========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. versionadded:: 4.2

.. include:: /includes/fact-client-side-field-level-encryption-beta.rst

.. method:: KeyVault.getKeyByAltName(keyAltName)

   Gets all data keys with the specified ``keyAltName``. 

   :method:`~KeyVault.getKeyByAltName()` has the following syntax:

   .. code-block:: none

      keyVault = db.getMongo().getKeyVault()
      
      keyVault.getKeyByAltName("keyAltName")

:returns: 
  
  Document representing a matching data key.

  Returns nothing if no data key has the specified ``keyAltName``.

Behavior
--------

Requires Configuring Client-Side Field Level Encryption on Database Connection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/csfle-requires-enabling-encryption.rst

Example
-------

.. note::

   .. include:: /includes/extracts/csfle-environmental-variables.rst

The following operation issued from the :binary:`~bin.mongo` shell:

- Establishes a connection to the ``myMongo.example.net`` cluster with
  client-side field level encryption enabled.

- Retrieves the key vault object using the encryption-enabled connection object.

- Retrieves a data key with the specified ``keyAltName``.

.. code-block:: javascript
   :emphasize-lines: 18

   clientSideFLEOptions = {
     "keyVaultNamespace" : "encryption.dataKeys",
     "kmsProviders" : {
       "aws" : {
         "accessKeyId" : "AWS_ACCESS_KEY_ID",
         "secretAccessKey" : "AWS_SECRET_ACCESS_KEY"
       }
     }
   }

   encryptedClient = Mongo( 
     "mongodb://myMongo.example.net:27017/?replSetName=myMongo", 
     clientSideFLEOptions
   )

   keyVault = encryptedClient.getKeyVault();

   keyVault.getKeyByAltName("ssn-encryption-key")

:method:`~KeyVault.getKeyByAltName()` returns the following data key:

.. code-block:: json

   {
       "_id" : UUID("b4b41b33-5c97-412e-a02b-743498346079"),
       "keyMaterial" : BinData(0,"PXRsLOAYxhzTS/mFQAI8486da7BwZgqA91UI7NKz/T/AjB0uJZxTvhvmQQsKbCJYsWVS/cp5Rqy/FUX2zZwxJOJmI3rosPhzV0OI5y1cuXhAlLWlj03CnTcOSRzE/YIrsCjMB0/NyiZ7MRWUYzLAEQnE30d947XCiiHIb8a0kt2SD0so8vZvSuP2n0Vtz4NYqnzF0CkhZSWFa2e2yA=="),
       "creationDate" : ISODate("2019-08-12T21:21:30.569Z"),
       "updateDate" : ISODate("2019-08-12T21:21:30.569Z"),
       "status" : 0,
       "version" : NumberLong(0),
       "masterKey" : {
           "provider" : "local"
       },
       "keyAltNames" : [
           "ssn-encryption-key"
       ]
   }
