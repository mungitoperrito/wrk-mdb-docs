================================
db.collection.getSearchIndexes()
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Definition
----------

.. method:: db.collection.getSearchIndexes()

.. |fts-indexes| replace:: :atlas:`{+fts+} indexes </atlas-search/atlas-search-overview/#fts-indexes>`

.. include:: /includes/atlas-search-commands/command-descriptions/getSearchIndexes-description.rst

.. include:: /includes/atlas-search-commands/atlas-only-db-command.rst

.. include:: /includes/fact-mongosh-shell-method.rst

Syntax
------

Command syntax:

.. code-block:: javascript

   db.<collection>.getSearchIndexes(<indexName>)

Command Fields
--------------

``getSearchIndexes()`` takes this field:

.. list-table::
  :header-rows: 1
  :widths: 20 20 20 80

  * - Field
    - Type
    - Necessity
    - Description

  * - ``indexName``
    - string
    - Optional
    - Name of the index to return information about. If you omit the
      ``indexName`` field, ``getSearchIndexes()`` returns information
      about all Atlas Search indexes on the collection.

Access Control
--------------

.. |method-name| replace:: ``getSearchIndexes()``

.. include:: /includes/atlas-search-commands/access-control/list-access-control.rst

Output
------

.. |status-link| replace:: :ref:`search-index-status`

.. include:: /includes/atlas-search-commands/command-output/listSearchIndex-output.rst

.. _search-index-status:

Atlas Search Index Statuses
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/atlas-search-commands/command-output/search-index-statuses.rst

Examples 
--------

These examples demonstrate how to:

- :ref:`getSearchIndexes-return-all`

- :ref:`getSearchIndexes-return-one`

.. _getSearchIndexes-return-all:

Return All Search Indexes
~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns all Atlas Search indexes on the ``movies``
collection:

.. code-block:: javascript
   
   db.movies.getSearchIndexes()

Sample output:

.. code-block:: javascript
   :copyable: false

   [
     {
       id: '648b5397d8261c7d7d6f720e',
       name: 'searchIndex01',
       status: 'READY',
       queryable: true,
       latestDefinition: { mappings: { dynamic: true } }
     },
     {
       id: '648b6110912df5513228465f',
       name: 'frenchIndex01',
       status: 'PENDING',
       queryable: false,
       latestDefinition: {
         mappings: {
           fields: {
             subject: {
               fields: { fr: { analyzer: 'lucene.french', type: 'string' } },
               type: 'document'
             }
           }
         }
       }
     }
   ]

The ``movies`` collection contains two indexes:

- ``searchIndex01`` is in the ``READY`` state.

- ``frenchIndex01`` is in the ``PENDING`` state.

.. _getSearchIndexes-return-one:

Return a Single Search Index
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example returns the ``searchIndex01`` index on the
``movies`` collection:

.. code-block:: javascript
   
   db.movies.getSearchIndexes("searchIndex01")

Sample output:

.. code-block:: javascript
   :copyable: false

   [
     {
       id: '648cb60e06f6780ba87a9913',
       name: 'searchIndex01',
       status: 'READY',
       queryable: true,
       latestDefinition: { mappings: { dynamic: true } }
     }
   ]
