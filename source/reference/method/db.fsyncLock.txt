==============
db.fsyncLock()
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. meta::
   :description: fsync, fsynclock, fsync lock, lock
   :keywords: fsync, fsynclock, fsync lock, lock

Definition
----------

.. method:: db.fsyncLock()

   Flushes all pending writes from the storage layer to disk and locks the
   server to prevent any additional writes until the lock is released.  

   .. versionadded:: 7.1

      When the ``db.fsyncLock`` method runs on :program:`mongos`, it applies an
      fsync lock to each shard in the cluster.
   
   .. |dbcommand| replace:: :dbcommand:`fsync` command
   .. include:: /includes/fact-mongosh-shell-method-alt.rst


   .. include:: /includes/fsync-lock-method

   :method:`db.fsyncLock()`  has the syntax:

   .. code-block:: javascript

      db.fsyncLock()

   The operation returns a document with the following fields:

   .. list-table::
      :header-rows: 1

      * - Field
        - Description

      * - ``info``
        - Information on the status of the operation.
      * - ``lockCount``  
        - Number of locks currently on the instance.
      * - ``seeAlso`` 
        - Link to the :dbcommand:`fsync` command documentation.
      * - ``ok`` 
        - The status code.

   :method:`db.fsyncLock()` is an administrative command. Use this method to 
   lock a server or cluster before :ref:`backup operations <backup-methods>`.

Behavior
--------

.. include:: /includes/extracts/wt-fsync-lock-compatibility.rst

Example
-------

The following operation runs :method:`db.fsyncLock()`:

.. code-block:: javascript

   db.fsyncLock()

The operation returns the following status document that includes the
``lockCount``:

.. code-block:: javascript

   {
      "info" : "now locked against writes, use db.fsyncUnlock() to unlock",
      "lockCount" : NumberLong(1),
      "seeAlso" : "http://dochub.mongodb.org/core/fsynccommand",
      "ok" : 1
   }

If you run :method:`db.fsyncLock()` again, the operation increments the
``lockCount``:

.. code-block:: javascript

   {
      "info" : "now locked against writes, use db.fsyncUnlock() to unlock",
      "lockCount" : NumberLong(2),
      "seeAlso" : "http://dochub.mongodb.org/core/fsynccommand",
      "ok" : 1
   }

To unlock the instance for writes, you must run
:method:`db.fsyncUnlock()` twice to reduce the ``lockCount`` to 0.
