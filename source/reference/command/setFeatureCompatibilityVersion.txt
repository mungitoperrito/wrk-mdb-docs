==============================
setFeatureCompatibilityVersion
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. dbcommand:: setFeatureCompatibilityVersion

   .. versionadded:: 3.4

   Enables or disables :ref:`MongoDB 3.4 features that persist data
   that are backwards-incompatible with MongoDB 3.2
   <setFeatureCompatibilityVersion-features>`. You can only issue the
   :dbcommand:`setFeatureCompatibilityVersion` against the ``admin``
   database.

   The command takes the following form:

   .. code-block:: javascript

      db.adminCommand( { setFeatureCompatibilityVersion: <version> } )

   where ``<version>`` can be:

   - ``"3.4"`` to enable the backward incompatible features, or
   - ``"3.2"`` to disable these features.

   .. note::

      .. include:: /includes/list-run-command-targets.rst

Behavior
--------

.. _setFeatureCompatibilityVersion-features:
 
Affected Features
~~~~~~~~~~~~~~~~~

The following 3.4 features persist data that earlier MongogDB versions
cannot correctly handle and require that
``featureCompatibilityVersion`` be set to ``"3.4"``:

- :ref:`3.4-relnotes-views`

- :ref:`3.4-relnotes-collation`

- :ref:`3.4-decimal`

- Index version ``v: 2``. ``v:2`` indexes add support for collation and
  decimal data type. Earlier index versions support neither collation
  nor the decimal data type.

  If ``featureCompatibilityVersion: "3.4"``, indexes created in MongoDB
  3.4 default to ``v: 2`` . Otherwise, new indexes default to ``v: 1``.

.. warning::

   .. include:: /includes/3.4-featureCompatibility-caveat.rst

Default Values
~~~~~~~~~~~~~~

.. include:: /includes/list-table-featureCompatibilityVersion-defaults.rst

Idempotency
~~~~~~~~~~~

This command must perform writes to an internal system collection. If
for any reason the command does not complete successfully, you can
safely retry the command as the operation is idempotent.

Examples
--------

Enable 3.4 Backwards Incompatible Features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To enable the :ref:`3.4 backwards-incompatible features
<setFeatureCompatibilityVersion-features>`, run the
``setFeatureCompatibilityVersion`` command against the ``admin``
database:

.. note::

   .. include:: /includes/list-run-command-targets.rst

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.4" } )

.. warning::

   .. include:: /includes/3.4-featureCompatibility-caveat.rst

Disable 3.4 Backwards Incompatible Features
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To disable the :ref:`3.4 backwards-incompatible features
<setFeatureCompatibilityVersion-features>`, run the
``setFeatureCompatibilityVersion`` command against the ``admin``
database:

.. note::

   .. include:: /includes/list-run-command-targets.rst

.. code-block:: javascript

   db.adminCommand( { setFeatureCompatibilityVersion: "3.2" } )

Setting the ``featureCompatibilityVersion`` to ``"3.2`` disables the
use of these features and does not remove existing usage of these
features.

If performed as part of a downgrade to 3.2 procedure, you must also
manually remove the existing usage before downgrading the binaries. For
details, see :ref:`3.4-downgrade-features-prereq`.

View FeatureCompatibilityVersion
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To view the ``featureCompatibilityVersion`` for a :program:`mongod`
instance, run the following command on a :program:`mongod` instance:

.. note::
   The operation is undefined on the :program:`mongos` instances.

.. code-block:: javascript

   db.adminCommand( { getParameter: 1, featureCompatibilityVersion: 1 } )
