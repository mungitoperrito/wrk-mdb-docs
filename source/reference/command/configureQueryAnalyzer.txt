.. _configureQueryAnalyzer:

======================
configureQueryAnalyzer
======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
------------

.. dbcommand:: configureQueryAnalyzer

   .. versionadded:: 7.0

   Configures query sampling for a collection on a replica set or
   sharded cluster.

Syntax
------

The command has the following syntax:

.. code-block:: javascript

   db.adminCommand( 
      {
        configureQueryAnalyzer: <string>,
        mode: <string>,
        samplesPerSecond: <double>
      } 
   )

Command Fields
~~~~~~~~~~~~~~

``configureQueryAnalyzer`` has the following fields:

.. list-table::
   :header-rows: 1
   :widths: 20 20 20 40 
 
   * - Field
     - Type
     - Necessity
     - Description

   * - ``configureQueryAnalyzer``
     - string
     - Required
     - :term:`namespace` of the collection to configure for query 
       sampling.

   * - ``mode``
     - string
     - Required
     - Mode the query analyzer runs in. Must be set to either 
       ``"full"`` or ``"off"``. 

   * - ``samplesPerSecond``
     - double
     - Optional
     - Number of samples per second. 
       
       - When ``mode`` is set to ``"full"``, ``samplesPerSecond`` must 
         be set between ``0`` and ``50``.
       - When ``mode`` is set to ``"off"``, the server ignores
         ``samplesPerSecond``.

       For details, see :ref:`<samplesPerSecond-limit>`.

Access Control
~~~~~~~~~~~~~~

The ``configureQueryAnalyzer`` command requires one of the following 
roles:

- :authrole:`dbAdmin` role against the database that contains the 
  collection being analyzed 
- :authrole:`clusterManager` role against the cluster

Behavior
--------

Consider the following behavior when running ``configureQueryAnalyzer``:

Dropped Collections and Renamed Collections
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Query sampling is disabled automatically when the collection is dropped 
or renamed. If you want to sample queries after a collection is 
recreated or renamed, you must reconfigure query sampling.

.. _samplesPerSecond-limit:

samplesPerSeconds Upper Limit
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The upper limit for ``samplesPerSecond`` is ``50``. A higher rate 
causes the sampled queries to fill up 10GB of disk space in less than 
four days.

.. _samplesPerSecond-limit-table:

This table shows the estimated disk usage for each sample rate and 
duration combination: 

.. list-table::
   :header-rows: 1
   :widths: 20 20 20 20 20

   * - Average Sampled Query Size (kB)
     - ``samplesPerSecond``
     - Sampling Duration (Days)
     - Number of Sampled Queries
     - Total Size of Sampled Queries (GB)

   * - 0.5
     - 0.1
     - 7
     - 60,480
     - 0.03024

   * - 0.5
     - 10
     - 7
     - 6,048,000
     - 3.024

   * - 0.5
     - 50
     - 7
     - 30,240,000
     - 15.12

   * - 1000
     - 50
     - 1
     - 4,320,000
     - 4320

   * - 16,000
     - 50
     - 1 
     - 432,0000
     - 69,120

queryAnalysisSampleExpirationSecs 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sampled queries are stored in an internal collection that has a TTL 
index with ``expireAfterSeconds``. Configure ``expireAfterSeconds`` 
with the ``queryAnalysisSampleExpirationSecs`` server parameter.
Sampled queries are automatically deleted after 
``queryAnalysisSampleExpirationSecs``.

Limitations
~~~~~~~~~~~

- You cannot run ``configureQueryAnalyzer`` on Atlas 
  :atlas:`multitenant </docs/atlas/build-multi-tenant-arch/>`
  configurations.
- You cannot run ``configureQueryAnalyzer`` on standalone deployments.
- You cannot run ``configureQueryAnalyzer`` directly against a 
  :option:`--shardsvr <mongod --shardsvr>` replica set. 
  When running on a sharded cluster, ``configureQueryAnalyzer`` 
  must run against a ``mongos``.
- You cannot run ``configureQueryAnalyzer`` against 
  :ref:`timeseries <cmd-shard-collection-timeseries>` collections.
- You cannot run ``configureQueryAnalyzer`` against collections
  with :ref:`Queryable Encryption <qe-manual-feature-qe>`.

Examples
--------

Enable Query Sampling
~~~~~~~~~~~~~~~~~~~~~

To enable query sampling on the ``test.students`` collection at a 
rate of five samples per second, use the following command:

.. code-block:: javascript

   db.adminCommand(
      {
        configureQueryAnalyzer: "test.students",
        mode: "full",
        samplesPerSecond: 5
      } 
   )

Disable Query Sampling
~~~~~~~~~~~~~~~~~~~~~~

To disable query sampling on the ``test.students`` collection,
use the following command:

.. code-block:: javascript

   db.adminCommand(
      {
        configureQueryAnalyzer: "test.students",
        mode: "off"
      } 
   )

